{"sections":[],"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}],"modules":[{"name":"VernissageServer"}],"title":"newUser(request:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Register new user."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Request","preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}],"name":"request"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","isActive":true,"type":"reference"},{"type":"text","text":" with new generated "},{"type":"codeVoice","code":"id"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,","type":"text"},{"text":" ","type":"text"},{"text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure ","type":"text"},{"code":"reCaptcha","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}]},{"inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"text":"In the email there will be link with address to the client application (from ","type":"text"},{"code":"redirectBaseUrl","type":"codeVoice"},{"type":"text","text":"). Client application should"},{"text":" ","type":"text"},{"text":"serve the page will can retrieve two parameters:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"token"},{"text":" - string, GUID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"userId"},{"text":" - new user identifier","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Client application have to read that parameters and use endpoint ","type":"text"},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}],"type":"paragraph"},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint URL: "},{"code":"\/api\/v1\/account\/register","type":"codeVoice"},{"text":".","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}]},{"syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example request body:","type":"text"}]}],"type":"paragraph"},{"syntax":"json","type":"codeListing","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (200 OK):"}]}]},{"type":"codeListing","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"syntax":"json"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body (field validation):"}],"type":"strong"}],"type":"paragraph"},{"code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"],"syntax":"json","type":"codeListing"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example response body (business logic validation):","type":"text"}],"type":"strong"}]},{"syntax":"json","type":"codeListing","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"]},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"Validation.validationError"},{"text":" if validation errors occurs.","type":"text"}]}],"type":"aside"},{"type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.securityTokenIsMandatory","type":"codeVoice"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}],"type":"paragraph"}],"name":"Throws","style":"note"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.securityTokenIsInvalid","type":"codeVoice"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"text":" if user with provided user name already exists in the system.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Throws","style":"note"},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"text":" if email is already connected with other account.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.missingEmail"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}]}]},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}],"type":"paragraph"}],"type":"aside","style":"note"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"text":"if registration is disabled.","type":"text"}]}],"name":"Throws"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userHaveToAcceptAgreement"},{"text":" if user have to accept agreement.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"type":"text","text":" if reason is mandatory when only registration by approval is enabled."}]}],"style":"note","type":"aside","name":"Throws"},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"type":"text","text":" if invitation token is invalid."}],"type":"paragraph"}]},{"name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenHasBeenUsed"},{"type":"text","text":" if invitation token has been used."}],"type":"paragraph"}],"style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"text":" if user Id not exists. Probably saving of the user entity failed.","type":"text"}]}],"name":"Throws","style":"note","type":"aside"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.disposableEmailCannotBeUsed"},{"type":"text","text":" if disposabled email has been used."}]}]}]}],"references":{"doc://VernissageServer/documentation/VernissageServer":{"kind":"symbol","url":"\/documentation\/vernissageserver","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"role":"collection","type":"topic"},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"type":"topic","navigatorTitle":[{"text":"UserDto","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vernissageserver\/userdto","role":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","abstract":[],"title":"UserDto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserDto"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"kind":"symbol","abstract":[{"type":"text","text":"Controller for adding new user into the system."}],"role":"symbol","url":"\/documentation\/vernissageserver\/registercontroller","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterController"}],"title":"RegisterController","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","navigatorTitle":[{"kind":"identifier","text":"RegisterController"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"title":"RegisterUserDto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","abstract":[],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}],"url":"\/documentation\/vernissageserver\/registeruserdto","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterUserDto"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"abstract":[{"text":"Register new user.","type":"text"}],"url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","type":"topic","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}],"title":"newUser(request:)"}}}