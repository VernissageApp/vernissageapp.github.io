{"kind":"symbol","sections":[],"metadata":{"symbolKind":"method","externalID":"s:16VernissageServer18RegisterControllerV7newUser7request5Vapor8ResponseCAF7RequestC_tYaYbKF","title":"newUser(request:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"VernissageServer"}]},"variants":[{"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@Sendable"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"request","content":[{"inlineContent":[{"text":"The Vapor request to the endpoint ","type":"text"},{"isActive":true,"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"Entity ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto"},{"type":"text","text":" with new generated "},{"type":"codeVoice","code":"id"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"type":"codeVoice","code":"reCaptcha"},{"text":",","type":"text"},{"type":"text","text":" "},{"text":"which will prevent bots from creating accounts.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"During account creation process server will send to the user inbox email with information how to confirm his email address.","type":"text"},{"type":"text","text":" "},{"text":"In the email there will be link with address to the client application (from ","type":"text"},{"code":"redirectBaseUrl","type":"codeVoice"},{"text":"). Client application should","type":"text"},{"text":" ","type":"text"},{"text":"serve the page will can retrieve two parameters:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"token"},{"text":" - string, GUID","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"userId"},{"type":"text","text":" - new user identifier"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Client application have to read that parameters and use endpoint "},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Endpoint URL: ","type":"text"},{"type":"codeVoice","code":"\/api\/v1\/account\/register"},{"text":".","type":"text"}]}],"name":"Important","style":"important"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}]},{"syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example request body:"}],"type":"strong"}],"type":"paragraph"},{"type":"codeListing","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (200 OK):","type":"text"}]}]},{"type":"codeListing","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (field validation):","type":"text"}]}]},{"type":"codeListing","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"],"syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (business logic validation):"}]}]},{"syntax":"json","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"type":"codeListing"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"Validation.validationError","type":"codeVoice"},{"type":"text","text":" if validation errors occurs."}]}],"style":"note","name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}]}],"type":"aside","style":"note","name":"Throws"},{"style":"note","name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}],"type":"paragraph"}]},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"type":"text","text":" if user with provided user name already exists in the system."}]}]},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.emailIsAlreadyConnected","type":"codeVoice"},{"type":"text","text":" if email is already connected with other account."}]}]},{"style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.missingEmail","type":"codeVoice"},{"text":" if email has not been specified but itâ€™s mandatory.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}]}],"type":"aside","style":"note"},{"type":"aside","name":"Throws","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"type":"text","text":"if registration is disabled."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userHaveToAcceptAgreement","type":"codeVoice"},{"text":" if user have to accept agreement.","type":"text"}]}],"name":"Throws","style":"note","type":"aside"},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.reasonIsMandatory","type":"codeVoice"},{"text":" if reason is mandatory when only registration by approval is enabled.","type":"text"}]}]},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenIsInvalid","type":"codeVoice"},{"text":" if invitation token is invalid.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenHasBeenUsed"},{"type":"text","text":" if invitation token has been used."}]}],"type":"aside"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"type":"text","text":" if user Id not exists. Probably saving of the user entity failed."}]}],"name":"Throws"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.disposableEmailCannotBeUsed","type":"codeVoice"},{"type":"text","text":" if disposabled email has been used."}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}]}],"abstract":[{"type":"text","text":"Register new user."}],"references":{"doc://VernissageServer/documentation/VernissageServer/UserDto":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UserDto"}],"type":"topic","kind":"symbol","url":"\/documentation\/vernissageserver\/userdto","navigatorTitle":[{"kind":"identifier","text":"UserDto"}],"title":"UserDto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","abstract":[]},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"url":"\/documentation\/vernissageserver\/registercontroller","abstract":[{"type":"text","text":"Controller for adding new user into the system."}],"title":"RegisterController","navigatorTitle":[{"kind":"identifier","text":"RegisterController"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegisterController","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"title":"newUser(request:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"kind":"symbol","abstract":[{"type":"text","text":"Register new user."}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","type":"topic"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"navigatorTitle":[{"text":"RegisterUserDto","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RegisterUserDto","kind":"identifier"}],"title":"RegisterUserDto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","role":"symbol","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/vernissageserver\/registeruserdto"},"doc://VernissageServer/documentation/VernissageServer":{"url":"\/documentation\/vernissageserver","type":"topic","role":"collection","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"kind":"symbol"}}}