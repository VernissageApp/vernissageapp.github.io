{"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer"]]},"kind":"article","seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/hostvernissageserver"]}],"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"inlineContent":[{"text":"Vernissage API server is created in ","type":"text"},{"identifier":"https:\/\/www.swift.org\/","isActive":true,"type":"reference"},{"type":"text","text":" language with "},{"isActive":true,"type":"reference","identifier":"https:\/\/vapor.codes"},{"type":"text","text":" framework."},{"text":" ","type":"text"},{"type":"text","text":"We can run it in all operating systems supporting "},{"code":"Swift","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Vapor","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"text":"Prerequisites","type":"heading","anchor":"Prerequisites","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Install the "},{"type":"codeVoice","code":"GD"},{"type":"text","text":" library on your computer. If you’re using macOS, install Homebrew then run the command "},{"type":"codeVoice","code":"brew install gd"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"If you’re using Linux, run ","type":"text"},{"type":"codeVoice","code":"apt-get libgd-dev"},{"type":"text","text":" as root."}]},{"level":2,"text":"Architecture","type":"heading","anchor":"Architecture"},{"type":"codeListing","code":["               +-----------------------------+","               |   VernissageWeb (Angular)   |","               +-------------+---------------+","                             |","                             |","               +-----------------------------+","               |   VernissageAPI (Swift)     |","               +-------------+---------------+","                             |","         +-------------------+-------------------+","         |                   |                   |","+--------+--------+   +------+------+   +--------+-----------+","|   PostgreSQL    |   |    Redis    |   |  ObjectStorage S3  |","+-----------------+   +-------------+   +--------------------+"],"syntax":null},{"anchor":"Getting-started","text":"Getting started","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"After clonning the reposity you can easly run the API. Go to main repository folder and run the command:","type":"text"}]},{"type":"codeListing","code":["$ swift run"],"syntax":"bash"},{"inlineContent":[{"type":"text","text":"API should start. Configuration will be read from "},{"type":"codeVoice","code":"appsettings.json"},{"text":" file. SQLite database will be used. You can sign in using default ","type":"text"},{"code":"admin","type":"codeVoice"},{"text":" account (with password: ","type":"text"},{"code":"admin","type":"codeVoice"},{"text":"). For example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"bash","code":["$ curl --location 'http:\/\/localhost:8080\/api\/v1\/account\/login' \\","--header 'Accept: application\/json' \\","--header 'Content-Type: application\/json' \\","--data-raw '{","    \"userNameOrEmail\": \"admin\",","    \"password\": \"admin\"","}'"]},{"inlineContent":[{"type":"text","text":"Request will return JSON:"}],"type":"paragraph"},{"type":"codeListing","code":["{","    \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpZCI6IjcyNTA3Mjk3NzcyNjEyMzYyMjUiLCJhcHBsaWNhdGlvbiI6IlZlcm5pc3NhZ2UgMS4wLjAtYWxwaGExIiwicm9sZXMiOlsiYWRtaW5pc3RyYXRvciJdLCJ1c2VyTmFtZSI6ImFkbWluIiwibmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6ImFkbWluQGxvY2FsaG9zdCIsImV4cCI6MTcwNjE2OTE1Mi4zODk5NTMxfQ.Z87v9HvfBM6fn6F8fu06ToPShT9F55G74wL676SLmSdLMzyz3ykfsmS-GDNIqfUatfwdBvSxQgpjUO6IzYAuQKZ925tdN8DwN6kVAEa2mJLlntc66qAkQSiPeXYEl29Cgbg6TuAvxghWVO5PVliMG8mxO7uwSFDN095mNxbee8x8P-ogL176vXBhJ_rWcm1fY7_n-qSn6XN2GbgjiywnOZfvHNNtLvbikcpJeIAzHH-BlXolWsUauuZGZBeFv5TuBr13r5PZfVar0FH9Uwj39w5DV3jxlwRPyejux4LL96dvrEsP4Btx88c3SSLyxm1REfRR_wKoUoXK8iVqfBU6TQ\",","    \"refreshToken\": \"U8zMqw1tGHqIk0cUXmvAEcwYIpsQlwWUxHa0fnXbu\"","}"],"syntax":"json"},{"inlineContent":[{"text":"After successfully sign in you can use other endpoints (with ","type":"text"},{"type":"codeVoice","code":"Authentication: Bearer"},{"type":"text","text":" header)."}],"type":"paragraph"},{"text":"Custom configuration","level":2,"type":"heading","anchor":"Custom-configuration"},{"inlineContent":[{"text":"In local development environment you can create ","type":"text"},{"type":"codeVoice","code":"appsettings.local.json"},{"text":" file (near ","type":"text"},{"code":"appsettings.json","type":"codeVoice"},{"text":" file). This file can look like that:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"vernissage\": {","        \"baseAddress\": \"http:\/\/localhost:8080\",","        \"connectionString\": \"postgres:\/\/postgres:secretpass@localhost:5432\/postgres\",","        \"queueUrl\": \"redis:\/\/127.0.0.1:6379\",","        \"s3Address\": \"https:\/\/s3.eu-central-1.amazonaws.com\",","        \"s3Region\": \"eu-central-1\",","        \"s3Bucket\": \"your-bucket-test\",","        \"s3AccessKeyId\": \"ASDA8AS8HSDSU\",","        \"s3SecretAccessKey\": \"DSfEaBUYIhoouHhigygGtldDpLesmXCz10ICe0F\"","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Here you can configure three external resources:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"connectionString"},{"text":" - you can use SQLite or Postgres database connection string","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"queueUrl"},{"type":"text","text":" - URL to Redis in memory data store (used as cache and queue by Vernissage)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"s3*","type":"codeVoice"},{"type":"text","text":" - configuration of S3 storage. Here you can use any external S3 compatible cloud storage or "},{"type":"reference","identifier":"https:\/\/min.io","isActive":true},{"type":"text","text":" docker ("},{"identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"reference","isActive":true},{"type":"text","text":")"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"In production environment you can override configuration parameters by environment variables. For example if you want to set custom ","type":"text"},{"type":"codeVoice","code":"baseAddress"},{"type":"text","text":" you have to define variable: "},{"type":"codeVoice","code":"VERNISSAGE_BASEADDRESS"},{"type":"text","text":", etc."}]},{"type":"heading","level":2,"anchor":"Docker","text":"Docker"},{"inlineContent":[{"type":"text","text":"In production environments, it is best to use a "},{"isActive":true,"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}],"metadata":{"images":[{"type":"card","identifier":"host-server-card.jpg"}],"roleHeading":"Article","role":"article","title":"Host Vernissage API","modules":[{"name":"VernissageServer"}]},"references":{"host-server-card.jpg":{"identifier":"host-server-card.jpg","type":"image","variants":[{"url":"\/images\/host-server-card@2x.jpg","traits":["2x","light"]}],"alt":null},"https://hub.docker.com/repository/docker/mczachurski/vernissage-server":{"type":"link","url":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","titleInlineContent":[{"text":"docker image","type":"text"}],"title":"docker image","identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server"},"doc://VernissageServer/documentation/VernissageServer/HostVernissageWeb":{"role":"article","images":[{"identifier":"host-web-card.jpg","type":"card"}],"url":"\/documentation\/vernissageserver\/hostvernissageweb","abstract":[{"type":"text","text":"Application which is Web component for Vernissage photos sharing platform."}],"kind":"article","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","title":"Host Vernissage WEB","type":"topic"},"doc://VernissageServer/documentation/VernissageServer/BuildDocumentation":{"kind":"article","title":"Build the documentation","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation","type":"topic","role":"article","url":"\/documentation\/vernissageserver\/builddocumentation","abstract":[{"type":"text","text":"This documentation is created by DocC tool."}]},"https://www.swift.org/":{"identifier":"https:\/\/www.swift.org\/","title":"Swift","type":"link","url":"https:\/\/www.swift.org\/","titleInlineContent":[{"text":"Swift","type":"text"}]},"https://min.io":{"title":"minio","titleInlineContent":[{"text":"minio","type":"text"}],"url":"https:\/\/min.io","type":"link","identifier":"https:\/\/min.io"},"https://vapor.codes":{"identifier":"https:\/\/vapor.codes","title":"Vapor","type":"link","url":"https:\/\/vapor.codes","titleInlineContent":[{"text":"Vapor","type":"text"}]},"https://hub.docker.com/r/minio/minio":{"title":"https:\/\/hub.docker.com\/r\/minio\/minio","titleInlineContent":[{"text":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"text"}],"url":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"link","identifier":"https:\/\/hub.docker.com\/r\/minio\/minio"},"host-web-card.jpg":{"identifier":"host-web-card.jpg","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/host-web-card@2x.jpg"}],"alt":"The profile image for web documentation."},"doc://VernissageServer/documentation/VernissageServer":{"role":"collection","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","type":"topic","url":"\/documentation\/vernissageserver","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}]}}}