{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hostvernissageserver","title":"Host Vernissage Server (API)","type":"article"},{"path":"\/documentation\/vernissageserver\/hostvernissageweb","title":"Host Vernissage WEB","type":"article"},{"path":"\/documentation\/vernissageserver\/builddocumentation","title":"Build the documentation","type":"article"},{"title":"Controllers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/changeemail(request:)","title":"func changeEmail(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/changepassword(request:)","title":"func changePassword(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/confirm(request:)","title":"func confirm(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/disabletwofactorauthentication(request:)","title":"func disableTwoFactorAuthentication(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/enabletwofactorauthentication(request:)","title":"func enableTwoFactorAuthentication(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/forgotpasswordconfirm(request:)","title":"func forgotPasswordConfirm(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/forgotpasswordtoken(request:)","title":"func forgotPasswordToken(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/gettwofactortoken(request:)","title":"func getTwoFactorToken(request: Request) async throws -> TwoFactorTokenDto","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/login(request:)","title":"func login(request: Request) async throws -> AccessTokenDto","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/refresh(request:)","title":"func refresh(request: Request) async throws -> AccessTokenDto","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/resend(request:)","title":"func resend(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/revoke(request:)","title":"func revoke(request: Request) async throws -> HTTPStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accountcontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/accountcontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/accountcontroller","title":"AccountController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/followers(request:)","title":"func followers(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/following(request:)","title":"func following(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/inbox(request:)","title":"func inbox(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/outbox(request:)","title":"func outbox(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/read(request:)","title":"func read(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/status(request:)","title":"func status(request: Request) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubactorscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubactorscontroller","title":"ActivityPubActorsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedcontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedcontroller\/inbox(request:)","title":"func inbox(request: Request) async throws -> HTTPStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedcontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubsharedcontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubsharedcontroller","title":"ActivityPubSharedController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentscontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/attachmentscontroller\/update(request:)","title":"func update(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/attachmentscontroller\/upload(request:)","title":"func upload(request: Request) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/attachmentscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/attachmentscontroller","title":"AttachmentsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/create(request:)","title":"func create(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/list(request:)","title":"func list(request: Request) async throws -> [AuthClientDto]","type":"method"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/read(request:)","title":"func read(request: Request) async throws -> AuthClientDto","type":"method"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/update(request:)","title":"func update(request: Request) async throws -> AuthClientDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/authenticationclientscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/authenticationclientscontroller","title":"AuthenticationClientsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarscontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/avatarscontroller\/update(request:)","title":"func update(request: Request) async throws -> HTTPStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/avatarscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/avatarscontroller","title":"AvatarsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/bookmarkscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/bookmarkscontroller\/list(request:)","title":"func list(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/bookmarkscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/bookmarkscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/bookmarkscontroller","title":"BookmarksController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoriescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoriescontroller\/list(request:)","title":"func list(request: Request) async throws -> [CategoryDto]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoriescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/categoriescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/categoriescontroller","title":"CategoriesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countriescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countriescontroller\/list(request:)","title":"func list(request: Request) async throws -> [CountryDto]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countriescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/countriescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/countriescontroller","title":"CountriesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/favouritescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/favouritescontroller\/list(request:)","title":"func list(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/favouritescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/favouritescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/favouritescontroller","title":"FavouritesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequestscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequestscontroller\/approve(request:)","title":"func approve(request: Request) async throws -> RelationshipDto","type":"method"},{"path":"\/documentation\/vernissageserver\/followrequestscontroller\/list(request:)","title":"func list(request: Request) async throws -> LinkableResultDto<RelationshipDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/followrequestscontroller\/reject(request:)","title":"func reject(request: Request) async throws -> RelationshipDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequestscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/followrequestscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/followrequestscontroller","title":"FollowRequestsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headerscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headerscontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/headerscontroller\/update(request:)","title":"func update(request: Request) async throws -> HTTPStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headerscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/headerscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/headerscontroller","title":"HeadersController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/identitycontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/identitycontroller\/authenticate(request:)","title":"func authenticate(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/identitycontroller\/callback(request:)","title":"func callback(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/identitycontroller\/login(request:)","title":"func login(request: Request) async throws -> AccessTokenDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/identitycontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/identitycontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/identitycontroller","title":"IdentityController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancecontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancecontroller\/instance(request:)","title":"func instance(request: Request) async throws -> InstanceDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancecontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/instancecontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/instancecontroller","title":"InstanceController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationscontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationscontroller\/generate(request:)","title":"func generate(request: Request) async throws -> InvitationDto","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationscontroller\/list(request:)","title":"func list(request: Request) async throws -> [InvitationDto]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/invitationscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/invitationscontroller","title":"InvitationsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensescontroller\/list(request:)","title":"func list(request: Request) async throws -> [LicenseDto]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/licensescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/licensescontroller","title":"LicensesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationscontroller\/read(request:)","title":"func read(request: Request) async throws -> LocationDto","type":"method"},{"path":"\/documentation\/vernissageserver\/locationscontroller\/search(request:)","title":"func search(request: Request) async throws -> [LocationDto]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/locationscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/locationscontroller","title":"LocationsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/nodeinfocontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/nodeinfocontroller\/nodeinfo2(request:)","title":"func nodeinfo2(request: Request) async throws -> NodeInfoDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/nodeinfocontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/nodeinfocontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/nodeinfocontroller","title":"NodeInfoController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscontroller\/count(request:)","title":"func count(request: Request) async throws -> NotificationsCountDto","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationscontroller\/list(request:)","title":"func list(request: Request) async throws -> LinkableResultDto<NotificationDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationscontroller\/marker(request:)","title":"func marker(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationscontroller","title":"NotificationsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registercontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registercontroller\/isemailconnected(request:)","title":"func isEmailConnected(request: Request) async throws -> BooleanResponseDto","type":"method"},{"path":"\/documentation\/vernissageserver\/registercontroller\/isusernametaken(request:)","title":"func isUserNameTaken(request: Request) async throws -> BooleanResponseDto","type":"method"},{"path":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","title":"func newUser(request: Request) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registercontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/registercontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/registercontroller","title":"RegisterController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipscontroller\/relationships(request:)","title":"func relationships(request: Request) async throws -> [RelationshipDto]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/relationshipscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/relationshipscontroller","title":"RelationshipsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportscontroller\/close(request:)","title":"func close(request: Request) async throws -> ReportDto","type":"method"},{"path":"\/documentation\/vernissageserver\/reportscontroller\/create(request:)","title":"func create(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/reportscontroller\/list(request:)","title":"func list(request: Request) async throws -> PaginableResultDto<ReportDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/reportscontroller\/restore(request:)","title":"func restore(request: Request) async throws -> ReportDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/reportscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/reportscontroller","title":"ReportsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rolescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rolescontroller\/list(request:)","title":"func list(request: Request) async throws -> [RoleDto]","type":"method"},{"path":"\/documentation\/vernissageserver\/rolescontroller\/read(request:)","title":"func read(request: Request) async throws -> RoleDto","type":"method"},{"path":"\/documentation\/vernissageserver\/rolescontroller\/update(request:)","title":"func update(request: Request) async throws -> RoleDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rolescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/rolescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/rolescontroller","title":"RolesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchcontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchcontroller\/search(request:)","title":"func search(request: Request) async throws -> SearchResultDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchcontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/searchcontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/searchcontroller","title":"SearchController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingscontroller\/publicsettings(request:)","title":"func publicSettings(request: Request) async throws -> PublicSettingsDto","type":"method"},{"path":"\/documentation\/vernissageserver\/settingscontroller\/settings(request:)","title":"func settings(request: Request) async throws -> SettingsDto","type":"method"},{"path":"\/documentation\/vernissageserver\/settingscontroller\/update(request:)","title":"func update(request: Request) async throws -> SettingsDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/settingscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/settingscontroller","title":"SettingsController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/applycontentwarning(request:)","title":"func applyContentWarning(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/bookmark(request:)","title":"func bookmark(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/context(request:)","title":"func context(request: Request) async throws -> StatusContextDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/create(request:)","title":"func create(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/favourite(request:)","title":"func favourite(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/favourited(request:)","title":"func favourited(request: Request) async throws -> LinkableResultDto<UserDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/feature(request:)","title":"func feature(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/list(request:)","title":"func list(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/read(request:)","title":"func read(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/reblog(request:)","title":"func reblog(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/reblogged(request:)","title":"func reblogged(request: Request) async throws -> LinkableResultDto<UserDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/unbookmark(request:)","title":"func unbookmark(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/unfavourite(request:)","title":"func unfavourite(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/unfeature(request:)","title":"func unfeature(request: Request) async throws -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/unlist(request:)","title":"func unlist(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/unreblog(request:)","title":"func unreblog(request: Request) async throws -> StatusDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/statusescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusescontroller","title":"StatusesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/category(request:)","title":"func category(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/featured(request:)","title":"func featured(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/hashtag(request:)","title":"func hashtag(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/home(request:)","title":"func home(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/list(request:)","title":"func list(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/timelinescontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/timelinescontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/timelinescontroller","title":"TimelinesController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingcontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingcontroller\/hashtags(request:)","title":"func hashtags(request: Request) async throws -> LinkableResultDto<HashtagDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingcontroller\/statuses(request:)","title":"func statuses(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingcontroller\/users(request:)","title":"func users(request: Request) async throws -> LinkableResultDto<UserDto>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingcontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingcontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendingcontroller","title":"TrendingController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userscontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userscontroller\/approve(request:)","title":"func approve(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/connect(request:)","title":"func connect(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/delete(request:)","title":"func delete(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/disable(request:)","title":"func disable(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/disconnect(request:)","title":"func disconnect(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/enable(request:)","title":"func enable(request: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/follow(request:)","title":"func follow(request: Request) async throws -> RelationshipDto","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/followers(request:)","title":"func followers(request: Request) async throws -> LinkableResultDto<UserDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/following(request:)","title":"func following(request: Request) async throws -> LinkableResultDto<UserDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/list(request:)","title":"func list(request: Request) async throws -> PaginableResultDto<UserDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/mute(request:)","title":"func mute(request: Request) async throws -> RelationshipDto","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/read(request:)","title":"func read(request: Request) async throws -> UserDto","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/reject(request:)","title":"func reject(request: Request) async throws -> HTTPResponseStatus","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/statuses(request:)","title":"func statuses(request: Request) async throws -> LinkableResultDto<StatusDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/unfollow(request:)","title":"func unfollow(request: Request) async throws -> RelationshipDto","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/unmute(request:)","title":"func unmute(request: Request) async throws -> RelationshipDto","type":"method"},{"path":"\/documentation\/vernissageserver\/userscontroller\/update(request:)","title":"func update(request: Request) async throws -> UserDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userscontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/userscontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userscontroller","title":"UsersController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/wellknowncontroller\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/wellknowncontroller\/hostmeta(request:)","title":"func hostMeta(request: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/wellknowncontroller\/nodeinfo(request:)","title":"func nodeinfo(request: Request) async throws -> NodeInfoLinkDto","type":"method"},{"path":"\/documentation\/vernissageserver\/wellknowncontroller\/webfinger(request:)","title":"func webfinger(request: Request) async throws -> WebfingerDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/wellknowncontroller\/boot(routes:)","title":"func boot(routes: any RoutesBuilder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/wellknowncontroller\/routecollection-implementations","title":"RouteCollection Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/wellknowncontroller","title":"WellKnownController","type":"class"},{"title":"Data Transfer Objects","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/init(accesstoken:refreshtoken:)","title":"init(accessToken: String, refreshToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/accesstoken","title":"var accessToken: String","type":"property"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/refreshtoken","title":"var refreshToken: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/decoderequest(_:)-6jfsu","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/decoderequest(_:)-7rs4u","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/accesstokendto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/accesstokendto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accesstokendto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/accesstokendto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/accesstokendto","title":"AccessTokenDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/init(type:source:target:sharedinbox:id:privatekey:)","title":"init(type: ActivityPubFollowRequestDto.FollowRequestType, source: String, target: String, sharedInbox: URL, id: Int64, privateKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/id","title":"let id: Int64","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/privatekey","title":"let privateKey: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/sharedinbox","title":"let sharedInbox: URL","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/source","title":"let source: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/target","title":"let target: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/type","title":"let type: ActivityPubFollowRequestDto.FollowRequestType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/follow","title":"case follow","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/unfollow","title":"case unfollow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/decoderequest(_:)-6hjjq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/decoderequest(_:)-8xlcx","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/followrequesttype","title":"ActivityPubFollowRequestDto.FollowRequestType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/decoderequest(_:)-1fneh","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/decoderequest(_:)-3t67l","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequestdto","title":"ActivityPubFollowRequestDto","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/init(approved:requesting:asked:inbox:id:orginalrequestid:privatekey:)","title":"init(approved: Bool, requesting: String, asked: String, inbox: URL, id: Int64, orginalRequestId: String, privateKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/approved","title":"let approved: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/asked","title":"let asked: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/id","title":"let id: Int64","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/inbox","title":"let inbox: URL","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/orginalrequestid","title":"let orginalRequestId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/privatekey","title":"let privateKey: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/requesting","title":"let requesting: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/decoderequest(_:)-5rltg","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/decoderequest(_:)-pycu","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponddto","title":"ActivityPubFollowRespondDto","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/init(activity:headers:bodyhash:bodyvalue:httpmethod:httppath:)","title":"init(activity: ActivityDto, headers: [String : String], bodyHash: String?, bodyValue: String, httpMethod: ActivityPubRequestMethod, httpPath: ActivityPubRequestPath)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/activity","title":"let activity: ActivityDto","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/bodyhash","title":"let bodyHash: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/bodyvalue","title":"let bodyValue: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/headers","title":"let headers: [String : String]","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/httpmethod","title":"let httpMethod: ActivityPubRequestMethod","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/httppath","title":"let httpPath: ActivityPubRequestPath","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/decoderequest(_:)-7zgpm","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/decoderequest(_:)-9t662","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubrequestdto","title":"ActivityPubRequestDto","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/put","title":"case put","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/decoderequest(_:)-331pi","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/decoderequest(_:)-wlhz","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubrequestmethod\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubrequestmethod","title":"ActivityPubRequestMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/sharedinbox","title":"case sharedInbox","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/userinbox(_:)","title":"case userInbox(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/useroutbox(_:)","title":"case userOutbox(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/path()","title":"func path() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/decoderequest(_:)-1imb5","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/decoderequest(_:)-1x298","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubrequestpath\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubrequestpath","title":"ActivityPubRequestPath","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/init(activitypubstatusid:activitypubprofile:published:activitypubreblogprofile:activitypubreblogstatusid:statusid:userid:orginalstatusid:)","title":"init(activityPubStatusId: String, activityPubProfile: String, published: Date, activityPubReblogProfile: String, activityPubReblogStatusId: String, statusId: Int64, userId: Int64, orginalStatusId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/activitypubprofile","title":"let activityPubProfile: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/activitypubreblogprofile","title":"let activityPubReblogProfile: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/activitypubreblogstatusid","title":"let activityPubReblogStatusId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/activitypubstatusid","title":"let activityPubStatusId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/orginalstatusid","title":"let orginalStatusId: Int64","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/published","title":"let published: Date","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/statusid","title":"let statusId: Int64","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/userid","title":"let userId: Int64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/decoderequest(_:)-6y4qb","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/decoderequest(_:)-7xwhd","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubunreblogdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubunreblogdto","title":"ActivityPubUnreblogDto","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/init(from:basestoragepath:)","title":"init(from: Attachment, baseStoragePath: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/init(id:originalfile:smallfile:description:blurhash:metadata:location:license:)","title":"init(id: String?, originalFile: FileInfoDto, smallFile: FileInfoDto, description: String?, blurhash: String?, metadata: MetadataDto?, location: LocationDto?, license: LicenseDto?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/blurhash","title":"var blurhash: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/license","title":"var license: LicenseDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/location","title":"var location: LocationDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/metadata","title":"var metadata: MetadataDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/originalfile","title":"var originalFile: FileInfoDto","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/smallfile","title":"var smallFile: FileInfoDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/decoderequest(_:)-6xyq6","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/decoderequest(_:)-8dugk","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachmentdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/attachmentdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmentdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachmentdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/attachmentdto","title":"AttachmentDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/init(from:)-4llvb","title":"init(from: AuthClient)","type":"init"},{"path":"\/documentation\/vernissageserver\/authclientdto\/init(id:type:name:uri:tenantid:clientid:clientsecret:callbackurl:svgicon:)","title":"init(id: String?, type: AuthClientType, name: String, uri: String, tenantId: String?, clientId: String, clientSecret: String, callbackUrl: String, svgIcon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/callbackurl","title":"var callbackUrl: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/clientsecret","title":"var clientSecret: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/svgicon","title":"var svgIcon: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/tenantid","title":"var tenantId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/type","title":"var type: AuthClientType","type":"property"},{"path":"\/documentation\/vernissageserver\/authclientdto\/uri","title":"var uri: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/decoderequest(_:)-90hmy","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/decoderequest(_:)-wsab","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/authclientdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/init(from:)-5n6si","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/authclientdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/authclientdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validate(_:)-4uyrg","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validate(_:)-8ui6e","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validate(query:)-8fbud","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validate(query:)-8wxue","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/authclientdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/authclientdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/authclientdto","title":"AuthClientDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/init(result:)","title":"init(result: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/result","title":"var result: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/decoderequest(_:)-1nnk5","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/decoderequest(_:)-5jcoz","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/booleanresponsedto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/booleanresponsedto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/booleanresponsedto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/booleanresponsedto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/booleanresponsedto","title":"BooleanResponseDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/init(from:)-78el4","title":"init(from: Category)","type":"init"},{"path":"\/documentation\/vernissageserver\/categorydto\/init(from:)-7gmpm","title":"init?(from: Category?)","type":"init"},{"path":"\/documentation\/vernissageserver\/categorydto\/init(id:name:)","title":"init(id: String?, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/categorydto\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/categorydto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/categorydto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/categorydto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/decoderequest(_:)-45oka","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/categorydto\/decoderequest(_:)-mnua","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/categorydto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/init(from:)-75pqv","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/categorydto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categorydto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/categorydto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/categorydto","title":"CategoryDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/init(email:redirectbaseurl:)","title":"init(email: String, redirectBaseUrl: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/email","title":"var email: String","type":"property"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/redirectbaseurl","title":"var redirectBaseUrl: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/decoderequest(_:)-4smty","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/decoderequest(_:)-5ld25","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/changeemaildto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/changeemaildto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/changeemaildto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validate(_:)-4jig3","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validate(_:)-5kk19","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validate(query:)-8i1hh","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validate(query:)-8n8j4","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/changeemaildto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/changeemaildto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/changeemaildto","title":"ChangeEmailDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/init(currentpassword:newpassword:)","title":"init(currentPassword: String, newPassword: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/currentpassword","title":"var currentPassword: String","type":"property"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/newpassword","title":"var newPassword: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/decoderequest(_:)-8mpmy","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/decoderequest(_:)-9auib","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validate(_:)-8y63g","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validate(_:)-9az3q","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validate(query:)-1v6uz","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validate(query:)-3hf36","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/changepasswordrequestdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/changepasswordrequestdto","title":"ChangePasswordRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/init(supportedmimetypes:imagesizelimit:)","title":"init(supportedMimeTypes: [String], imageSizeLimit: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/imagesizelimit","title":"var imageSizeLimit: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/supportedmimetypes","title":"var supportedMimeTypes: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/decoderequest(_:)-189db","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/decoderequest(_:)-95bq0","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/configurationattachmentsdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/configurationattachmentsdto","title":"ConfigurationAttachmentsDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/init(statuses:attachments:)","title":"init(statuses: ConfigurationStatusesDto, attachments: ConfigurationAttachmentsDto)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/attachments","title":"var attachments: ConfigurationAttachmentsDto","type":"property"},{"path":"\/documentation\/vernissageserver\/configurationdto\/statuses","title":"var statuses: ConfigurationStatusesDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/decoderequest(_:)-21faa","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationdto\/decoderequest(_:)-4gvfe","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/configurationdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/configurationdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/configurationdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/configurationdto","title":"ConfigurationDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/init(maxcharacters:maxmediaattachments:charactersreservedperurl:)","title":"init(maxCharacters: Int, maxMediaAttachments: Int, charactersReservedPerUrl: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/charactersreservedperurl","title":"var charactersReservedPerUrl: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/maxcharacters","title":"var maxCharacters: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/maxmediaattachments","title":"var maxMediaAttachments: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/decoderequest(_:)-1w7tg","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/decoderequest(_:)-3es6d","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/configurationstatusesdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/configurationstatusesdto","title":"ConfigurationStatusesDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/init(id:confirmationguid:)","title":"init(id: String, confirmationGuid: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/confirmationguid","title":"var confirmationGuid: String","type":"property"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/id","title":"var id: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/decoderequest(_:)-6hoco","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/decoderequest(_:)-7on5e","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/confirmemailrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/confirmemailrequestdto","title":"ConfirmEmailRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/init(from:)-4qvkt","title":"init(from: Country)","type":"init"},{"path":"\/documentation\/vernissageserver\/countrydto\/init(id:name:code:)","title":"init(id: String?, name: String, code: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/countrydto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/countrydto\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/countrydto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/countrydto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/countrydto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/decoderequest(_:)-5fpar","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/countrydto\/decoderequest(_:)-h9db","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/countrydto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/init(from:)-3omdl","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/countrydto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/countrydto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/countrydto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/countrydto","title":"CountryDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/init(address:name:)","title":"init(address: String, name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/address","title":"var address: String","type":"property"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/name","title":"var name: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/decoderequest(_:)-3pbc8","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/decoderequest(_:)-4a7s2","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/emailaddressdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/emailaddressdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailaddressdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/emailaddressdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/emailaddressdto","title":"EmailAddressDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/init(to:subject:body:from:replyto:)","title":"init(to: EmailAddressDto, subject: String, body: String, from: EmailAddressDto?, replyTo: EmailAddressDto?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/body","title":"var body: String","type":"property"},{"path":"\/documentation\/vernissageserver\/emaildto\/from","title":"var from: EmailAddressDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/emaildto\/replyto","title":"var replyTo: EmailAddressDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/emaildto\/subject","title":"var subject: String","type":"property"},{"path":"\/documentation\/vernissageserver\/emaildto\/to","title":"var to: EmailAddressDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emaildto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emaildto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/emaildto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/decoderequest(_:)-4ethg","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/emaildto\/decoderequest(_:)-5uuv","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/emaildto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/emaildto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emaildto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/emaildto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/emaildto","title":"EmailDto","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/none","title":"case none","type":"case"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/ssl","title":"case ssl","type":"case"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/starttls","title":"case startTls","type":"case"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/starttlswhenavailable","title":"case startTlsWhenAvailable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/decoderequest(_:)-9neec","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/decoderequest(_:)-ettw","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/emailsecuremethoddto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/emailsecuremethoddto","title":"EmailSecureMethodDto","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/exifdto\/init(from:)-80b6v","title":"init?(from: Exif?)","type":"init"},{"path":"\/documentation\/vernissageserver\/exifdto\/init(make:model:lens:createdate:focallenin35mmfilm:fnumber:exposuretime:photographicsensitivity:)","title":"init(make: String?, model: String?, lens: String?, createDate: String?, focalLenIn35mmFilm: String?, fNumber: String?, exposureTime: String?, photographicSensitivity: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/createdate","title":"var createDate: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/exposuretime","title":"var exposureTime: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/fnumber","title":"var fNumber: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/focallenin35mmfilm","title":"var focalLenIn35mmFilm: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/lens","title":"var lens: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/make","title":"var make: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exifdto\/photographicsensitivity","title":"var photographicSensitivity: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/hasanymetadata()","title":"func hasAnyMetadata() -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/exifdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/exifdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/exifdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/decoderequest(_:)-5cy38","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/exifdto\/decoderequest(_:)-6y67u","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/exifdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/init(from:)-78hb8","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/exifdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exifdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/exifdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/exifdto","title":"ExifDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/init(authenticatetoken:)","title":"init(authenticateToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/authenticatetoken","title":"var authenticateToken: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/decoderequest(_:)-4fqhq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/decoderequest(_:)-9kpb9","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/externalloginrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/externalloginrequestdto","title":"ExternalLoginRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/init(url:width:height:)","title":"init(url: String, width: Int, height: Int)","type":"init"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/init(url:width:height:aspect:)","title":"init(url: String, width: Int, height: Int, aspect: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/aspect","title":"var aspect: Double","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/url","title":"var url: String","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/width","title":"var width: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/decoderequest(_:)-69thk","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/decoderequest(_:)-90hi7","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfodto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/fileinfodto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfodto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfodto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/fileinfodto","title":"FileInfoDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/init(from:baseaddress:)","title":"init(from: FlexiField, baseAddress: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/init(id:key:value:isverified:baseaddress:)","title":"init(id: String?, key: String?, value: String?, isVerified: Bool?, baseAddress: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/isverified","title":"var isVerified: Bool?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/key","title":"var key: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/value","title":"var value: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/valuehtml","title":"var valueHtml: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/isverified","title":"case isVerified","type":"case"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/key","title":"case key","type":"case"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/value","title":"case value","type":"case"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/valuehtml","title":"case valueHtml","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/codingkeys","title":"FlexiFieldDto.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/decoderequest(_:)-10jo9","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/decoderequest(_:)-6ic63","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validate(_:)-2nom2","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validate(_:)-32k8c","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validate(query:)-327yq","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validate(query:)-6vj4w","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifielddto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifielddto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/flexifielddto","title":"FlexiFieldDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/init(forgotpasswordguid:password:)","title":"init(forgotPasswordGuid: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/forgotpasswordguid","title":"var forgotPasswordGuid: String","type":"property"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/password","title":"var password: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/decoderequest(_:)-2w0py","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/decoderequest(_:)-s3ll","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validate(_:)-5act8","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validate(_:)-9vun","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validate(query:)-6klck","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validate(query:)-6zutl","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/forgotpasswordconfirmationrequestdto","title":"ForgotPasswordConfirmationRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/init(email:redirectbaseurl:)","title":"init(email: String, redirectBaseUrl: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/email","title":"var email: String","type":"property"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/redirectbaseurl","title":"var redirectBaseUrl: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/decoderequest(_:)-8bzcj","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/decoderequest(_:)-s5r2","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validate(_:)-6ergb","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validate(_:)-k0s3","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validate(query:)-2wip3","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validate(query:)-7ifmk","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/forgotpasswordrequestdto","title":"ForgotPasswordRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/init(url:name:)","title":"init(url: String, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/url","title":"var url: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/decoderequest(_:)-7odso","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/decoderequest(_:)-9jmuf","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/hashtagdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/hashtagdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/hashtagdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/hashtagdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/hashtagdto","title":"HashtagDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/init(uri:title:description:email:version:thumbnail:languages:rules:registrationopened:registrationbyapprovalopened:registrationbyinvitationsopened:configuration:stats:contact:)","title":"init(uri: String, title: String, description: String, email: String, version: String, thumbnail: String, languages: [String], rules: [SimpleRuleDto], registrationOpened: Bool, registrationByApprovalOpened: Bool, registrationByInvitationsOpened: Bool, configuration: ConfigurationDto, stats: InstanceStatisticsDto, contact: UserDto?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/configuration","title":"var configuration: ConfigurationDto","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/contact","title":"var contact: UserDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/email","title":"var email: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/languages","title":"var languages: [String]","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/registrationbyapprovalopened","title":"var registrationByApprovalOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/registrationbyinvitationsopened","title":"var registrationByInvitationsOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/registrationopened","title":"var registrationOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/rules","title":"var rules: [SimpleRuleDto]","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/stats","title":"var stats: InstanceStatisticsDto","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/thumbnail","title":"var thumbnail: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/uri","title":"var uri: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instancedto\/version","title":"var version: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instancedto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instancedto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/instancedto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/decoderequest(_:)-486yk","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/instancedto\/decoderequest(_:)-5o4vx","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/instancedto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/instancedto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancedto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/instancedto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/instancedto","title":"InstanceDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/init(usercount:statuscount:domaincount:)","title":"init(userCount: Int, statusCount: Int, domainCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/domaincount","title":"var domainCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/statuscount","title":"var statusCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/usercount","title":"var userCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/decoderequest(_:)-7xox7","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/decoderequest(_:)-8g41i","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/instancestatisticsdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/instancestatisticsdto","title":"InstanceStatisticsDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/init(from:basestoragepath:baseaddress:)","title":"init(from: Invitation, baseStoragePath: String, baseAddress: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/invitationdto\/init(id:code:user:invited:createdat:updatedat:)","title":"init(id: String?, code: String, user: UserDto, invited: UserDto?, createdAt: Date?, updatedAt: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationdto\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationdto\/invited","title":"var invited: UserDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationdto\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationdto\/user","title":"var user: UserDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/decoderequest(_:)-150q","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationdto\/decoderequest(_:)-7yurb","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/invitationdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/invitationdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/invitationdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/invitationdto","title":"InvitationDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/init(from:)-2x6ja","title":"init(from: License)","type":"init"},{"path":"\/documentation\/vernissageserver\/licensedto\/init(id:name:code:description:url:)","title":"init(id: String?, name: String, code: String, description: String?, url: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/licensedto\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/licensedto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/licensedto\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/licensedto\/url","title":"var url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/licensedto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/licensedto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/licensedto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/decoderequest(_:)-1yfel","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/licensedto\/decoderequest(_:)-8jrc3","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/licensedto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/init(from:)-228me","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/licensedto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/licensedto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/licensedto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/licensedto","title":"LicenseDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableparams\/init(maxid:minid:sinceid:limit:)","title":"init(maxId: String?, minId: String?, sinceId: String?, limit: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableparams\/limit","title":"let limit: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableparams\/maxid","title":"let maxId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableparams\/minid","title":"let minId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableparams\/sinceid","title":"let sinceId: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/linkableparams","title":"LinkableParams","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/init(basedon:)","title":"init(basedOn: LinkableResult<T>)","type":"init"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/init(maxid:minid:data:)","title":"init(maxId: String?, minId: String?, data: [T])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/data","title":"var data: [T]","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/maxid","title":"var maxId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/minid","title":"var minId: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/decoderequest(_:)-1y5of","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/decoderequest(_:)-2k9kn","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/linkableresultdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/linkableresultdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresultdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/linkableresultdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/linkableresultdto","title":"LinkableResultDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/init(from:)-3mmsi","title":"init(from: Location)","type":"init"},{"path":"\/documentation\/vernissageserver\/locationdto\/init(id:name:longitude:latitude:country:)","title":"init(id: String?, name: String, longitude: String, latitude: String, country: CountryDto)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/country","title":"var country: CountryDto","type":"property"},{"path":"\/documentation\/vernissageserver\/locationdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/locationdto\/latitude","title":"var latitude: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationdto\/longitude","title":"var longitude: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationdto\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/locationdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/locationdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/locationdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/decoderequest(_:)-5ma7j","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/locationdto\/decoderequest(_:)-81yg","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/locationdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/init(from:)-5d3qe","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/locationdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/locationdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/locationdto","title":"LocationDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/init(geonameid:name:namesnormalized:countrycode:longitude:latitude:)","title":"init(geonameId: String, name: String, namesNormalized: String, countryCode: String, longitude: String, latitude: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/countrycode","title":"var countryCode: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/geonameid","title":"var geonameId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/latitude","title":"var latitude: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/longitude","title":"var longitude: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/namesnormalized","title":"var namesNormalized: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/decoderequest(_:)-1sdhk","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/decoderequest(_:)-79ap4","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/locationfiledto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/locationfiledto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationfiledto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/locationfiledto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/locationfiledto","title":"LocationFileDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/decoderequest(_:)-2rj0h","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/decoderequest(_:)-3hbha","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/locationsjobdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/locationsjobdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationsjobdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/locationsjobdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/locationsjobdto","title":"LocationsJobDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/init(usernameoremail:password:)","title":"init(userNameOrEmail: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/password","title":"var password: String","type":"property"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/usernameoremail","title":"var userNameOrEmail: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/decoderequest(_:)-4qhuq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/decoderequest(_:)-rjrg","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/loginrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/loginrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/loginrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/loginrequestdto","title":"LoginRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/metadatadto\/init(exif:)-29nt4","title":"init(exif: Exif?)","type":"init"},{"path":"\/documentation\/vernissageserver\/metadatadto\/init(exif:)-49hkm","title":"init(exif: ExifDto?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/exif","title":"var exif: ExifDto?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/metadatadto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/metadatadto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/metadatadto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/decoderequest(_:)-3j8x4","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/metadatadto\/decoderequest(_:)-648yx","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/metadatadto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/metadatadto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/metadatadto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/metadatadto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/metadatadto","title":"MetadataDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/init(id:notificationtype:byuser:status:)","title":"init(id: String?, notificationType: NotificationTypeDto, byUser: UserDto, status: StatusDto?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/byuser","title":"var byUser: UserDto","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationdto\/notificationtype","title":"var notificationType: NotificationTypeDto","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationdto\/status","title":"var status: StatusDto?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/decoderequest(_:)-68bsa","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationdto\/decoderequest(_:)-806k6","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/notificationdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationdto","title":"NotificationDto","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/adminreport","title":"case adminReport","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/adminsignup","title":"case adminSignUp","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/favourite","title":"case favourite","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/follow","title":"case follow","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/followrequest","title":"case followRequest","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/mention","title":"case mention","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/newcomment","title":"case newComment","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/reblog","title":"case reblog","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/status","title":"case status","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/update","title":"case update","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/translate()","title":"func translate() -> NotificationType","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/from(_:)","title":"static func from(NotificationType) -> NotificationTypeDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/decoderequest(_:)-1jenb","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/decoderequest(_:)-9slf9","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationtypedto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/notificationtypedto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/notificationtypedto\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtypedto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationtypedto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationtypedto","title":"NotificationTypeDto","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/init(amount:notificationid:)","title":"init(amount: Int, notificationId: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/amount","title":"var amount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/notificationid","title":"var notificationId: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/decoderequest(_:)-2oymq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/decoderequest(_:)-9tyd","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationscountdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/notificationscountdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationscountdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationscountdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationscountdto","title":"NotificationsCountDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/init(basedon:)","title":"init(basedOn: Page<T>)","type":"init"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/init(data:page:size:total:)","title":"init(data: [T], page: Int, size: Int, total: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/data","title":"let data: [T]","type":"property"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/size","title":"let size: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/total","title":"let total: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/decoderequest(_:)-3wgde","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/decoderequest(_:)-9gy6x","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/paginableresultdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/paginableresultdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/paginableresultdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/paginableresultdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/paginableresultdto","title":"PaginableResultDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/init(visibility:)","title":"init(visibility: StatusVisibilityDto)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/visibility","title":"var visibility: StatusVisibilityDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/decoderequest(_:)-1amn","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/decoderequest(_:)-3mfm7","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/reblogrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/reblogrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reblogrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/reblogrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/reblogrequestdto","title":"ReblogRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/init(refreshtoken:)","title":"init(refreshToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/refreshtoken","title":"var refreshToken: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/decoderequest(_:)-1f5m2","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/decoderequest(_:)-9mnmm","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtokendto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/refreshtokendto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokendto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtokendto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/refreshtokendto","title":"RefreshTokenDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/init(username:email:password:redirectbaseurl:agreement:name:securitytoken:locale:reason:invitetoken:)","title":"init(userName: String, email: String, password: String, redirectBaseUrl: String, agreement: Bool, name: String?, securityToken: String?, locale: String?, reason: String?, inviteToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/agreement","title":"var agreement: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/email","title":"var email: String","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/invitetoken","title":"var inviteToken: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/locale","title":"var locale: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/password","title":"var password: String","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/reason","title":"var reason: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/redirectbaseurl","title":"var redirectBaseUrl: String","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/securitytoken","title":"var securityToken: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/username","title":"var userName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/decoderequest(_:)-22f7f","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/decoderequest(_:)-2o8ol","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/registeruserdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/registeruserdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/registeruserdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validate(_:)-548mu","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validate(_:)-ebok","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validate(query:)-5htvb","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validate(query:)-5zv7y","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/registeruserdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/registeruserdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/registeruserdto","title":"RegisterUserDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/init(userid:following:followedby:requested:requestedby:mutedstatuses:mutedreblogs:mutednotifications:)","title":"init(userId: String, following: Bool, followedBy: Bool, requested: Bool, requestedBy: Bool, mutedStatuses: Bool, mutedReblogs: Bool, mutedNotifications: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/followedby","title":"var followedBy: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/following","title":"var following: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/mutednotifications","title":"var mutedNotifications: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/mutedreblogs","title":"var mutedReblogs: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/mutedstatuses","title":"var mutedStatuses: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/requested","title":"var requested: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/requestedby","title":"var requestedBy: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/userid","title":"var userId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/decoderequest(_:)-1uwkx","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/decoderequest(_:)-90sul","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/relationshipdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/relationshipdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/relationshipdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/relationshipdto","title":"RelationshipDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/init(from:status:basestoragepath:baseaddress:)","title":"init(from: Report, status: StatusDto?, baseStoragePath: String, baseAddress: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/reportdto\/init(id:user:reporteduser:status:comment:forward:category:ruleids:considerationdate:considerationuser:createdat:updatedat:)","title":"init(id: String?, user: UserDto, reportedUser: UserDto, status: StatusDto?, comment: String?, forward: Bool, category: String?, ruleIds: [String]?, considerationDate: Date?, considerationUser: UserDto?, createdAt: Date?, updatedAt: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/category","title":"var category: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/comment","title":"var comment: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/considerationdate","title":"var considerationDate: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/considerationuser","title":"var considerationUser: UserDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/forward","title":"var forward: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/reporteduser","title":"var reportedUser: UserDto","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/ruleids","title":"var ruleIds: [String]?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/status","title":"var status: StatusDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportdto\/user","title":"var user: UserDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/reportdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/decoderequest(_:)-1vhbd","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/reportdto\/decoderequest(_:)-32tzv","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/reportdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/reportdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/reportdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/reportdto","title":"ReportDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/init(reporteduserid:statusid:comment:forward:category:ruleids:)","title":"init(reportedUserId: String, statusId: String?, comment: String?, forward: Bool, category: String?, ruleIds: [Int]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/category","title":"var category: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/comment","title":"var comment: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/forward","title":"var forward: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/reporteduserid","title":"var reportedUserId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/ruleids","title":"var ruleIds: [Int]?","type":"property"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/statusid","title":"var statusId: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/decoderequest(_:)-8t3uu","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/decoderequest(_:)-ol89","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/reportrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/reportrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/reportrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validate(_:)-1vf3v","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validate(_:)-9bfe6","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validate(query:)-78clo","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validate(query:)-8dejf","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/reportrequestdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/reportrequestdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/reportrequestdto","title":"ReportRequestDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/init(redirectbaseurl:)","title":"init(redirectBaseUrl: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/redirectbaseurl","title":"var redirectBaseUrl: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/decoderequest(_:)-5v265","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/decoderequest(_:)-79u0q","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/resendemailconfirmationdto","title":"ResendEmailConfirmationDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/init(from:)-x7c9","title":"init(from: Role)","type":"init"},{"path":"\/documentation\/vernissageserver\/roledto\/init(id:code:title:description:isdefault:)","title":"init(id: String?, code: String, title: String, description: String?, isDefault: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/roledto\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/roledto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/roledto\/isdefault","title":"var isDefault: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/roledto\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/decoderequest(_:)-1i99n","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/decoderequest(_:)-98f4i","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/roledto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/init(from:)-68nby","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/roledto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/roledto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roledto\/validate(_:)-6emjy","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validate(_:)-9nt7y","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validate(query:)-1av7r","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validate(query:)-2sv2a","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/roledto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/roledto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/roledto","title":"RoleDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/init(from:)-5f09y","title":"init(from: Rule)","type":"init"},{"path":"\/documentation\/vernissageserver\/ruledto\/init(id:order:text:)","title":"init(id: String?, order: Int, text: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/ruledto\/order","title":"var order: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/ruledto\/text","title":"var text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/ruledto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/ruledto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/ruledto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/decoderequest(_:)-1zyv","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/ruledto\/decoderequest(_:)-70qsh","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/ruledto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/init(from:)-2d6ui","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/ruledto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/ruledto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/ruledto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/ruledto","title":"RuleDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/init(users:statuses:hashtags:)","title":"init(users: [UserDto]?, statuses: [UserDto]?, hashtags: [UserDto]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/hashtags","title":"let hashtags: [UserDto]?","type":"property"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/statuses","title":"let statuses: [UserDto]?","type":"property"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/users","title":"let users: [UserDto]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/decoderequest(_:)-5gdm7","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/decoderequest(_:)-8dlru","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/searchresultdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/searchresultdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchresultdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/searchresultdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/searchresultdto","title":"SearchResultDto","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/hashtags","title":"case hashtags","type":"case"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/statuses","title":"case statuses","type":"case"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/users","title":"case users","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/searchtypedto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchtypedto\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/searchtypedto\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/searchtypedto","title":"SearchTypeDto","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/init(basedon:)","title":"init(basedOn: [Setting])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/corsorigin","title":"var corsOrigin: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailfromaddress","title":"var emailFromAddress: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailfromname","title":"var emailFromName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailhostname","title":"var emailHostname: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailpassword","title":"var emailPassword: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailport","title":"var emailPort: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailsecuremethod","title":"var emailSecureMethod: EmailSecureMethodDto","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/emailusername","title":"var emailUserName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/eventstostore","title":"var eventsToStore: [EventType]","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/imagesizelimit","title":"var imageSizeLimit: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/isrecaptchaenabled","title":"var isRecaptchaEnabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/isregistrationbyapprovalopened","title":"var isRegistrationByApprovalOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/isregistrationbyinvitationsopened","title":"var isRegistrationByInvitationsOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/isregistrationopened","title":"var isRegistrationOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/maxcharacters","title":"var maxCharacters: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/maxmediaattachments","title":"var maxMediaAttachments: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/maximumnumberofinvitations","title":"var maximumNumberOfInvitations: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/recaptchakey","title":"var recaptchaKey: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/systemdefaultuserid","title":"var systemDefaultUserId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/webcontactuserid","title":"var webContactUserId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/webdescription","title":"var webDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/webemail","title":"var webEmail: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/weblanguages","title":"var webLanguages: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/webthumbnail","title":"var webThumbnail: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingsdto\/webtitle","title":"var webTitle: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/settingsdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/settingsdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/settingsdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/decoderequest(_:)-83z6b","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/settingsdto\/decoderequest(_:)-9qott","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/settingsdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/settingsdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/settingsdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/settingsdto","title":"SettingsDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/init(id:text:)","title":"init(id: Int, text: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/id","title":"var id: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/text","title":"var text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/decoderequest(_:)-103be","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/decoderequest(_:)-2ar1y","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/simpleruledto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/simpleruledto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/simpleruledto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/simpleruledto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/simpleruledto","title":"SimpleRuleDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/init(ancestors:descendants:)","title":"init(ancestors: [StatusDto], descendants: [StatusDto])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/ancestors","title":"var ancestors: [StatusDto]","type":"property"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/descendants","title":"var descendants: [StatusDto]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/decoderequest(_:)-4r9mi","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/decoderequest(_:)-55tqu","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/statuscontextdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statuscontextdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuscontextdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statuscontextdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statuscontextdto","title":"StatusContextDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/init(userid:activitypubstatusid:)","title":"init(userId: Int64, activityPubStatusId: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/activitypubstatusid","title":"var activityPubStatusId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/userid","title":"var userId: Int64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/decoderequest(_:)-37n3g","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/decoderequest(_:)-7pyhy","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusdeletejobdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusdeletejobdto","title":"StatusDeleteJobDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/statusdto\/init(from:baseaddress:basestoragepath:attachments:reblog:isfavourited:isreblogged:isbookmarked:isfeatured:)","title":"convenience init(from: Status, baseAddress: String, baseStoragePath: String, attachments: [AttachmentDto]?, reblog: StatusDto?, isFavourited: Bool, isReblogged: Bool, isBookmarked: Bool, isFeatured: Bool)","type":"init"},{"path":"\/documentation\/vernissageserver\/statusdto\/init(id:islocal:note:visibility:sensitive:contentwarning:commentsdisabled:replytostatusid:user:attachments:tags:reblog:category:application:repliescount:reblogscount:favouritescount:favourited:reblogged:bookmarked:featured:createdat:updated-6r9ve","title":"init(id: String?, isLocal: Bool, note: String?, visibility: StatusVisibilityDto, sensitive: Bool, contentWarning: String?, commentsDisabled: Bool, replyToStatusId: String?, user: UserDto, attachments: [AttachmentDto]?, tags: [HashtagDto]?, reblog: StatusDto?, category: CategoryDto?, application: String?, repliesCount: Int, reblogsCount: Int, favouritesCount: Int, favourited: Bool, reblogged: Bool, bookmarked: Bool, featured: Bool, createdAt: String?, updatedAt: String?, baseAddress: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/application","title":"var application: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/attachments","title":"var attachments: [AttachmentDto]?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/bookmarked","title":"var bookmarked: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/category","title":"var category: CategoryDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/commentsdisabled","title":"var commentsDisabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/contentwarning","title":"var contentWarning: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/createdat","title":"var createdAt: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/favourited","title":"var favourited: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/favouritescount","title":"var favouritesCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/featured","title":"var featured: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/islocal","title":"var isLocal: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/note","title":"var note: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/notehtml","title":"var noteHtml: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/reblog","title":"var reblog: StatusDto?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/reblogged","title":"var reblogged: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/reblogscount","title":"var reblogsCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/repliescount","title":"var repliesCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/replytostatusid","title":"var replyToStatusId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/sensitive","title":"var sensitive: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/tags","title":"var tags: [HashtagDto]?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/updatedat","title":"var updatedAt: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/user","title":"var user: UserDto","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/visibility","title":"var visibility: StatusVisibilityDto","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/application","title":"case application","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/attachments","title":"case attachments","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/bookmarked","title":"case bookmarked","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/category","title":"case category","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/commentsdisabled","title":"case commentsDisabled","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/contentwarning","title":"case contentWarning","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/favourited","title":"case favourited","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/favouritescount","title":"case favouritesCount","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/featured","title":"case featured","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/islocal","title":"case isLocal","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/note","title":"case note","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/notehtml","title":"case noteHtml","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/reblog","title":"case reblog","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/reblogged","title":"case reblogged","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/reblogscount","title":"case reblogsCount","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/repliescount","title":"case repliesCount","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/replytostatusid","title":"case replyToStatusId","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/sensitive","title":"case sensitive","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/tags","title":"case tags","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/updatedat","title":"case updatedAt","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/user","title":"case user","type":"case"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/visibility","title":"case visibility","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusdto\/codingkeys","title":"StatusDto.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/decoderequest(_:)-8fotj","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdto\/decoderequest(_:)-cds8","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusdto","title":"StatusDto","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/init(note:visibility:sensitive:contentwarning:commentsdisabled:categoryid:replytostatusid:attachmentids:)","title":"init(note: String, visibility: StatusVisibilityDto, sensitive: Bool, contentWarning: String?, commentsDisabled: Bool, categoryId: String?, replyToStatusId: String?, attachmentIds: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/attachmentids","title":"var attachmentIds: [String]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/categoryid","title":"var categoryId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/commentsdisabled","title":"var commentsDisabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/contentwarning","title":"var contentWarning: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/note","title":"var note: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/replytostatusid","title":"var replyToStatusId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/sensitive","title":"var sensitive: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/visibility","title":"var visibility: StatusVisibilityDto","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/decoderequest(_:)-78afz","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/decoderequest(_:)-94z2b","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/statusrequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statusrequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusrequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validate(_:)-251qr","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validate(_:)-5owre","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validate(query:)-8by0b","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validate(query:)-9mwhx","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrequestdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/statusrequestdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusrequestdto","title":"StatusRequestDto","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/followers","title":"case followers","type":"case"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/mentioned","title":"case mentioned","type":"case"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/translate()","title":"func translate() -> StatusVisibility","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/from(_:)","title":"static func from(StatusVisibility) -> StatusVisibilityDto","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/decoderequest(_:)-2a067","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/decoderequest(_:)-37nuf","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusvisibilitydto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusvisibilitydto","title":"StatusVisibilityDto","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/init(from:originalfilename:smallfilename:basestoragepath:)","title":"init(from: Attachment, originalFileName: String, smallFileName: String, baseStoragePath: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/init(id:url:previewurl:description:blurhash:make:model:lens:createdate:focallenin35mmfilm:fnumber:exposuretime:photographicsensitivity:locationid:licenseid:)","title":"init(id: String?, url: String, previewUrl: String, description: String?, blurhash: String?, make: String?, model: String?, lens: String?, createDate: String?, focalLenIn35mmFilm: String?, fNumber: String?, exposureTime: String?, photographicSensitivity: String?, locationId: String?, licenseId: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/blurhash","title":"var blurhash: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/createdate","title":"var createDate: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/exposuretime","title":"var exposureTime: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/fnumber","title":"var fNumber: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/focallenin35mmfilm","title":"var focalLenIn35mmFilm: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/lens","title":"var lens: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/licenseid","title":"var licenseId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/locationid","title":"var locationId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/make","title":"var make: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/photographicsensitivity","title":"var photographicSensitivity: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/previewurl","title":"var previewUrl: String","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/url","title":"var url: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/hasanymetadata()","title":"func hasAnyMetadata() -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/decoderequest(_:)-4jm1e","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/decoderequest(_:)-5q0bm","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validate(_:)-3xl7r","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validate(_:)-8h0hh","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validate(query:)-1938x","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validate(query:)-80sot","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/temporaryattachmentdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/temporaryattachmentdto","title":"TemporaryAttachmentDto","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/daily","title":"case daily","type":"case"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/monthly","title":"case monthly","type":"case"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/yearly","title":"case yearly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/translate()","title":"func translate() -> TrendingPeriod","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/decoderequest(_:)-1o6ij","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/decoderequest(_:)-7ssks","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatusperioddto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendingstatusperioddto","title":"TrendingStatusPeriodDto","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/userdto\/init(from:flexifields:roles:basestoragepath:baseaddress:)","title":"init(from: User, flexiFields: [FlexiField]?, roles: [Role]?, baseStoragePath: String, baseAddress: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/userdto\/init(id:islocal:isblocked:isapproved:username:account:name:bio:avatarurl:headerurl:statusescount:followerscount:followingcount:twofactorenabled:activitypubprofile:fields:roles:createdat:updatedat:baseaddress:)","title":"init(id: String?, isLocal: Bool, isBlocked: Bool?, isApproved: Bool?, userName: String, account: String, name: String?, bio: String?, avatarUrl: String?, headerUrl: String?, statusesCount: Int, followersCount: Int, followingCount: Int, twoFactorEnabled: Bool, activityPubProfile: String, fields: [FlexiFieldDto]?, roles: [String]?, createdAt: Date?, updatedAt: Date?, baseAddress: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/account","title":"var account: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/activitypubprofile","title":"var activityPubProfile: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/avatarurl","title":"var avatarUrl: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/bio","title":"var bio: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/biohtml","title":"var bioHtml: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/emailwasconfirmed","title":"var emailWasConfirmed: Bool?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/fields","title":"var fields: [FlexiFieldDto]?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/followerscount","title":"var followersCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/followingcount","title":"var followingCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/headerurl","title":"var headerUrl: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/id","title":"var id: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/isapproved","title":"var isApproved: Bool?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/isblocked","title":"var isBlocked: Bool?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/islocal","title":"var isLocal: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/locale","title":"var locale: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/roles","title":"var roles: [String]?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/statusescount","title":"var statusesCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/twofactorenabled","title":"var twoFactorEnabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/username","title":"var userName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/account","title":"case account","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/activitypubprofile","title":"case activityPubProfile","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/avatarurl","title":"case avatarUrl","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/bio","title":"case bio","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/biohtml","title":"case bioHtml","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/createdat","title":"case createdAt","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/email","title":"case email","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/emailwasconfirmed","title":"case emailWasConfirmed","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/fields","title":"case fields","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/followerscount","title":"case followersCount","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/followingcount","title":"case followingCount","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/headerurl","title":"case headerUrl","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/isapproved","title":"case isApproved","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/isblocked","title":"case isBlocked","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/islocal","title":"case isLocal","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/locale","title":"case locale","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/roles","title":"case roles","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/statusescount","title":"case statusesCount","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/twofactorenabled","title":"case twoFactorEnabled","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/updatedat","title":"case updatedAt","type":"case"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/username","title":"case userName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/userdto\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userdto\/codingkeys","title":"UserDto.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/decoderequest(_:)-49g54","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/decoderequest(_:)-5ir0f","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/userdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/userdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdto\/validate(_:)-7fr27","title":"static func validate(Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validate(_:)-8zasz","title":"static func validate(any Decoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validate(content:)","title":"static func validate(content: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validate(json:)","title":"static func validate(json: String) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validate(query:)-3at8k","title":"static func validate(query: Request) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validate(query:)-8bzlc","title":"static func validate(query: URI) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validations()","title":"static func validations() -> Validations","type":"method"},{"path":"\/documentation\/vernissageserver\/userdto\/validations(_:)","title":"static func validations(inout Validations)","type":"method"}],"path":"\/documentation\/vernissageserver\/userdto\/validatable-implementations","title":"Validatable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userdto","title":"UserDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/init(mutestatuses:mutereblogs:mutenotifications:muteend:)","title":"init(muteStatuses: Bool, muteReblogs: Bool, muteNotifications: Bool, muteEnd: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/muteend","title":"var muteEnd: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/mutenotifications","title":"var muteNotifications: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/mutereblogs","title":"var muteReblogs: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/mutestatuses","title":"var muteStatuses: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/decoderequest(_:)-3hzsk","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/decoderequest(_:)-6a47t","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/usermuterequestdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/usermuterequestdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermuterequestdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/usermuterequestdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/usermuterequestdto","title":"UserMuteRequestDto","type":"struct"},{"title":"Authentication","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userauthenticator\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userauthenticator\/authenticate(bearer:for:)","title":"func authenticate(bearer: BearerAuthorization, for: Request) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userauthenticator\/user","title":"UserAuthenticator.User","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userauthenticator\/authenticate(request:)","title":"func authenticate(request: Request) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/userauthenticator\/asyncbearerauthenticator-implementations","title":"AsyncBearerAuthenticator Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userauthenticator\/respond(to:chainingto:)","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/userauthenticator\/asyncmiddleware-implementations","title":"AsyncMiddleware Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userauthenticator\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/vernissageserver\/userauthenticator\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userauthenticator","title":"UserAuthenticator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userpayload\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/userpayload\/init(id:username:email:name:exp:avatarurl:headerurl:roles:application:)","title":"init(id: String, userName: String, email: String?, name: String?, exp: Date, avatarUrl: String?, headerUrl: String?, roles: [String], application: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userpayload\/application","title":"var application: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/avatarurl","title":"var avatarUrl: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/exp","title":"var exp: Date","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/headerurl","title":"var headerUrl: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/roles","title":"var roles: [String]","type":"property"},{"path":"\/documentation\/vernissageserver\/userpayload\/username","title":"var userName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userpayload\/isadministrator()","title":"func isAdministrator() -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/ismember()","title":"func isMember() -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/ismoderator()","title":"func isModerator() -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/verify(using:)","title":"func verify(using: JWTSigner) throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userpayload\/guardisadministratormiddleware()","title":"static func guardIsAdministratorMiddleware() -> any Middleware","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/guardismoderatormiddleware()","title":"static func guardIsModeratorMiddleware() -> any Middleware","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userpayload\/guardmiddleware(throwing:)","title":"static func guardMiddleware(throwing: any Error) -> any Middleware","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/redirectmiddleware(makepath:)","title":"static func redirectMiddleware(makePath: (Request) -> String) -> any Middleware","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/redirectmiddleware(path:)","title":"static func redirectMiddleware(path: String) -> any Middleware","type":"method"}],"path":"\/documentation\/vernissageserver\/userpayload\/authenticatable-implementations","title":"Authenticatable Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userpayload\/asyncauthenticator()","title":"static func asyncAuthenticator() -> any AsyncAuthenticator","type":"method"},{"path":"\/documentation\/vernissageserver\/userpayload\/authenticator()","title":"static func authenticator() -> any Authenticator","type":"method"}],"path":"\/documentation\/vernissageserver\/userpayload\/jwtpayload-implementations","title":"JWTPayload Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userpayload","title":"UserPayload","type":"struct"},{"title":"Services","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/accept(on:activitypubrequest:)","title":"func accept(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/announce(on:activitypubrequest:)","title":"func announce(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/create(on:activitypubrequest:)","title":"func create(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/delete(on:activitypubrequest:)","title":"func delete(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/follow(on:activitypubrequest:)","title":"func follow(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/isdomainblockedbyinstance(on:actorid:)","title":"func isDomainBlockedByInstance(on: QueueContext, actorId: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/isdomainblockedbyuser(on:actorid:)","title":"func isDomainBlockedByUser(on: QueueContext, actorId: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/like(on:activitypubrequest:)","title":"func like(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/reject(on:activitypubrequest:)","title":"func reject(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubservice\/undo(on:activitypubrequest:)","title":"func undo(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubservice","title":"ActivityPubService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsignatureservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsignatureservice\/validatealgorith(on:activitypubrequest:)","title":"func validateAlgorith(on: QueueContext, activityPubRequest: ActivityPubRequestDto) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsignatureservice\/validatelocalsignature(on:activitypubrequest:)","title":"func validateLocalSignature(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsignatureservice\/validatesignature(on:activitypubrequest:)","title":"func validateSignature(on: QueueContext, activityPubRequest: ActivityPubRequestDto) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubsignatureservice","title":"ActivityPubSignatureService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authenticationclientsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authenticationclientsservice\/validateuri(on:uri:authclientid:)","title":"func validateUri(on: any Database, uri: String, authClientId: Int64?) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/authenticationclientsservice","title":"AuthenticationClientsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/captchaservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/captchaservice\/validate(on:captchaformresponse:)","title":"func validate(on: Request, captchaFormResponse: String) async throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/captchaservice","title":"CaptchaService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoservice\/generatekeys()","title":"func generateKeys() throws -> (privateKey: String, publicKey: String)","type":"method"},{"path":"\/documentation\/vernissageserver\/cryptoservice\/generatesignaturebase64(privatekeypem:digest:)","title":"func generateSignatureBase64(privateKeyPem: String, digest: Data) throws -> String","type":"method"},{"path":"\/documentation\/vernissageserver\/cryptoservice\/verifysignature(publickeypem:signaturedata:digest:)","title":"func verifySignature(publicKeyPem: String, signatureData: Data, digest: Data) throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/cryptoservice","title":"CryptoService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailsservice\/dispatchconfirmaccountemail(on:user:redirectbaseurl:)","title":"func dispatchConfirmAccountEmail(on: Request, user: User, redirectBaseUrl: String) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsservice\/dispatchforgotpasswordemail(on:user:redirectbaseurl:)","title":"func dispatchForgotPasswordEmail(on: Request, user: User, redirectBaseUrl: String) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailsservice\/setserversettings(on:hostname:port:username:password:securemethod:)","title":"func setServerSettings(on: Application, hostName: Setting?, port: Setting?, userName: Setting?, password: Setting?, secureMethod: Setting?)","type":"method"}],"path":"\/documentation\/vernissageserver\/emailsservice","title":"EmailsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalusersservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externalusersservice\/getoauthrequest(authclient:baseaddress:code:)","title":"func getOauthRequest(authClient: AuthClient, baseAddress: String, code: String) -> OAuthRequest","type":"method"},{"path":"\/documentation\/vernissageserver\/externalusersservice\/getredirectlocation(authclient:baseaddress:)","title":"func getRedirectLocation(authClient: AuthClient, baseAddress: String) throws -> String","type":"method"},{"path":"\/documentation\/vernissageserver\/externalusersservice\/getregisteredexternaluser(on:user:)","title":"func getRegisteredExternalUser(on: any Database, user: OAuthUser) async throws -> (User?, ExternalUser?)","type":"method"}],"path":"\/documentation\/vernissageserver\/externalusersservice","title":"ExternalUsersService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifieldservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifieldservice\/dispatchurlvalidator(on:flexifields:)","title":"func dispatchUrlValidator(on: Request, flexiFields: [FlexiField]) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifieldservice\/getflexifields(on:for:)","title":"func getFlexiFields(on: any Database, for: Int64) async throws -> [FlexiField]","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifieldservice","title":"FlexiFieldService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followsservice\/approve(on:sourceid:targetid:)","title":"func approve(on: any Database, sourceId: Int64, targetId: Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/count(on:sourceid:)","title":"func count(on: any Database, sourceId: Int64) async throws -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/count(on:targetid:)","title":"func count(on: any Database, targetId: Int64) async throws -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/follow(on:sourceid:targetid:approved:activityid:)","title":"func follow(on: any Database, sourceId: Int64, targetId: Int64, approved: Bool, activityId: String?) async throws -> Int64","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/following(on:sourceid:onlyapproved:linkableparams:)","title":"func following(on: Request, sourceId: Int64, onlyApproved: Bool, linkableParams: LinkableParams) async throws -> LinkableResult<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/following(on:sourceid:onlyapproved:page:size:)","title":"func following(on: any Database, sourceId: Int64, onlyApproved: Bool, page: Int, size: Int) async throws -> Page<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/follows(on:targetid:onlyapproved:linkableparams:)","title":"func follows(on: Request, targetId: Int64, onlyApproved: Bool, linkableParams: LinkableParams) async throws -> LinkableResult<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/follows(on:targetid:onlyapproved:page:size:)","title":"func follows(on: any Database, targetId: Int64, onlyApproved: Bool, page: Int, size: Int) async throws -> Page<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/get(on:sourceid:targetid:)","title":"func get(on: any Database, sourceId: Int64, targetId: Int64) async throws -> Follow?","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/reject(on:sourceid:targetid:)","title":"func reject(on: any Database, sourceId: Int64, targetId: Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/toapprove(on:userid:linkableparams:)","title":"func toApprove(on: Request, userId: Int64, linkableParams: LinkableParams) async throws -> LinkableResult<RelationshipDto>","type":"method"},{"path":"\/documentation\/vernissageserver\/followsservice\/unfollow(on:sourceid:targetid:)","title":"func unfollow(on: any Database, sourceId: Int64, targetId: Int64) async throws -> Int64?","type":"method"}],"path":"\/documentation\/vernissageserver\/followsservice","title":"FollowsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomainsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomainsservice\/exists(on:url:)","title":"func exists(on: any Database, url: URL) async throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomainsservice","title":"InstanceBlockedDomainsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationsservice\/get(by:on:)","title":"func get(by: String, on: any Database) async throws -> Invitation?","type":"method"},{"path":"\/documentation\/vernissageserver\/invitationsservice\/use(code:on:for:)","title":"func use(code: String, on: any Database, for: User) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/invitationsservice","title":"InvitationsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizablesservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizablesservice\/get(on:code:locale:)","title":"func get(on: any Database, code: String, locale: String) async throws -> String","type":"method"},{"path":"\/documentation\/vernissageserver\/localizablesservice\/get(on:code:locale:variables:)","title":"func get(on: any Database, code: String, locale: String, variables: [String : String]?) async throws -> String","type":"method"}],"path":"\/documentation\/vernissageserver\/localizablesservice","title":"LocalizablesService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationsservice\/create(type:to:by:statusid:on:)","title":"func create(type: NotificationType, to: User, by: Int64, statusId: Int64?, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationsservice\/delete(type:to:by:statusid:on:)","title":"func delete(type: NotificationType, to: Int64, by: Int64, statusId: Int64, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationsservice\/list(on:for:linkableparams:)","title":"func list(on: any Database, for: Int64, linkableParams: LinkableParams) async throws -> [Notification]","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationsservice","title":"NotificationsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/relationshipsservice\/relationships(on:userid:relateduserids:)","title":"func relationships(on: any Database, userId: Int64, relatedUserIds: [Int64]) async throws -> [RelationshipDto]","type":"method"}],"path":"\/documentation\/vernissageserver\/relationshipsservice","title":"RelationshipsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rolesservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rolesservice\/getdefault(on:)","title":"func getDefault(on: any Database) async throws -> [Role]","type":"method"}],"path":"\/documentation\/vernissageserver\/rolesservice","title":"RolesService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/searchservice\/downloadremoteuser(activitypubprofile:on:)-105p5","title":"func downloadRemoteUser(activityPubProfile: String, on: Request) async -> SearchResultDto","type":"method"},{"path":"\/documentation\/vernissageserver\/searchservice\/downloadremoteuser(activitypubprofile:on:)-9mxr1","title":"func downloadRemoteUser(activityPubProfile: String, on: QueueContext) async throws -> User?","type":"method"},{"path":"\/documentation\/vernissageserver\/searchservice\/search(query:searchtype:request:)","title":"func search(query: String, searchType: SearchTypeDto, request: Request) async throws -> SearchResultDto","type":"method"}],"path":"\/documentation\/vernissageserver\/searchservice","title":"SearchService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingsservice\/get(_:on:)","title":"func get(SettingKey, on: any Database) async throws -> Setting?","type":"method"},{"path":"\/documentation\/vernissageserver\/settingsservice\/get(on:)","title":"func get(on: any Database) async throws -> [Setting]","type":"method"},{"path":"\/documentation\/vernissageserver\/settingsservice\/getapplicationsettings(basedon:application:)","title":"func getApplicationSettings(basedOn: [Setting], application: Application) throws -> ApplicationSettings","type":"method"}],"path":"\/documentation\/vernissageserver\/settingsservice","title":"SettingsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusesservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusesservice\/ancestors(for:on:)","title":"func ancestors(for: Int64, on: any Database) async throws -> [Status]","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/can(view:authorizationpayloadid:on:)","title":"func can(view: Status, authorizationPayloadId: Int64, on: Request) async throws -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/converttodto(on:status:attachments:)","title":"func convertToDto(on: Request, status: Status, attachments: [Attachment]) async -> StatusDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/converttodtos(on:statuses:)","title":"func convertToDtos(on: Request, statuses: [Status]) async -> [StatusDto]","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/count(on:for:)","title":"func count(on: any Database, for: Int64) async throws -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/count(on:onlycomments:)","title":"func count(on: any Database, onlyComments: Bool) async throws -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/create(basedon:userid:on:)","title":"func create(basedOn: NoteDto, userId: Int64, on: QueueContext) async throws -> Status","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/createonlocaltimeline(followersof:status:on:)","title":"func createOnLocalTimeline(followersOf: Int64, status: Status, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/delete(id:on:)","title":"func delete(id: Int64, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/delete(owner:on:)","title":"func delete(owner: Int64, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/deleteannoucmentsfromremotetimeline(activitypubunreblog:on:)","title":"func deleteAnnoucmentsFromRemoteTimeline(activityPubUnreblog: ActivityPubUnreblogDto, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/deletefromremote(statusactivitypubid:userid:on:)","title":"func deleteFromRemote(statusActivityPubId: String, userId: Int64, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/descendants(for:on:)","title":"func descendants(for: Int64, on: any Database) async throws -> [Status]","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/favourited(on:statusid:linkableparams:)","title":"func favourited(on: Request, statusId: Int64, linkableParams: LinkableParams) async throws -> LinkableResult<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/get(on:activitypubid:)","title":"func get(on: any Database, activityPubId: String) async throws -> Status?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/get(on:id:)","title":"func get(on: any Database, id: Int64) async throws -> Status?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/get(on:ids:)","title":"func get(on: any Database, ids: [Int64]) async throws -> [Status]","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/getorginalstatus(id:on:)","title":"func getOrginalStatus(id: Int64, on: any Database) async throws -> Status?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/getreblogstatus(id:userid:on:)","title":"func getReblogStatus(id: Int64, userId: Int64, on: any Database) async throws -> Status?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/note(basedon:replytostatus:on:)","title":"func note(basedOn: Status, replyToStatus: Status?, on: Application) throws -> NoteDto","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/reblogged(on:statusid:linkableparams:)","title":"func reblogged(on: Request, statusId: Int64, linkableParams: LinkableParams) async throws -> LinkableResult<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/send(favourite:on:)","title":"func send(favourite: Int64, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/send(reblog:on:)","title":"func send(reblog: Int64, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/send(status:on:)","title":"func send(status: Int64, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/send(unfavourite:on:)","title":"func send(unfavourite: StatusUnfavouriteJobDto, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/send(unreblog:on:)","title":"func send(unreblog: ActivityPubUnreblogDto, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/statuses(for:linkableparams:on:)","title":"func statuses(for: Int64, linkableParams: LinkableParams, on: Request) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/statuses(linkableparams:on:)","title":"func statuses(linkableParams: LinkableParams, on: Request) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/unlist(on:statusid:)","title":"func unlist(on: any Database, statusId: Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/updatefavouritescount(for:on:)","title":"func updateFavouritesCount(for: Int64, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/updatereblogscount(for:on:)","title":"func updateReblogsCount(for: Int64, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusesservice\/updatestatuscount(on:for:)","title":"func updateStatusCount(on: any Database, for: Int64) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/statusesservice","title":"StatusesService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileservice\/delete(url:on:)","title":"func delete(url: URL, on: Request) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryfileservice\/save(filename:bytebuffer:on:)","title":"func save(fileName: String, byteBuffer: ByteBuffer, on: Request) async throws -> URL","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryfileservice\/save(url:on:)","title":"func save(url: String, on: QueueContext) async throws -> URL","type":"method"},{"path":"\/documentation\/vernissageserver\/temporaryfileservice\/temporarypath(on:based:)","title":"func temporaryPath(on: Application, based: String) throws -> URL","type":"method"}],"path":"\/documentation\/vernissageserver\/temporaryfileservice","title":"TemporaryFileService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/timelineservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/timelineservice\/bookmarks(on:for:linkableparams:)","title":"func bookmarks(on: any Database, for: Int64, linkableParams: LinkableParams) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelineservice\/category(on:linkableparams:categoryid:onlylocal:)","title":"func category(on: any Database, linkableParams: LinkableParams, categoryId: Int64, onlyLocal: Bool) async throws -> [Status]","type":"method"},{"path":"\/documentation\/vernissageserver\/timelineservice\/favourites(on:for:linkableparams:)","title":"func favourites(on: any Database, for: Int64, linkableParams: LinkableParams) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelineservice\/featured(on:linkableparams:onlylocal:)","title":"func featured(on: any Database, linkableParams: LinkableParams, onlyLocal: Bool) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelineservice\/hashtags(on:linkableparams:hashtag:onlylocal:)","title":"func hashtags(on: any Database, linkableParams: LinkableParams, hashtag: String, onlyLocal: Bool) async throws -> [Status]","type":"method"},{"path":"\/documentation\/vernissageserver\/timelineservice\/home(on:for:linkableparams:)","title":"func home(on: any Database, for: Int64, linkableParams: LinkableParams) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/timelineservice\/public(on:linkableparams:onlylocal:)","title":"func `public`(on: any Database, linkableParams: LinkableParams, onlyLocal: Bool) async throws -> [Status]","type":"method"}],"path":"\/documentation\/vernissageserver\/timelineservice","title":"TimelineService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/tokensservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/tokensservice\/createaccesstokens(on:foruser:)","title":"func createAccessTokens(on: Request, forUser: User) async throws -> AccessTokenDto","type":"method"},{"path":"\/documentation\/vernissageserver\/tokensservice\/getuserbyrefreshtoken(on:refreshtoken:)","title":"func getUserByRefreshToken(on: Request, refreshToken: String) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/tokensservice\/revokerefreshtokens(on:foruser:)","title":"func revokeRefreshTokens(on: Request, forUser: User) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/tokensservice\/updateaccesstokens(on:foruser:andrefreshtoken:)","title":"func updateAccessTokens(on: Request, forUser: User, andRefreshToken: RefreshToken) async throws -> AccessTokenDto","type":"method"},{"path":"\/documentation\/vernissageserver\/tokensservice\/validaterefreshtoken(on:refreshtoken:)","title":"func validateRefreshToken(on: Request, refreshToken: String) async throws -> RefreshToken","type":"method"}],"path":"\/documentation\/vernissageserver\/tokensservice","title":"TokensService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingservice\/calculatetrendinghashtags(on:)","title":"func calculateTrendingHashtags(on: QueueContext) async","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingservice\/calculatetrendingstatuses(on:)","title":"func calculateTrendingStatuses(on: QueueContext) async","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingservice\/calculatetrendingusers(on:)","title":"func calculateTrendingUsers(on: QueueContext) async","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingservice\/hashtags(on:linkableparams:period:)","title":"func hashtags(on: any Database, linkableParams: LinkableParams, period: TrendingPeriod) async throws -> LinkableResult<TrendingHashtag>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingservice\/statuses(on:linkableparams:period:)","title":"func statuses(on: any Database, linkableParams: LinkableParams, period: TrendingPeriod) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingservice\/users(on:linkableparams:period:)","title":"func users(on: any Database, linkableParams: LinkableParams, period: TrendingPeriod) async throws -> LinkableResult<User>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingservice","title":"TrendingService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomainsservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomainsservice\/exists(on:url:)","title":"func exists(on: any Database, url: URL) async throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomainsservice","title":"UserBlockedDomainsService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermutesservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermutesservice\/mute(on:userid:muteduserid:mutestatuses:mutereblogs:mutenotifications:muteend:)","title":"func mute(on: any Database, userId: Int64, mutedUserId: Int64, muteStatuses: Bool, muteReblogs: Bool, muteNotifications: Bool, muteEnd: Date?) async throws -> UserMute","type":"method"},{"path":"\/documentation\/vernissageserver\/usermutesservice\/unmute(on:userid:muteduserid:)","title":"func unmute(on: any Database, userId: Int64, mutedUserId: Int64) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/usermutesservice","title":"UserMutesService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usersservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usersservice\/changeemail(on:userid:email:)","title":"func changeEmail(on: Request, userId: Int64, email: String) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/changepassword(on:userid:currentpassword:newpassword:)","title":"func changePassword(on: Request, userId: Int64, currentPassword: String, newPassword: String) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/confirmemail(on:userid:confirmationguid:)","title":"func confirmEmail(on: Request, userId: Int64, confirmationGuid: String) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/confirmforgotpassword(on:forgotpasswordguid:password:)","title":"func confirmForgotPassword(on: Request, forgotPasswordGuid: String, password: String) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/count(on:sincelastlogindate:)","title":"func count(on: any Database, sinceLastLoginDate: Date?) async throws -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/create(on:basedon:withavatarfilename:withheaderfilename:)","title":"func create(on: any Database, basedOn: PersonDto, withAvatarFileName: String?, withHeaderFileName: String?) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/creategravatarhash(from:)","title":"func createGravatarHash(from: String) -> String","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/delete(localuser:on:)","title":"func delete(localUser: Int64, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/delete(remoteuser:on:)","title":"func delete(remoteUser: User, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/delete(user:force:on:)","title":"func delete(user: User, force: Bool, on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/deletefromremote(userid:on:)","title":"func deleteFromRemote(userId: Int64, on: QueueContext) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/forgotpassword(on:email:)","title":"func forgotPassword(on: Request, email: String) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/get(on:account:)","title":"func get(on: any Database, account: String) async throws -> User?","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/get(on:activitypubprofile:)","title":"func get(on: any Database, activityPubProfile: String) async throws -> User?","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/get(on:id:)","title":"func get(on: any Database, id: Int64) async throws -> User?","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/get(on:username:)","title":"func get(on: any Database, userName: String) async throws -> User?","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/getdefaultsystemuser(on:)","title":"func getDefaultSystemUser(on: any Database) async throws -> User?","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/getmoderators(on:)","title":"func getModerators(on: any Database) async throws -> [User]","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/isemailconnected(on:email:)","title":"func isEmailConnected(on: Request, email: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/issignedinuser(on:username:)","title":"func isSignedInUser(on: Request, userName: String) -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/isusernametaken(on:username:)","title":"func isUserNameTaken(on: Request, userName: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/login(on:authenticatetoken:)","title":"func login(on: Request, authenticateToken: String) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/login(on:usernameoremail:password:)","title":"func login(on: Request, userNameOrEmail: String, password: String) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/ownstatuses(for:linkableparams:on:)","title":"func ownStatuses(for: Int64, linkableParams: LinkableParams, on: Request) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/publicstatuses(for:linkableparams:on:)","title":"func publicStatuses(for: Int64, linkableParams: LinkableParams, on: Request) async throws -> LinkableResult<Status>","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/search(query:on:page:size:)","title":"func search(query: String, on: Request, page: Int, size: Int) async throws -> Page<User>","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/update(user:on:basedon:withavatarfilename:withheaderfilename:)","title":"func update(user: User, on: any Database, basedOn: PersonDto, withAvatarFileName: String?, withHeaderFileName: String?) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/updatefollowcount(on:for:)","title":"func updateFollowCount(on: any Database, for: Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/updateuser(on:userdto:usernamenormalized:)","title":"func updateUser(on: Request, userDto: UserDto, userNameNormalized: String) async throws -> User","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/validateemail(on:email:)","title":"func validateEmail(on: Request, email: String?) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usersservice\/validateusername(on:username:)","title":"func validateUserName(on: Request, userName: String) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/usersservice","title":"UsersService","type":"class"},{"title":"Middlewares","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventhandlermiddleware\/init(_:storerequest:)","title":"init(EventType, storeRequest: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventhandlermiddleware\/respond(to:chainingto:)-2y3h0","title":"func respond(to: Request, chainingTo: any AsyncResponder) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventhandlermiddleware\/respond(to:chainingto:)-4xuv0","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/eventhandlermiddleware\/asyncmiddleware-implementations","title":"AsyncMiddleware Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventhandlermiddleware\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/vernissageserver\/eventhandlermiddleware\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/eventhandlermiddleware","title":"EventHandlerMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginhandlermiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginhandlermiddleware\/respond(to:chainingto:)-561nq","title":"func respond(to: Request, chainingTo: any AsyncResponder) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginhandlermiddleware\/respond(to:chainingto:)-6akyy","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/loginhandlermiddleware\/asyncmiddleware-implementations","title":"AsyncMiddleware Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginhandlermiddleware\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/vernissageserver\/loginhandlermiddleware\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/loginhandlermiddleware","title":"LoginHandlerMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware\/respond(to:chainingto:)-2h2ey","title":"func respond(to: Request, chainingTo: any AsyncResponder) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware\/respond(to:chainingto:)-1lfn","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware\/asyncmiddleware-implementations","title":"AsyncMiddleware Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/guardisadministratormiddleware","title":"GuardIsAdministratorMiddleware","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware\/respond(to:chainingto:)-3wdp","title":"func respond(to: Request, chainingTo: any AsyncResponder) async throws -> Response","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware\/respond(to:chainingto:)-6bixe","title":"func respond(to: Request, chainingTo: any Responder) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware\/asyncmiddleware-implementations","title":"AsyncMiddleware Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware\/makeresponder(chainingto:)","title":"func makeResponder(chainingTo: any Responder) -> any Responder","type":"method"}],"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware\/middleware-implementations","title":"Middleware Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/guardismoderatormiddleware","title":"GuardIsModeratorMiddleware","type":"struct"},{"title":"Errors","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/emailisalreadyconfirmed","title":"case emailIsAlreadyConfirmed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/accounterror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/accounterror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/accounterror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/accounterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/accounterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/accounterror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/accounterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/accounterror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/accounterror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/accounterror","title":"AccountError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/accepttypenotsupported(_:)","title":"case acceptTypeNotSupported(ObjectTypeDto?)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/actornotdownloaded(_:)","title":"case actorNotDownloaded(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/algorithmnotspecified","title":"case algorithmNotSpecified","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/algorithmnotsupported(_:)","title":"case algorithmNotSupported(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/badtimewindow(_:)","title":"case badTimeWindow(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/entitycaseerror(_:)","title":"case entityCaseError(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/followtypenotsupported(_:)","title":"case followTypeNotSupported(ObjectTypeDto?)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/incorrectdateformat(_:)","title":"case incorrectDateFormat(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/invalidnoteurl(_:)","title":"case invalidNoteUrl(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingattachments(_:)","title":"case missingAttachments(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingdateheader","title":"case missingDateHeader","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missinginstanceadminaccount","title":"case missingInstanceAdminAccount","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missinginstanceadminprivatekey","title":"case missingInstanceAdminPrivateKey","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingsharedinboxurl(_:)","title":"case missingSharedInboxUrl(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingsignatureheader","title":"case missingSignatureHeader","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingsignatureinheader","title":"case missingSignatureInHeader","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingsignedheader(_:)","title":"case missingSignedHeader(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/missingsignedheaderslist","title":"case missingSignedHeadersList","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/privatekeynotexists(_:)","title":"case privateKeyNotExists(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/rejecttypenotsupported(_:)","title":"case rejectTypeNotSupported(ObjectTypeDto?)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/signaturedatanotcreated","title":"case signatureDataNotCreated","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/signatureisnotvalid","title":"case signatureIsNotValid","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/singleactorissupportedinsigning","title":"case singleActorIsSupportedInSigning","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/statushasnotbeendownloaded(_:)","title":"case statusHasNotBeenDownloaded(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/unrecognizedactivitypubprofileurl","title":"case unrecognizedActivityPubProfileUrl","type":"case"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/usernotexistsindatabase(_:)","title":"case userNotExistsInDatabase(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/activitypuberror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/activitypuberror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/activitypuberror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypuberror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/activitypuberror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypuberror","title":"ActivityPubError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/attachmentalreadyconnectedtostatus","title":"case attachmentAlreadyConnectedToStatus","type":"case"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/createresizedimagefailed","title":"case createResizedImageFailed","type":"case"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/imagetoolarge","title":"case imageTooLarge","type":"case"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/missingimage","title":"case missingImage","type":"case"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/resizedimagefailed","title":"case resizedImageFailed","type":"case"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/savedfailed","title":"case savedFailed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/attachmenterror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/attachmenterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/attachmenterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/attachmenterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachmenterror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/attachmenterror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/attachmenterror","title":"AttachmentError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/authclientwithuriexists","title":"case authClientWithUriExists","type":"case"},{"path":"\/documentation\/vernissageserver\/authclienterror\/incorrectauthclientid","title":"case incorrectAuthClientId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/authclienterror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclienterror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/authclienterror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/authclienterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/authclienterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/authclienterror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/authclienterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienterror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/authclienterror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/authclienterror","title":"AuthClientError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/createresizedimagefailed","title":"case createResizedImageFailed","type":"case"},{"path":"\/documentation\/vernissageserver\/avatarerror\/missingimage","title":"case missingImage","type":"case"},{"path":"\/documentation\/vernissageserver\/avatarerror\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/vernissageserver\/avatarerror\/resizedimagefailed","title":"case resizedImageFailed","type":"case"},{"path":"\/documentation\/vernissageserver\/avatarerror\/savedfailed","title":"case savedFailed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/avatarerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/avatarerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/avatarerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/avatarerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/avatarerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/avatarerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/avatarerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/avatarerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/avatarerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/avatarerror","title":"AvatarError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/emailnotconfirmed","title":"case emailNotConfirmed","type":"case"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/invalidoldpassword","title":"case invalidOldPassword","type":"case"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/saltcorrupted","title":"case saltCorrupted","type":"case"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/useraccountisblocked","title":"case userAccountIsBlocked","type":"case"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/usernotfound","title":"case userNotFound","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/changepassworderror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/changepassworderror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/changepassworderror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/changepassworderror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/changepassworderror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/changepassworderror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/changepassworderror","title":"ChangePasswordError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/invalididortoken","title":"case invalidIdOrToken","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/confirmemailerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/confirmemailerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/confirmemailerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/confirmemailerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/confirmemailerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/confirmemailerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/confirmemailerror","title":"ConfirmEmailError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/base64privatekeynotgenerated","title":"case base64PrivateKeyNotGenerated","type":"case"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/base64publickeynotgenerated","title":"case base64PublicKeyNotGenerated","type":"case"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/externalprivatekeynotgenerated","title":"case externalPrivateKeyNotGenerated","type":"case"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/externalpublickeynotgenerated","title":"case externalPublicKeyNotGenerated","type":"case"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/privatekeynotgenerated","title":"case privateKeyNotGenerated","type":"case"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/publickeynotgenerated","title":"case publicKeyNotGenerated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/cryptoerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/cryptoerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/cryptoerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/cryptoerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/cryptoerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/cryptoerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/cryptoerror","title":"CryptoError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/databasenotspecified","title":"case databaseNotSpecified","type":"case"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/hostnotspecified","title":"case hostNotSpecified","type":"case"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/passwordnotspecified","title":"case passwordNotSpecified","type":"case"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/portnotspecified","title":"case portNotSpecified","type":"case"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/usernamenotspecified","title":"case userNameNotSpecified","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/databaseconnectionerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/databaseconnectionerror","title":"DatabaseConnectionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/attachmentforbidden","title":"case attachmentForbidden","type":"case"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/refreshtokenforbidden","title":"case refreshTokenForbidden","type":"case"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/statusforbidden","title":"case statusForbidden","type":"case"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/userforbidden","title":"case userForbidden","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/entityforbiddenerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/entityforbiddenerror","title":"EntityForbiddenError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/attachmentnotfound","title":"case attachmentNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/authclientnotfound","title":"case authClientNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/invitationnotfound","title":"case invitationNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/locationnotfound","title":"case locationNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/refreshtokennotfound","title":"case refreshTokenNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/reportnotfound","title":"case reportNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/rolenotfound","title":"case roleNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/statusnotfound","title":"case statusNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/twofactortokennotfound","title":"case twoFactorTokenNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/usernotfound","title":"case userNotFound","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/entitynotfounderror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/entitynotfounderror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/entitynotfounderror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/entitynotfounderror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entitynotfounderror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/entitynotfounderror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/entitynotfounderror","title":"EntityNotFoundError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/missingactivitypubactionid","title":"case missingActivityPubActionId","type":"case"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/missingfollowentity(_:_:)","title":"case missingFollowEntity(Int64, Int64)","type":"case"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/missingprivatekey(_:)","title":"case missingPrivateKey(String)","type":"case"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/missingsourceuser(_:)","title":"case missingSourceUser(Int64)","type":"case"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/missingtargetuser(_:)","title":"case missingTargetUser(Int64)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/followrequesterror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/followrequesterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/followrequesterror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/followrequesterror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/followrequesterror","title":"FollowRequestError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/emailisempty","title":"case emailIsEmpty","type":"case"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/passwordnothashed","title":"case passwordNotHashed","type":"case"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/saltcorrupted","title":"case saltCorrupted","type":"case"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/tokenexpired","title":"case tokenExpired","type":"case"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/tokennotgenerated","title":"case tokenNotGenerated","type":"case"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/useraccountisblocked","title":"case userAccountIsBlocked","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/forgotpassworderror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/forgotpassworderror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/forgotpassworderror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/forgotpassworderror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/forgotpassworderror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/forgotpassworderror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/forgotpassworderror","title":"ForgotPasswordError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/createresizedimagefailed","title":"case createResizedImageFailed","type":"case"},{"path":"\/documentation\/vernissageserver\/headererror\/missingimage","title":"case missingImage","type":"case"},{"path":"\/documentation\/vernissageserver\/headererror\/notfound","title":"case notFound","type":"case"},{"path":"\/documentation\/vernissageserver\/headererror\/resizedimagefailed","title":"case resizedImageFailed","type":"case"},{"path":"\/documentation\/vernissageserver\/headererror\/savedfailed","title":"case savedFailed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/headererror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/headererror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/headererror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/headererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/headererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/headererror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/headererror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/headererror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/headererror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/headererror","title":"HeaderError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/cannotdeleteusedinvitation","title":"case cannotDeleteUsedInvitation","type":"case"},{"path":"\/documentation\/vernissageserver\/invitationerror\/maximumnumberofinvitationsgenerated","title":"case maximumNumberOfInvitationsGenerated","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/invitationerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/invitationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/invitationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/invitationerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/invitationerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitationerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/invitationerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/invitationerror","title":"InvitationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/incorrectlocationid","title":"case incorrectLocationId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/locationerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/locationerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/locationerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/locationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/locationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/locationerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/locationerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/locationerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/locationerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/locationerror","title":"LocationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/invalidlogincredentials","title":"case invalidLoginCredentials","type":"case"},{"path":"\/documentation\/vernissageserver\/loginerror\/saltcorrupted","title":"case saltCorrupted","type":"case"},{"path":"\/documentation\/vernissageserver\/loginerror\/twofactortokennotfound","title":"case twoFactorTokenNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/loginerror\/useraccountisblocked","title":"case userAccountIsBlocked","type":"case"},{"path":"\/documentation\/vernissageserver\/loginerror\/useraccountisnotapproved","title":"case userAccountIsNotApproved","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/loginerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/loginerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/loginerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/loginerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/loginerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/loginerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/loginerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/loginerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/loginerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/loginerror","title":"LoginError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/authenticatetokenexpirationdatenotfound","title":"case authenticateTokenExpirationDateNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/autheticatetokenexpired","title":"case autheticateTokenExpired","type":"case"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/clientnotfound","title":"case clientNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/codetokennotfound","title":"case codeTokenNotFound","type":"case"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/invalidauthenticatetoken","title":"case invalidAuthenticateToken","type":"case"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/invalidclientname","title":"case invalidClientName","type":"case"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/useraccountisblocked","title":"case userAccountIsBlocked","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/openidconnecterror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/openidconnecterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/openidconnecterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/openidconnecterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/openidconnecterror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/openidconnecterror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/openidconnecterror","title":"OpenIdConnectError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/refreshtokenexpired","title":"case refreshTokenExpired","type":"case"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/refreshtokennotexists","title":"case refreshTokenNotExists","type":"case"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/refreshtokenrevoked","title":"case refreshTokenRevoked","type":"case"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/useridnotspecified","title":"case userIdNotSpecified","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtokenerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/refreshtokenerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtokenerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtokenerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtokenerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtokenerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/refreshtokenerror","title":"RefreshTokenError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/disposableemailcannotbeused","title":"case disposableEmailCannotBeUsed","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/emailisalreadyconnected","title":"case emailIsAlreadyConnected","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/invitationtokenhasbeenused","title":"case invitationTokenHasBeenUsed","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/invitationtokenisinvalid","title":"case invitationTokenIsInvalid","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/missingemail","title":"case missingEmail","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/missingemailconfirmationguid","title":"case missingEmailConfirmationGuid","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/reasonismandatory","title":"case reasonIsMandatory","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/registrationisdisabled","title":"case registrationIsDisabled","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/securitytokenisinvalid","title":"case securityTokenIsInvalid","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/securitytokenismandatory","title":"case securityTokenIsMandatory","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/userhavetoacceptagreement","title":"case userHaveToAcceptAgreement","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/useridnotexists","title":"case userIdNotExists","type":"case"},{"path":"\/documentation\/vernissageserver\/registererror\/usernameisalreadytaken","title":"case userNameIsAlreadyTaken","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/registererror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/registererror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/registererror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/registererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/registererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/registererror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/registererror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/registererror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/registererror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/registererror","title":"RegisterError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/incorrectroleid","title":"case incorrectRoleId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/roleerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/roleerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/roleerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/roleerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/roleerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/roleerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/roleerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/roleerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/roleerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/roleerror","title":"RoleError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/incorrectsettingid","title":"case incorrectSettingId","type":"case"},{"path":"\/documentation\/vernissageserver\/settingerror\/settingskeycannotbechanged","title":"case settingsKeyCannotBeChanged","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/settingerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/settingerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/settingerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/settingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/settingerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/settingerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/settingerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/settingerror","title":"SettingError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/attachmentsarerequired","title":"case attachmentsAreRequired","type":"case"},{"path":"\/documentation\/vernissageserver\/statuserror\/cannotaddcommentwithoutcommentedstatus","title":"case cannotAddCommentWithoutCommentedStatus","type":"case"},{"path":"\/documentation\/vernissageserver\/statuserror\/cannotreblogcomments","title":"case cannotReblogComments","type":"case"},{"path":"\/documentation\/vernissageserver\/statuserror\/cannotreblogmentionedstatus","title":"case cannotReblogMentionedStatus","type":"case"},{"path":"\/documentation\/vernissageserver\/statuserror\/incorrectattachmentid","title":"case incorrectAttachmentId","type":"case"},{"path":"\/documentation\/vernissageserver\/statuserror\/incorrectstatusid","title":"case incorrectStatusId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/statuserror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statuserror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/statuserror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/statuserror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statuserror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statuserror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/statuserror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statuserror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statuserror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statuserror","title":"StatusError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/storageerror\/emptybody","title":"case emptyBody","type":"case"},{"path":"\/documentation\/vernissageserver\/storageerror\/emptypublicfolderpath","title":"case emptyPublicFolderPath","type":"case"},{"path":"\/documentation\/vernissageserver\/storageerror\/notsuccessresponse(_:)","title":"case notSuccessResponse(ClientResponse)","type":"case"},{"path":"\/documentation\/vernissageserver\/storageerror\/notsupportedstorage","title":"case notSupportedStorage","type":"case"},{"path":"\/documentation\/vernissageserver\/storageerror\/s3storagenotconfigured","title":"case s3StorageNotConfigured","type":"case"},{"path":"\/documentation\/vernissageserver\/storageerror\/unknownerror","title":"case unknownError","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/storageerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/storageerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/storageerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/storageerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/storageerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/storageerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/storageerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/storageerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/storageerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/storageerror","title":"StorageError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/temporaryurlfailed","title":"case temporaryUrlFailed","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/temporaryfileerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/temporaryfileerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/temporaryfileerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/temporaryfileerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/temporaryfileerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/temporaryfileerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/temporaryfileerror","title":"TemporaryFileError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/useralreadyapproved","title":"case userAlreadyApproved","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/usererror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/usererror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/usererror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/usererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/usererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/usererror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/usererror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usererror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/usererror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/usererror","title":"UserError","type":"enum"},{"title":"Queue Background Jobs","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/dequeue(_:_:)-4m7vj","title":"func dequeue(QueueContext, ActivityPubFollowRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/error(_:_:_:)-3xbsp","title":"func error(QueueContext, any Error, ActivityPubFollowRequestDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/payload","title":"ActivityPubFollowRequesterJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/dequeue(_:_:)-4eesv","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/error(_:_:_:)-m6qi","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/name-8wnml","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/parsepayload(_:)-5376w","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/serializepayload(_:)-7ko3r","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/name-9ojqo","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/parsepayload(_:)-9kamz","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/serializepayload(_:)-4s0vj","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubfollowrequesterjob","title":"ActivityPubFollowRequesterJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/dequeue(_:_:)-5aq8t","title":"func dequeue(QueueContext, ActivityPubFollowRespondDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/error(_:_:_:)-6rnjg","title":"func error(QueueContext, any Error, ActivityPubFollowRespondDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/payload","title":"ActivityPubFollowResponderJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/dequeue(_:_:)-582qj","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/error(_:_:_:)-vl4t","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/name-n6hv","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/parsepayload(_:)-6m0py","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/serializepayload(_:)-3luaf","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/name-7apzl","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/parsepayload(_:)-8a25w","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/serializepayload(_:)-4sdhn","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubfollowresponderjob","title":"ActivityPubFollowResponderJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/dequeue(_:_:)-6t4ad","title":"func dequeue(QueueContext, ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/error(_:_:_:)-7h6we","title":"func error(QueueContext, any Error, ActivityPubRequestDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/payload","title":"ActivityPubSharedInboxJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/dequeue(_:_:)-5s9s2","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/error(_:_:_:)-1kbz7","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/name-10vaz","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/parsepayload(_:)-6fqf4","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/serializepayload(_:)-5zrov","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/name-2c9l2","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/parsepayload(_:)-98t4y","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/serializepayload(_:)-2nqd","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubsharedinboxjob","title":"ActivityPubSharedInboxJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/dequeue(_:_:)-57arx","title":"func dequeue(QueueContext, ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/error(_:_:_:)-5mn2z","title":"func error(QueueContext, any Error, ActivityPubRequestDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/payload","title":"ActivityPubUserInboxJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/dequeue(_:_:)-t9do","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/error(_:_:_:)-5gth","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/name-81vi8","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/parsepayload(_:)-7v1xe","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/serializepayload(_:)-1cmi6","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/name-6rqm5","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/parsepayload(_:)-4wp5","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/serializepayload(_:)-49x3v","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubuserinboxjob","title":"ActivityPubUserInboxJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/dequeue(_:_:)-1hhz6","title":"func dequeue(QueueContext, ActivityPubRequestDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/error(_:_:_:)-725aw","title":"func error(QueueContext, any Error, ActivityPubRequestDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/payload","title":"ActivityPubUserOutboxJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/dequeue(_:_:)-4zja6","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/error(_:_:_:)-4f3ui","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/name-wz5j","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/parsepayload(_:)-8ndl1","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/serializepayload(_:)-5jzfq","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/name-3lhlh","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/parsepayload(_:)-2rmus","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/serializepayload(_:)-9k08r","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/activitypubuseroutboxjob","title":"ActivityPubUserOutboxJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/dequeue(_:_:)-9pv7o","title":"func dequeue(QueueContext, EmailDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/error(_:_:_:)-6tm5h","title":"func error(QueueContext, any Error, EmailDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/payload","title":"EmailJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/dequeue(_:_:)-2evf4","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/error(_:_:_:)-1d17u","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/name-2m3cm","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/parsepayload(_:)-7gxnv","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/serializepayload(_:)-3wmyt","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/emailjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/name-41aqu","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/emailjob\/parsepayload(_:)-3srpq","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/emailjob\/serializepayload(_:)-15l0g","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/emailjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/emailjob","title":"EmailJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/dequeue(_:_:)-i5uk","title":"func dequeue(QueueContext, StatusDeleteJobDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/error(_:_:_:)-64n3w","title":"func error(QueueContext, any Error, StatusDeleteJobDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/payload","title":"StatusDeleterJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/dequeue(_:_:)-4b6gf","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/error(_:_:_:)-1t57d","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/name-14r7r","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/parsepayload(_:)-7vg66","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/serializepayload(_:)-3g41b","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusdeleterjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/name-6gzje","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/parsepayload(_:)-1z6l2","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusdeleterjob\/serializepayload(_:)-2l1zq","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusdeleterjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusdeleterjob","title":"StatusDeleterJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/dequeue(_:_:)-r6rz","title":"func dequeue(QueueContext, Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/error(_:_:_:)-7xto","title":"func error(QueueContext, any Error, Int64) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/payload","title":"StatusRebloggerJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/dequeue(_:_:)-7tcqx","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/error(_:_:_:)-6fwka","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/name-92kca","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/parsepayload(_:)-49wvy","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/serializepayload(_:)-9xs5y","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/name-81015","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/parsepayload(_:)-9dyso","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/serializepayload(_:)-4lwmu","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusrebloggerjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusrebloggerjob","title":"StatusRebloggerJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/dequeue(_:_:)-8bt2x","title":"func dequeue(QueueContext, Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/error(_:_:_:)-5p8ls","title":"func error(QueueContext, any Error, Int64) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/payload","title":"StatusSenderJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/dequeue(_:_:)-74r1","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/error(_:_:_:)-1mqyr","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/name-522gm","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/parsepayload(_:)-7oth7","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/serializepayload(_:)-6yk6c","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statussenderjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/name-1qpib","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/parsepayload(_:)-ue3e","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statussenderjob\/serializepayload(_:)-7knav","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statussenderjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statussenderjob","title":"StatusSenderJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/dequeue(_:_:)-9r9tk","title":"func dequeue(QueueContext, ActivityPubUnreblogDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/error(_:_:_:)-20ie2","title":"func error(QueueContext, any Error, ActivityPubUnreblogDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/payload","title":"StatusUnrebloggerJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/dequeue(_:_:)-9krzt","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/error(_:_:_:)-6oo99","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/name-6sbw5","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/parsepayload(_:)-gf04","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/serializepayload(_:)-9wdmj","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/name-8uc03","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/parsepayload(_:)-32ulf","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/serializepayload(_:)-toa","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusunrebloggerjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusunrebloggerjob","title":"StatusUnrebloggerJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/dequeue(_:_:)-8yq6i","title":"func dequeue(QueueContext, FlexiField) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/error(_:_:_:)-8jzft","title":"func error(QueueContext, any Error, FlexiField) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/payload","title":"UrlValidatorJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/dequeue(_:_:)-1ez6k","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/error(_:_:_:)-4tlyo","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/name-58p34","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/parsepayload(_:)-9z7rw","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/serializepayload(_:)-2tago","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/name-16ni0","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/parsepayload(_:)-3bz5r","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/serializepayload(_:)-jaex","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/urlvalidatorjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/urlvalidatorjob","title":"UrlValidatorJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/dequeue(_:_:)-1onnd","title":"func dequeue(QueueContext, Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/error(_:_:_:)-2lh4u","title":"func error(QueueContext, any Error, Int64) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/payload","title":"UserDeleterJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/dequeue(_:_:)-1ws6g","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/error(_:_:_:)-9ow9i","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/name-6kv08","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/parsepayload(_:)-6fjy0","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/serializepayload(_:)-1joz5","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/userdeleterjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/name-8kouy","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/parsepayload(_:)-7czy2","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/userdeleterjob\/serializepayload(_:)-7z3h8","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/userdeleterjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userdeleterjob","title":"UserDeleterJob","type":"struct"},{"title":"Scheduled Background Jobs","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/jobid","title":"let jobId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/run(context:)-7ke1d","title":"func run(context: QueueContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/run(context:)-47rtp","title":"func run(context: QueueContext) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/single(jobid:on:)","title":"func single(jobId: String, on: QueueContext) async throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/clearattachmentsjob\/asyncscheduledjob-implementations","title":"AsyncScheduledJob Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/clearattachmentsjob","title":"ClearAttachmentsJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingjob\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingjob\/jobid","title":"let jobId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingjob\/run(context:)-28wy6","title":"func run(context: QueueContext) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingjob\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingjob\/run(context:)-3iv2a","title":"func run(context: QueueContext) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingjob\/single(jobid:on:)","title":"func single(jobId: String, on: QueueContext) async throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingjob\/asyncscheduledjob-implementations","title":"AsyncScheduledJob Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendingjob","title":"TrendingJob","type":"struct"},{"title":"OAuth","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/init(code:state:scope:authuser:prompt:)","title":"init(code: String?, state: String?, scope: String?, authuser: String?, prompt: String?)","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/authuser","title":"var authuser: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/code","title":"var code: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/prompt","title":"var prompt: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/scope","title":"var scope: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/state","title":"var state: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/decoderequest(_:)-3x787","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/decoderequest(_:)-9y5lu","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/oauthcallback\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthcallback\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/oauthcallback\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/oauthcallback","title":"OAuthCallback","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/init(url:code:clientid:clientsecret:redirecturi:granttype:)","title":"init(url: String, code: String, clientId: String, clientSecret: String, redirectUri: String, grantType: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/clientsecret","title":"var clientSecret: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/granttype","title":"var grantType: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/redirecturi","title":"var redirectUri: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/url","title":"var url: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/clientid","title":"case clientId","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/clientsecret","title":"case clientSecret","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/code","title":"case code","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/granttype","title":"case grantType","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/redirecturi","title":"case redirectUri","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/oauthrequest\/codingkeys","title":"OAuthRequest.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/decoderequest(_:)-4vlvs","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/decoderequest(_:)-5ettf","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/oauthrequest\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthrequest\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/oauthrequest\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/oauthrequest","title":"OAuthRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/init(idtoken:scope:tokentype:refreshtoken:)","title":"init(idToken: String?, scope: String?, tokenType: String?, refreshToken: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/idtoken","title":"var idToken: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/refreshtoken","title":"var refreshToken: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/scope","title":"var scope: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/tokentype","title":"var tokenType: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/idtoken","title":"case idToken","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/refreshtoken","title":"case refreshToken","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/scope","title":"case scope","type":"case"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/tokentype","title":"case tokenType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/oauthresponse\/codingkeys","title":"OAuthResponse.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/decoderequest(_:)-2oinz","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/decoderequest(_:)-8tgj7","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/oauthresponse\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthresponse\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/oauthresponse\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/oauthresponse","title":"OAuthResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthuser\/init(uniqueid:email:familyname:givenname:name:)","title":"init(uniqueId: String, email: String, familyName: String?, givenName: String?, name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/oauthuser\/email","title":"let email: String","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthuser\/familyname","title":"let familyName: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthuser\/givenname","title":"let givenName: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthuser\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/oauthuser\/uniqueid","title":"let uniqueId: String","type":"property"}],"path":"\/documentation\/vernissageserver\/oauthuser","title":"OAuthUser","type":"struct"},{"title":"Database Models","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/init(baseaddress:domain:webtitle:webdescription:webemail:webthumbnail:weblanguages:webcontactuserid:isrecaptchaenabled:isregistrationopened:isregistrationbyapprovalopened:isregistrationbyinvitationsopened:emailfromaddress:emailfromname:reca-17287","title":"init(baseAddress: String, domain: String, webTitle: String, webDescription: String, webEmail: String, webThumbnail: String, webLanguages: String, webContactUserId: String, isRecaptchaEnabled: Bool, isRegistrationOpened: Bool, isRegistrationByApprovalOpened: Bool, isRegistrationByInvitationsOpened: Bool, emailFromAddress: String, emailFromName: String, recaptchaKey: String, eventsToStore: String, corsOrigin: String?, s3Address: String?, s3Region: String?, s3Bucket: String?, s3AccessKeyId: String?, s3SecretAccessKey: String?, maximumNumberOfInvitations: Int, maxCharacters: Int, maxMediaAttachments: Int, imageSizeLimit: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/baseaddress","title":"let baseAddress: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/corsorigin","title":"let corsOrigin: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/domain","title":"let domain: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/emailfromaddress","title":"let emailFromAddress: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/emailfromname","title":"let emailFromName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/eventstostore","title":"let eventsToStore: [EventType]","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/imagesizelimit","title":"let imageSizeLimit: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/isrecaptchaenabled","title":"let isRecaptchaEnabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/isregistrationbyapprovalopened","title":"let isRegistrationByApprovalOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/isregistrationbyinvitationsopened","title":"let isRegistrationByInvitationsOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/isregistrationopened","title":"let isRegistrationOpened: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/maxcharacters","title":"let maxCharacters: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/maxmediaattachments","title":"let maxMediaAttachments: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/maximumnumberofinvitations","title":"let maximumNumberOfInvitations: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/recaptchakey","title":"let recaptchaKey: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/s3accesskeyid","title":"let s3AccessKeyId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/s3address","title":"let s3Address: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/s3bucket","title":"let s3Bucket: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/s3region","title":"let s3Region: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/s3secretaccesskey","title":"let s3SecretAccessKey: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/webcontactuserid","title":"let webContactUserId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/webdescription","title":"let webDescription: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/webemail","title":"let webEmail: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/weblanguages","title":"let webLanguages: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/webthumbnail","title":"let webThumbnail: String","type":"property"},{"path":"\/documentation\/vernissageserver\/applicationsettings\/webtitle","title":"let webTitle: String","type":"property"}],"path":"\/documentation\/vernissageserver\/applicationsettings","title":"ApplicationSettings","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/prepare(on:)-6w3fg","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/revert(on:)-42fu3","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/prepare(on:)-6te1","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/revert(on:)-4zrhy","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/addlicense\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/attachment\/addlicense","title":"Attachment.AddLicense","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/prepare(on:)-67vf8","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/revert(on:)-1909","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/prepare(on:)-2gu69","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/revert(on:)-8f02p","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/createattachments\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/attachment\/createattachments","title":"Attachment.CreateAttachments","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/attachment\/init(id:userid:originalfileid:smallfileid:description:blurhash:locationid:)","title":"convenience init(id: Int64?, userId: Int64, originalFileId: Int64, smallFileId: Int64, description: String?, blurhash: String?, locationId: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/blurhash","title":"var blurhash: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/exif","title":"var exif: Exif?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/license","title":"var license: License?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/location","title":"var location: Location?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/originalfile","title":"var originalFile: FileInfo","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/smallfile","title":"var smallFile: FileInfo","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/status","title":"var status: Status?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/attachment\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/decoderequest(_:)-8ujgd","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/decoderequest(_:)-9qc85","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/attachment\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/boolean","title":"Attachment.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/enum","title":"Attachment.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/field","title":"Attachment.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/group","title":"Attachment.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/optionalboolean","title":"Attachment.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/optionalenum","title":"Attachment.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/optionalfield","title":"Attachment.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/children","title":"Attachment.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/compositechildren","title":"Attachment.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/compositeid","title":"Attachment.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/compositeoptionalchild","title":"Attachment.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/compositeoptionalparent","title":"Attachment.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/compositeparent","title":"Attachment.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/id-swift.typealias","title":"Attachment.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/optionalchild","title":"Attachment.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/optionalparent","title":"Attachment.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/parent","title":"Attachment.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/siblings","title":"Attachment.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/attachment\/timestamp","title":"Attachment.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/find(_:on:)-28bg3","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/find(_:on:)-5vom1","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/attachment\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/attachment\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/attachment\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/attachment\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/attachment\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/attachment","title":"Attachment","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/prepare(on:)-3njum","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/revert(on:)-5pqhx","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/prepare(on:)-4efo5","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/revert(on:)-9cwr0","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/authclient\/createauthclients\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/authclient\/createauthclients","title":"AuthClient.CreateAuthClients","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/authclient\/init(from:)-84q4s","title":"convenience init(from: AuthClientDto)","type":"init"},{"path":"\/documentation\/vernissageserver\/authclient\/init(id:type:name:uri:tenantid:clientid:clientsecret:callbackurl:svgicon:)","title":"convenience init(id: Int64?, type: AuthClientType, name: String, uri: String, tenantId: String?, clientId: String, clientSecret: String, callbackUrl: String, svgIcon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/callbackurl","title":"var callbackUrl: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/clientsecret","title":"var clientSecret: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/deletedat","title":"var deletedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/svgicon","title":"var svgIcon: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/tenantid","title":"var tenantId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/type","title":"var type: AuthClientType","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/uri","title":"var uri: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/authclient\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/authclient\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/init(from:)-9mteo","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/authclient\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/authclient\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/boolean","title":"AuthClient.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/enum","title":"AuthClient.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/field","title":"AuthClient.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/group","title":"AuthClient.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/optionalboolean","title":"AuthClient.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/optionalenum","title":"AuthClient.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/optionalfield","title":"AuthClient.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/authclient\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/children","title":"AuthClient.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/compositechildren","title":"AuthClient.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/compositeid","title":"AuthClient.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/compositeoptionalchild","title":"AuthClient.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/compositeoptionalparent","title":"AuthClient.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/compositeparent","title":"AuthClient.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/id-swift.typealias","title":"AuthClient.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/optionalchild","title":"AuthClient.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/optionalparent","title":"AuthClient.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/parent","title":"AuthClient.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/siblings","title":"AuthClient.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/authclient\/timestamp","title":"AuthClient.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/find(_:on:)-9a3iq","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/find(_:on:)-jnt8","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/authclient\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/authclient\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclient\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/authclient\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/authclient\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/authclient","title":"AuthClient","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/apple","title":"case apple","type":"case"},{"path":"\/documentation\/vernissageserver\/authclienttype\/google","title":"case google","type":"case"},{"path":"\/documentation\/vernissageserver\/authclienttype\/microsoft","title":"case microsoft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/authclienttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/authclienttype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/authclienttype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/authclienttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/authclienttype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/authclienttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/authclienttype","title":"AuthClientType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/prepare(on:)-15739","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/revert(on:)-843dl","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/prepare(on:)-5o701","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/createcategories\/revert(on:)-9lagz","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/createcategories\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/category\/createcategories","title":"Category.CreateCategories","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/prepare(on:)-8877b","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/revert(on:)-4kf60","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/prepare(on:)-3iel2","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/revert(on:)-1bgfx","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/createnamenormalized\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/category\/createnamenormalized","title":"Category.CreateNameNormalized","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/category\/init(id:name:)","title":"convenience init(id: Int64?, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/hashtags","title":"var hashtags: [CategoryHashtag]","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/namenormalized","title":"var nameNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/category\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/decoderequest(_:)-7zqbb","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/decoderequest(_:)-9gpl5","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/category\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/category\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/boolean","title":"Category.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/enum","title":"Category.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/field","title":"Category.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/group","title":"Category.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/optionalboolean","title":"Category.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/optionalenum","title":"Category.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/optionalfield","title":"Category.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/children","title":"Category.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/compositechildren","title":"Category.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/compositeid","title":"Category.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/compositeoptionalchild","title":"Category.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/compositeoptionalparent","title":"Category.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/compositeparent","title":"Category.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/id-swift.typealias","title":"Category.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/optionalchild","title":"Category.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/optionalparent","title":"Category.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/parent","title":"Category.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/siblings","title":"Category.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/category\/timestamp","title":"Category.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/find(_:on:)-4ssp4","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/find(_:on:)-7e4c7","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/category\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/category\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/category\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/category\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/category\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/category","title":"Category","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/prepare(on:)-7hja8","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/revert(on:)-7p8hv","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/prepare(on:)-9wll6","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/revert(on:)-q0uy","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/createcategoryhashtags","title":"CategoryHashtag.CreateCategoryHashtags","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/init(id:categoryid:hashtag:)","title":"convenience init(id: Int64?, categoryId: Int64, hashtag: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/category","title":"var category: Category","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/hashtag","title":"var hashtag: String","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/hashtagnormalized","title":"var hashtagNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/decoderequest(_:)-2tbg8","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/decoderequest(_:)-64tby","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/boolean","title":"CategoryHashtag.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/enum","title":"CategoryHashtag.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/field","title":"CategoryHashtag.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/group","title":"CategoryHashtag.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/optionalboolean","title":"CategoryHashtag.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/optionalenum","title":"CategoryHashtag.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/optionalfield","title":"CategoryHashtag.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/children","title":"CategoryHashtag.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/compositechildren","title":"CategoryHashtag.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/compositeid","title":"CategoryHashtag.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/compositeoptionalchild","title":"CategoryHashtag.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/compositeoptionalparent","title":"CategoryHashtag.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/compositeparent","title":"CategoryHashtag.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/id-swift.typealias","title":"CategoryHashtag.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/optionalchild","title":"CategoryHashtag.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/optionalparent","title":"CategoryHashtag.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/parent","title":"CategoryHashtag.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/siblings","title":"CategoryHashtag.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/timestamp","title":"CategoryHashtag.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/find(_:on:)-43q24","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/find(_:on:)-44mra","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/categoryhashtag\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/categoryhashtag\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/categoryhashtag","title":"CategoryHashtag","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/prepare(on:)-4oaaq","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/revert(on:)-708w9","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/prepare(on:)-7wya4","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/createcountries\/revert(on:)-s48p","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/country\/createcountries\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/country\/createcountries","title":"Country.CreateCountries","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/country\/init(id:code:name:)","title":"convenience init(id: Int64?, code: String, name: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/location","title":"var location: [Location]","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/country\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/decoderequest(_:)-22nbf","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/decoderequest(_:)-3kn5x","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/country\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/country\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/country\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/country\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/boolean","title":"Country.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/enum","title":"Country.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/field","title":"Country.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/group","title":"Country.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/optionalboolean","title":"Country.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/optionalenum","title":"Country.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/optionalfield","title":"Country.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/country\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/children","title":"Country.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/compositechildren","title":"Country.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/compositeid","title":"Country.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/compositeoptionalchild","title":"Country.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/compositeoptionalparent","title":"Country.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/compositeparent","title":"Country.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/id-swift.typealias","title":"Country.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/optionalchild","title":"Country.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/optionalparent","title":"Country.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/parent","title":"Country.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/siblings","title":"Country.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/country\/timestamp","title":"Country.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/find(_:on:)-38qm0","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/find(_:on:)-97gan","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/country\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/country\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/country\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/country\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/country\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/country\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/country","title":"Country","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/prepare(on:)-9ijxi","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/revert(on:)-73h6p","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/prepare(on:)-7fvym","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/adduseragent\/revert(on:)-941iu","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/adduseragent\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/event\/adduseragent","title":"Event.AddUserAgent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/prepare(on:)-3agft","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/revert(on:)-3dbor","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/prepare(on:)-7rh1d","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/createevents\/revert(on:)-3c5w4","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/createevents\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/event\/createevents","title":"Event.CreateEvents","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/event\/init(id:type:method:uri:wassuccess:userid:requestbody:responsebody:error:useragent:)","title":"convenience init(id: Int64?, type: EventType, method: HTTPMethod, uri: String, wasSuccess: Bool, userId: Int64?, requestBody: String?, responseBody: String?, error: String?, userAgent: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/error","title":"var error: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/method","title":"var method: String","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/requestbody","title":"var requestBody: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/responsebody","title":"var responseBody: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/type","title":"var type: EventType","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/uri","title":"var uri: String","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/useragent","title":"var userAgent: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/userid","title":"var userId: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/wassuccess","title":"var wasSuccess: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/event\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/decoderequest(_:)-14jil","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/decoderequest(_:)-47myy","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/event\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/event\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/boolean","title":"Event.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/enum","title":"Event.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/field","title":"Event.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/group","title":"Event.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/optionalboolean","title":"Event.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/optionalenum","title":"Event.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/optionalfield","title":"Event.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/children","title":"Event.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/compositechildren","title":"Event.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/compositeid","title":"Event.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/compositeoptionalchild","title":"Event.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/compositeoptionalparent","title":"Event.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/compositeparent","title":"Event.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/id-swift.typealias","title":"Event.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/optionalchild","title":"Event.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/optionalparent","title":"Event.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/parent","title":"Event.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/siblings","title":"Event.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/event\/timestamp","title":"Event.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/find(_:on:)-1udox","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/find(_:on:)-7ljg2","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/event\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/event\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/event\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/event\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/event\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/event","title":"Event","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountchangeemail","title":"case accountChangeEmail","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountchangepassword","title":"case accountChangePassword","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountconfirm","title":"case accountConfirm","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountdisabletwofactorauthentication","title":"case accountDisableTwoFactorAuthentication","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountenabletwofactorauthentication","title":"case accountEnableTwoFactorAuthentication","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountforgotconfirm","title":"case accountForgotConfirm","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountforgottoken","title":"case accountForgotToken","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountgettwofactortoken","title":"case accountGetTwoFactorToken","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountlogin","title":"case accountLogin","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountrefresh","title":"case accountRefresh","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/accountrevoke","title":"case accountRevoke","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubfollowers","title":"case activityPubFollowers","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubfollowing","title":"case activityPubFollowing","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubinbox","title":"case activityPubInbox","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubliked","title":"case activityPubLiked","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypuboutbox","title":"case activityPubOutbox","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubread","title":"case activityPubRead","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubsharedinbox","title":"case activityPubSharedInbox","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/activitypubstatus","title":"case activityPubStatus","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/attachmentscreate","title":"case attachmentsCreate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/attachmentsdelete","title":"case attachmentsDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/attachmentsupdate","title":"case attachmentsUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/authclientscreate","title":"case authClientsCreate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/authclientsdelete","title":"case authClientsDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/authclientslist","title":"case authClientsList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/authclientsread","title":"case authClientsRead","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/authclientsupdate","title":"case authClientsUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/avatardelete","title":"case avatarDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/avatarupdate","title":"case avatarUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/bookmarkslist","title":"case bookmarksList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/categorieslist","title":"case categoriesList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/countrieslist","title":"case countriesList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/favouriteslist","title":"case favouritesList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/followrequestapprove","title":"case followRequestApprove","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/followrequestlist","title":"case followRequestList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/followrequestreject","title":"case followRequestReject","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/headerdelete","title":"case headerDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/headerupdate","title":"case headerUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/hostmeta","title":"case hostMeta","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/instance","title":"case instance","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/invitationdelete","title":"case invitationDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/invitationgenerate","title":"case invitationGenerate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/invitationlist","title":"case invitationList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/licenseslist","title":"case licensesList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/locationslist","title":"case locationsList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/locationsread","title":"case locationsRead","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/nodeinfo","title":"case nodeinfo","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/notificationscount","title":"case notificationsCount","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/notificationslist","title":"case notificationsList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/notificationsupdatemarker","title":"case notificationsUpdateMarker","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/registeremail","title":"case registerEmail","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/registernewuser","title":"case registerNewUser","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/registerusername","title":"case registerUserName","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/relationships","title":"case relationships","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/reportsclose","title":"case reportsClose","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/reportscreate","title":"case reportsCreate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/reportslist","title":"case reportsList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/reportsrestore","title":"case reportsRestore","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/rolescreate","title":"case rolesCreate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/rolesdelete","title":"case rolesDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/roleslist","title":"case rolesList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/rolesread","title":"case rolesRead","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/rolesupdate","title":"case rolesUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/search","title":"case search","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/settingslist","title":"case settingsList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/settingspublic","title":"case settingsPublic","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/settingsupdate","title":"case settingsUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesapplycontentwarning","title":"case statusesApplyContentWarning","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesbookmark","title":"case statusesBookmark","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusescontext","title":"case statusesContext","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusescreate","title":"case statusesCreate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesdelete","title":"case statusesDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesfavourite","title":"case statusesFavourite","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesfavourited","title":"case statusesFavourited","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesfeature","title":"case statusesFeature","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statuseslist","title":"case statusesList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesread","title":"case statusesRead","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesreblog","title":"case statusesReblog","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesreblogged","title":"case statusesReblogged","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesunbookmark","title":"case statusesUnbookmark","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesunfavourite","title":"case statusesUnfavourite","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesunfeature","title":"case statusesUnfeature","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesunlist","title":"case statusesUnlist","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesunreblog","title":"case statusesUnreblog","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/statusesupdate","title":"case statusesUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/timelinescategories","title":"case timelinesCategories","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/timelinesfeatured","title":"case timelinesFeatured","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/timelineshashtags","title":"case timelinesHashtags","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/timelineshome","title":"case timelinesHome","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/timelinespublic","title":"case timelinesPublic","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/trendinghashtags","title":"case trendingHashtags","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/trendingstatuses","title":"case trendingStatuses","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/trendingusers","title":"case trendingUsers","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/userapprove","title":"case userApprove","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/userreject","title":"case userReject","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/userrolesconnect","title":"case userRolesConnect","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/userrolesdisconnect","title":"case userRolesDisconnect","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersdelete","title":"case usersDelete","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersdisable","title":"case usersDisable","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersenable","title":"case usersEnable","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersfollow","title":"case usersFollow","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersfollowers","title":"case usersFollowers","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersfollowing","title":"case usersFollowing","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/userslist","title":"case usersList","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersmute","title":"case usersMute","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersread","title":"case usersRead","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersstatuses","title":"case usersStatuses","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersunfollow","title":"case usersUnfollow","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersunmute","title":"case usersUnmute","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/usersupdate","title":"case usersUpdate","type":"case"},{"path":"\/documentation\/vernissageserver\/eventtype\/webfinger","title":"case webfinger","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/eventtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/eventtype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/eventtype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/eventtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/eventtype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/eventtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/eventtype","title":"EventType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/prepare(on:)-5s0a3","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/revert(on:)-38u55","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/prepare(on:)-317uo","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/createexif\/revert(on:)-4fqwb","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/exif\/createexif\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/exif\/createexif","title":"Exif.CreateExif","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/exif\/init(id:make:model:lens:createdate:focallenin35mmfilm:fnumber:exposuretime:photographicsensitivity:)","title":"convenience init?(id: Int64?, make: String?, model: String?, lens: String?, createDate: String?, focalLenIn35mmFilm: String?, fNumber: String?, exposureTime: String?, photographicSensitivity: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/attachment","title":"var attachment: Attachment","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/createdate","title":"var createDate: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/exposuretime","title":"var exposureTime: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/fnumber","title":"var fNumber: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/focallenin35mmfilm","title":"var focalLenIn35mmFilm: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/lens","title":"var lens: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/make","title":"var make: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/model","title":"var model: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/photographicsensitivity","title":"var photographicSensitivity: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/exif\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/decoderequest(_:)-2b191","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/decoderequest(_:)-6ypd3","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/exif\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/exif\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/exif\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/exif\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/boolean","title":"Exif.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/enum","title":"Exif.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/field","title":"Exif.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/group","title":"Exif.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/optionalboolean","title":"Exif.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/optionalenum","title":"Exif.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/optionalfield","title":"Exif.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/exif\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/children","title":"Exif.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/compositechildren","title":"Exif.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/compositeid","title":"Exif.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/compositeoptionalchild","title":"Exif.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/compositeoptionalparent","title":"Exif.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/compositeparent","title":"Exif.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/id-swift.typealias","title":"Exif.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/optionalchild","title":"Exif.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/optionalparent","title":"Exif.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/parent","title":"Exif.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/siblings","title":"Exif.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/exif\/timestamp","title":"Exif.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/find(_:on:)-1u07n","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/find(_:on:)-3xzhf","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/exif\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/exif\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/exif\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/exif\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/exif\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/exif\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/exif","title":"Exif","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/prepare(on:)-2bazv","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/revert(on:)-6y7lc","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/prepare(on:)-51ffo","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/revert(on:)-3ifgz","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/externaluser\/createexternalusers","title":"ExternalUser.CreateExternalUsers","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/externaluser\/init(id:type:externalid:userid:)","title":"convenience init(id: Int64?, type: AuthClientType, externalId: String, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/authenticationtoken","title":"var authenticationToken: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/externalid","title":"var externalId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/tokencreatedat","title":"var tokenCreatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/type","title":"var type: AuthClientType","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/externaluser\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/decoderequest(_:)-3v9e0","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/decoderequest(_:)-7txl2","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/externaluser\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/externaluser\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/externaluser\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/externaluser\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/boolean","title":"ExternalUser.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/enum","title":"ExternalUser.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/field","title":"ExternalUser.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/group","title":"ExternalUser.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/optionalboolean","title":"ExternalUser.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/optionalenum","title":"ExternalUser.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/optionalfield","title":"ExternalUser.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/externaluser\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/children","title":"ExternalUser.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/compositechildren","title":"ExternalUser.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/compositeid","title":"ExternalUser.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/compositeoptionalchild","title":"ExternalUser.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/compositeoptionalparent","title":"ExternalUser.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/compositeparent","title":"ExternalUser.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/id-swift.typealias","title":"ExternalUser.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/optionalchild","title":"ExternalUser.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/optionalparent","title":"ExternalUser.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/parent","title":"ExternalUser.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/siblings","title":"ExternalUser.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/externaluser\/timestamp","title":"ExternalUser.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/find(_:on:)-6jejp","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/find(_:on:)-9inrf","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/externaluser\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/externaluser\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/externaluser\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/externaluser\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/externaluser\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/externaluser\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/externaluser","title":"ExternalUser","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/prepare(on:)-74h1s","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/revert(on:)-9ygy8","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/prepare(on:)-66ud4","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/revert(on:)-8r4i4","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/createfeaturedstatuses","title":"FeaturedStatus.CreateFeaturedStatuses","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/init(id:statusid:userid:)","title":"convenience init(id: Int64?, statusId: Int64, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/decoderequest(_:)-24l19","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/decoderequest(_:)-9wqva","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/boolean","title":"FeaturedStatus.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/enum","title":"FeaturedStatus.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/field","title":"FeaturedStatus.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/group","title":"FeaturedStatus.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/optionalboolean","title":"FeaturedStatus.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/optionalenum","title":"FeaturedStatus.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/optionalfield","title":"FeaturedStatus.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/children","title":"FeaturedStatus.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/compositechildren","title":"FeaturedStatus.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/compositeid","title":"FeaturedStatus.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/compositeoptionalchild","title":"FeaturedStatus.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/compositeoptionalparent","title":"FeaturedStatus.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/compositeparent","title":"FeaturedStatus.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/id-swift.typealias","title":"FeaturedStatus.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/optionalchild","title":"FeaturedStatus.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/optionalparent","title":"FeaturedStatus.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/parent","title":"FeaturedStatus.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/siblings","title":"FeaturedStatus.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/timestamp","title":"FeaturedStatus.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/find(_:on:)-38udx","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/find(_:on:)-4tv5l","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/featuredstatus\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/featuredstatus\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/featuredstatus","title":"FeaturedStatus","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/prepare(on:)-46cho","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/revert(on:)-4k9qs","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/prepare(on:)-1uhet","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/revert(on:)-38pbz","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/fileinfo\/createfileinfos","title":"FileInfo.CreateFileInfos","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/fileinfo\/init(id:filename:width:height:)","title":"convenience init(id: Int64?, fileName: String, width: Int, height: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/filename","title":"var fileName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/width","title":"var width: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/fileinfo\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/decoderequest(_:)-21cmp","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/decoderequest(_:)-73jod","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfo\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/fileinfo\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/fileinfo\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/boolean","title":"FileInfo.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/enum","title":"FileInfo.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/field","title":"FileInfo.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/group","title":"FileInfo.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/optionalboolean","title":"FileInfo.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/optionalenum","title":"FileInfo.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/optionalfield","title":"FileInfo.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfo\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/children","title":"FileInfo.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/compositechildren","title":"FileInfo.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/compositeid","title":"FileInfo.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/compositeoptionalchild","title":"FileInfo.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/compositeoptionalparent","title":"FileInfo.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/compositeparent","title":"FileInfo.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/id-swift.typealias","title":"FileInfo.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/optionalchild","title":"FileInfo.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/optionalparent","title":"FileInfo.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/parent","title":"FileInfo.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/siblings","title":"FileInfo.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/fileinfo\/timestamp","title":"FileInfo.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/find(_:on:)-1ik9i","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/find(_:on:)-bl7j","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/fileinfo\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfo\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/fileinfo\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/fileinfo\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/fileinfo\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/fileinfo\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/fileinfo","title":"FileInfo","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/prepare(on:)-7kacm","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/revert(on:)-4xwqm","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/prepare(on:)-6t37","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/revert(on:)-76chj","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/flexifield\/createflexifields","title":"FlexiField.CreateFlexiFields","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/flexifield\/init(id:key:value:isverified:userid:)","title":"convenience init(id: Int64?, key: String?, value: String?, isVerified: Bool, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/isverified","title":"var isVerified: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/key","title":"var key: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/user","title":"var user: User","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/value","title":"var value: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/flexifield\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/decoderequest(_:)-3vsp7","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/decoderequest(_:)-6iyad","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifield\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/flexifield\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/flexifield\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifield\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/boolean","title":"FlexiField.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/enum","title":"FlexiField.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/field","title":"FlexiField.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/group","title":"FlexiField.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/optionalboolean","title":"FlexiField.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/optionalenum","title":"FlexiField.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/optionalfield","title":"FlexiField.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifield\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/children","title":"FlexiField.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/compositechildren","title":"FlexiField.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/compositeid","title":"FlexiField.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/compositeoptionalchild","title":"FlexiField.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/compositeoptionalparent","title":"FlexiField.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/compositeparent","title":"FlexiField.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/id-swift.typealias","title":"FlexiField.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/optionalchild","title":"FlexiField.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/optionalparent","title":"FlexiField.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/parent","title":"FlexiField.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/siblings","title":"FlexiField.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/flexifield\/timestamp","title":"FlexiField.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/find(_:on:)-1s6r4","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/find(_:on:)-tgoe","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/flexifield\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifield\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/flexifield\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/flexifield\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/flexifield\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/flexifield\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/flexifield","title":"FlexiField","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/prepare(on:)-9msxx","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/revert(on:)-9zjau","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/prepare(on:)-68laz","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/revert(on:)-7z8k4","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/follow\/addactivityidtofollows","title":"Follow.AddActivityIdToFollows","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/prepare(on:)-2wuny","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/revert(on:)-9vvbo","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/prepare(on:)-d8bn","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/createfollows\/revert(on:)-3iqzf","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/createfollows\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/follow\/createfollows","title":"Follow.CreateFollows","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/follow\/init(id:sourceid:targetid:approved:activityid:)","title":"convenience init(id: Int64?, sourceId: Int64, targetId: Int64, approved: Bool, activityId: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/activityid","title":"var activityId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/approved","title":"var approved: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/source","title":"var source: User","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/target","title":"var target: User","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/follow\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/decoderequest(_:)-2uqw3","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/decoderequest(_:)-86jx9","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/follow\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/follow\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/boolean","title":"Follow.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/enum","title":"Follow.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/field","title":"Follow.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/group","title":"Follow.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/optionalboolean","title":"Follow.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/optionalenum","title":"Follow.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/optionalfield","title":"Follow.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/children","title":"Follow.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/compositechildren","title":"Follow.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/compositeid","title":"Follow.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/compositeoptionalchild","title":"Follow.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/compositeoptionalparent","title":"Follow.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/compositeparent","title":"Follow.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/id-swift.typealias","title":"Follow.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/optionalchild","title":"Follow.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/optionalparent","title":"Follow.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/parent","title":"Follow.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/siblings","title":"Follow.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/follow\/timestamp","title":"Follow.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/find(_:on:)-8kfrf","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/find(_:on:)-9v7dk","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/follow\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/follow\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/follow\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/follow\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/follow\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/follow","title":"Follow","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/prepare(on:)-22lpt","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/revert(on:)-27xyd","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/prepare(on:)-2cobq","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/revert(on:)-9lkby","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createinstanceblockeddomains","title":"InstanceBlockedDomain.CreateInstanceBlockedDomains","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/init(domain:reason:)","title":"convenience init(domain: String, reason: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/domain","title":"var domain: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/reason","title":"var reason: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/decoderequest(_:)-3h412","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/decoderequest(_:)-8ce3z","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/boolean","title":"InstanceBlockedDomain.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/enum","title":"InstanceBlockedDomain.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/field","title":"InstanceBlockedDomain.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/group","title":"InstanceBlockedDomain.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/optionalboolean","title":"InstanceBlockedDomain.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/optionalenum","title":"InstanceBlockedDomain.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/optionalfield","title":"InstanceBlockedDomain.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/children","title":"InstanceBlockedDomain.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/compositechildren","title":"InstanceBlockedDomain.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/compositeid","title":"InstanceBlockedDomain.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/compositeoptionalchild","title":"InstanceBlockedDomain.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/compositeoptionalparent","title":"InstanceBlockedDomain.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/compositeparent","title":"InstanceBlockedDomain.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/id-swift.typealias","title":"InstanceBlockedDomain.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/optionalchild","title":"InstanceBlockedDomain.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/optionalparent","title":"InstanceBlockedDomain.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/parent","title":"InstanceBlockedDomain.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/siblings","title":"InstanceBlockedDomain.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/timestamp","title":"InstanceBlockedDomain.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/find(_:on:)-82gqu","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/find(_:on:)-91ax9","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/instanceblockeddomain","title":"InstanceBlockedDomain","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/prepare(on:)-3e8tg","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/revert(on:)-7jfju","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/prepare(on:)-9769f","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/revert(on:)-4orig","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/invitation\/createinvitations\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/invitation\/createinvitations","title":"Invitation.CreateInvitations","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/invitation\/init(id:userid:)","title":"convenience init(id: Int64?, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/invited","title":"var invited: User?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/invitation\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/decoderequest(_:)-22l01","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/decoderequest(_:)-5ft3","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/invitation\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/invitation\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/invitation\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/invitation\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/boolean","title":"Invitation.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/enum","title":"Invitation.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/field","title":"Invitation.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/group","title":"Invitation.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/optionalboolean","title":"Invitation.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/optionalenum","title":"Invitation.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/optionalfield","title":"Invitation.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/invitation\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/children","title":"Invitation.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/compositechildren","title":"Invitation.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/compositeid","title":"Invitation.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/compositeoptionalchild","title":"Invitation.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/compositeoptionalparent","title":"Invitation.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/compositeparent","title":"Invitation.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/id-swift.typealias","title":"Invitation.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/optionalchild","title":"Invitation.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/optionalparent","title":"Invitation.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/parent","title":"Invitation.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/siblings","title":"Invitation.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/invitation\/timestamp","title":"Invitation.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/find(_:on:)-4d366","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/find(_:on:)-9uptn","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/invitation\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/invitation\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/invitation\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/invitation\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/invitation\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/invitation\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/invitation","title":"Invitation","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/prepare(on:)-8gky2","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/revert(on:)-uv97","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/prepare(on:)-5wy9m","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/createlicenses\/revert(on:)-1sfog","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/license\/createlicenses\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/license\/createlicenses","title":"License.CreateLicenses","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/license\/init(id:name:code:description:url:)","title":"convenience init(id: Int64?, name: String, code: String, description: String, url: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/attachment","title":"var attachment: [Attachment]","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/url","title":"var url: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/license\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/decoderequest(_:)-3nzyo","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/decoderequest(_:)-3sp2z","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/license\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/license\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/license\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/boolean","title":"License.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/enum","title":"License.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/field","title":"License.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/group","title":"License.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/optionalboolean","title":"License.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/optionalenum","title":"License.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/optionalfield","title":"License.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/license\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/children","title":"License.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/compositechildren","title":"License.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/compositeid","title":"License.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/compositeoptionalchild","title":"License.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/compositeoptionalparent","title":"License.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/compositeparent","title":"License.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/id-swift.typealias","title":"License.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/optionalchild","title":"License.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/optionalparent","title":"License.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/parent","title":"License.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/siblings","title":"License.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/license\/timestamp","title":"License.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/find(_:on:)-11hh8","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/find(_:on:)-92qlu","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/license\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/license\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/license\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/license\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/license\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/license\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/license","title":"License","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/init(maxid:minid:data:)","title":"init(maxId: String?, minId: String?, data: [T])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/data","title":"var data: [T]","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableresult\/maxid","title":"var maxId: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/linkableresult\/minid","title":"var minId: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresult\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresult\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresult\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/decoderequest(_:)-3i5zb","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/linkableresult\/decoderequest(_:)-98a47","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/linkableresult\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/linkableresult\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/linkableresult\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/linkableresult\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/linkableresult","title":"LinkableResult","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/prepare(on:)-kkod","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/revert(on:)-1gnwb","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/prepare(on:)-7my3q","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/revert(on:)-1s1h0","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/localizable\/createlocalizables","title":"Localizable.CreateLocalizables","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/localizable\/init(id:code:locale:system:)","title":"convenience init(id: Int64?, code: String, locale: String, system: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/locale","title":"var locale: String","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/system","title":"var system: String","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/user","title":"var user: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/localizable\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/decoderequest(_:)-1koxx","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/decoderequest(_:)-6yczu","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/localizable\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/localizable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/localizable\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/localizable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/boolean","title":"Localizable.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/enum","title":"Localizable.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/field","title":"Localizable.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/group","title":"Localizable.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/optionalboolean","title":"Localizable.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/optionalenum","title":"Localizable.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/optionalfield","title":"Localizable.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/localizable\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/children","title":"Localizable.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/compositechildren","title":"Localizable.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/compositeid","title":"Localizable.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/compositeoptionalchild","title":"Localizable.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/compositeoptionalparent","title":"Localizable.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/compositeparent","title":"Localizable.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/id-swift.typealias","title":"Localizable.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/optionalchild","title":"Localizable.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/optionalparent","title":"Localizable.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/parent","title":"Localizable.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/siblings","title":"Localizable.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/localizable\/timestamp","title":"Localizable.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/find(_:on:)-1q0r4","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/find(_:on:)-3dx8u","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/localizable\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/localizable\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/localizable\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/localizable\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/localizable\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/localizable\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/localizable","title":"Localizable","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/prepare(on:)-2r54m","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/revert(on:)-1aatx","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/prepare(on:)-3eb0u","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/createlocations\/revert(on:)-5auw0","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/location\/createlocations\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/location\/createlocations","title":"Location.CreateLocations","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/location\/init(id:countryid:geonameid:name:namesnormalized:longitude:latitude:)","title":"convenience init(id: Int64?, countryId: Int64, geonameId: String, name: String, namesNormalized: String, longitude: String, latitude: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/attachment","title":"var attachment: [Attachment]","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/country","title":"var country: Country","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/geonameid","title":"var geonameId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/latitude","title":"var latitude: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/longitude","title":"var longitude: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/namesnormalized","title":"var namesNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/location\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/decoderequest(_:)-6dhe4","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/decoderequest(_:)-6my2g","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/location\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/location\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/location\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/location\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/boolean","title":"Location.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/enum","title":"Location.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/field","title":"Location.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/group","title":"Location.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/optionalboolean","title":"Location.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/optionalenum","title":"Location.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/optionalfield","title":"Location.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/location\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/children","title":"Location.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/compositechildren","title":"Location.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/compositeid","title":"Location.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/compositeoptionalchild","title":"Location.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/compositeoptionalparent","title":"Location.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/compositeparent","title":"Location.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/id-swift.typealias","title":"Location.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/optionalchild","title":"Location.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/optionalparent","title":"Location.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/parent","title":"Location.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/siblings","title":"Location.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/location\/timestamp","title":"Location.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/find(_:on:)-51jte","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/find(_:on:)-6ynlu","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/location\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/location\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/location\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/location\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/location\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/location\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/location","title":"Location","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/prepare(on:)-1e46n","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/revert(on:)-7b214","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/prepare(on:)-9oxfy","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/revert(on:)-3d91h","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/notification\/createnotifications\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notification\/createnotifications","title":"Notification.CreateNotifications","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/notification\/init(id:notificationtype:to:by:statusid:)","title":"convenience init(id: Int64?, notificationType: NotificationType, to: Int64, by: Int64, statusId: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/byuser","title":"var byUser: User","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/notificationtype","title":"var notificationType: NotificationType","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/status","title":"var status: Status?","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/notification\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/decoderequest(_:)-5n1dk","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/decoderequest(_:)-7b4ka","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/notification\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/notification\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/notification\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/notification\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/boolean","title":"Notification.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/enum","title":"Notification.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/field","title":"Notification.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/group","title":"Notification.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/optionalboolean","title":"Notification.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/optionalenum","title":"Notification.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/optionalfield","title":"Notification.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/notification\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/children","title":"Notification.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/compositechildren","title":"Notification.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/compositeid","title":"Notification.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/compositeoptionalchild","title":"Notification.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/compositeoptionalparent","title":"Notification.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/compositeparent","title":"Notification.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/id-swift.typealias","title":"Notification.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/optionalchild","title":"Notification.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/optionalparent","title":"Notification.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/parent","title":"Notification.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/siblings","title":"Notification.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notification\/timestamp","title":"Notification.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/find(_:on:)-3afkb","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/find(_:on:)-6in2l","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/notification\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/notification\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/notification\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notification\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/notification\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/notification\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notification","title":"Notification","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/prepare(on:)-70r29","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/revert(on:)-96714","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/prepare(on:)-82k89","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/revert(on:)-8bshl","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/createnotificationmarkers","title":"NotificationMarker.CreateNotificationMarkers","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/init(id:notificationid:userid:)","title":"convenience init(id: Int64?, notificationId: Int64, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/notification","title":"var notification: Notification","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/decoderequest(_:)-8kw5x","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/decoderequest(_:)-8tago","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/boolean","title":"NotificationMarker.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/enum","title":"NotificationMarker.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/field","title":"NotificationMarker.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/group","title":"NotificationMarker.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/optionalboolean","title":"NotificationMarker.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/optionalenum","title":"NotificationMarker.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/optionalfield","title":"NotificationMarker.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/children","title":"NotificationMarker.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/compositechildren","title":"NotificationMarker.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/compositeid","title":"NotificationMarker.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/compositeoptionalchild","title":"NotificationMarker.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/compositeoptionalparent","title":"NotificationMarker.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/compositeparent","title":"NotificationMarker.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/id-swift.typealias","title":"NotificationMarker.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/optionalchild","title":"NotificationMarker.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/optionalparent","title":"NotificationMarker.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/parent","title":"NotificationMarker.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/siblings","title":"NotificationMarker.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/timestamp","title":"NotificationMarker.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/find(_:on:)-5hl6u","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/find(_:on:)-d2vb","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationmarker\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/notificationmarker\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationmarker","title":"NotificationMarker","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/adminreport","title":"case adminReport","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/adminsignup","title":"case adminSignUp","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/favourite","title":"case favourite","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/follow","title":"case follow","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/followrequest","title":"case followRequest","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/mention","title":"case mention","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/newcomment","title":"case newComment","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/reblog","title":"case reblog","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/status","title":"case status","type":"case"},{"path":"\/documentation\/vernissageserver\/notificationtype\/update","title":"case update","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/notificationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/notificationtype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/notificationtype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/notificationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/notificationtype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/notificationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/notificationtype","title":"NotificationType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/prepare(on:)-mv9a","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/revert(on:)-12mv8","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/prepare(on:)-7g96v","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/revert(on:)-4kwoy","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/createrefreshtokens","title":"RefreshToken.CreateRefreshTokens","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/init(id:userid:token:expirydate:revoked:)","title":"convenience init(id: Int64?, userId: Int64, token: String, expiryDate: Date, revoked: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/expirydate","title":"var expiryDate: Date","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/revoked","title":"var revoked: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/token","title":"var token: String","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/decoderequest(_:)-4nxpi","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/decoderequest(_:)-7yb8u","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/boolean","title":"RefreshToken.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/enum","title":"RefreshToken.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/field","title":"RefreshToken.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/group","title":"RefreshToken.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/optionalboolean","title":"RefreshToken.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/optionalenum","title":"RefreshToken.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/optionalfield","title":"RefreshToken.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/children","title":"RefreshToken.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/compositechildren","title":"RefreshToken.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/compositeid","title":"RefreshToken.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/compositeoptionalchild","title":"RefreshToken.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/compositeoptionalparent","title":"RefreshToken.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/compositeparent","title":"RefreshToken.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/id-swift.typealias","title":"RefreshToken.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/optionalchild","title":"RefreshToken.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/optionalparent","title":"RefreshToken.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/parent","title":"RefreshToken.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/siblings","title":"RefreshToken.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/timestamp","title":"RefreshToken.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/find(_:on:)-1b7y5","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/find(_:on:)-8e35o","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/refreshtoken\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/refreshtoken\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/refreshtoken","title":"RefreshToken","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/prepare(on:)-8uqnd","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/revert(on:)-84i0z","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/prepare(on:)-8435l","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/createreports\/revert(on:)-9vugp","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/report\/createreports\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/report\/createreports","title":"Report.CreateReports","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/report\/init(id:userid:reporteduserid:statusid:comment:forward:category:ruleids:considerationdate:considerationuserid:)","title":"convenience init(id: Int64?, userId: Int64, reportedUserId: Int64, statusId: Int64?, comment: String?, forward: Bool, category: String?, ruleIds: [Int]?, considerationDate: Date?, considerationUserId: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/category","title":"var category: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/comment","title":"var comment: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/considerationdate","title":"var considerationDate: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/considerationuser","title":"var considerationUser: User?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/forward","title":"var forward: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/reporteduser","title":"var reportedUser: User","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/ruleids","title":"var ruleIds: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/status","title":"var status: Status?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/report\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/decoderequest(_:)-6xjig","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/decoderequest(_:)-aowh","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/report\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/report\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/report\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/report\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/boolean","title":"Report.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/enum","title":"Report.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/field","title":"Report.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/group","title":"Report.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/optionalboolean","title":"Report.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/optionalenum","title":"Report.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/optionalfield","title":"Report.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/report\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/children","title":"Report.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/compositechildren","title":"Report.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/compositeid","title":"Report.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/compositeoptionalchild","title":"Report.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/compositeoptionalparent","title":"Report.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/compositeparent","title":"Report.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/id-swift.typealias","title":"Report.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/optionalchild","title":"Report.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/optionalparent","title":"Report.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/parent","title":"Report.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/siblings","title":"Report.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/report\/timestamp","title":"Report.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/find(_:on:)-1361h","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/find(_:on:)-4gpk","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/report\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/report\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/report\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/report\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/report\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/report\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/report","title":"Report","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/prepare(on:)-5pj","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/revert(on:)-5oaaz","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/prepare(on:)-6muux","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/createroles\/revert(on:)-27rfp","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/role\/createroles\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/role\/createroles","title":"Role.CreateRoles","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/role\/init(from:)-2z2kv","title":"convenience init(from: RoleDto)","type":"init"},{"path":"\/documentation\/vernissageserver\/role\/init(id:code:title:description:isdefault:)","title":"convenience init(id: Int64?, code: String, title: String, description: String?, isDefault: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/code","title":"var code: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/deletedat","title":"var deletedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/description","title":"var description: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/isdefault","title":"var isDefault: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/users","title":"var users: [User]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/administrator","title":"static var administrator: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/member","title":"static var member: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/moderator","title":"static var moderator: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/role\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/decoderequest(_:)-7oriu","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/decoderequest(_:)-8nish","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/role\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/init(from:)-3op2p","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/role\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/role\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/boolean","title":"Role.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/enum","title":"Role.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/field","title":"Role.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/group","title":"Role.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/optionalboolean","title":"Role.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/optionalenum","title":"Role.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/optionalfield","title":"Role.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/role\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/children","title":"Role.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/compositechildren","title":"Role.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/compositeid","title":"Role.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/compositeoptionalchild","title":"Role.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/compositeoptionalparent","title":"Role.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/compositeparent","title":"Role.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/id-swift.typealias","title":"Role.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/optionalchild","title":"Role.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/optionalparent","title":"Role.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/parent","title":"Role.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/siblings","title":"Role.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/role\/timestamp","title":"Role.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/find(_:on:)-2ibsd","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/find(_:on:)-9nysl","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/role\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/role\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/role\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/role\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/role\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/role\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/role","title":"Role","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/prepare(on:)-5ueel","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/revert(on:)-3hdk8","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/prepare(on:)-88dks","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/createrules\/revert(on:)-764oc","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/rule\/createrules\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/rule\/createrules","title":"Rule.CreateRules","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/rule\/init(id:order:text:)","title":"convenience init(id: Int64?, order: Int, text: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/order","title":"var order: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/text","title":"var text: String","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/rule\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/decoderequest(_:)-12ps2","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/decoderequest(_:)-4b1wq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/rule\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/rule\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/rule\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/rule\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/boolean","title":"Rule.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/enum","title":"Rule.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/field","title":"Rule.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/group","title":"Rule.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/optionalboolean","title":"Rule.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/optionalenum","title":"Rule.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/optionalfield","title":"Rule.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/rule\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/children","title":"Rule.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/compositechildren","title":"Rule.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/compositeid","title":"Rule.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/compositeoptionalchild","title":"Rule.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/compositeoptionalparent","title":"Rule.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/compositeparent","title":"Rule.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/id-swift.typealias","title":"Rule.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/optionalchild","title":"Rule.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/optionalparent","title":"Rule.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/parent","title":"Rule.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/siblings","title":"Rule.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/rule\/timestamp","title":"Rule.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/find(_:on:)-5n99s","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/find(_:on:)-5tgzt","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/rule\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/rule\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/rule\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/rule\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/rule\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/rule\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/rule","title":"Rule","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/prepare(on:)-10sgo","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/revert(on:)-2ztvg","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/prepare(on:)-8250","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/createsettings\/revert(on:)-49r2u","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/setting\/createsettings\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/setting\/createsettings","title":"Setting.CreateSettings","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/setting\/init(id:key:value:)","title":"convenience init(id: Int64?, key: String, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/value","title":"var value: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/setting\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/decoderequest(_:)-7d0dp","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/decoderequest(_:)-833cy","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/setting\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/setting\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/setting\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/setting\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/boolean","title":"Setting.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/enum","title":"Setting.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/field","title":"Setting.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/group","title":"Setting.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/optionalboolean","title":"Setting.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/optionalenum","title":"Setting.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/optionalfield","title":"Setting.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/setting\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/children","title":"Setting.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/compositechildren","title":"Setting.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/compositeid","title":"Setting.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/compositeoptionalchild","title":"Setting.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/compositeoptionalparent","title":"Setting.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/compositeparent","title":"Setting.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/id-swift.typealias","title":"Setting.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/optionalchild","title":"Setting.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/optionalparent","title":"Setting.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/parent","title":"Setting.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/siblings","title":"Setting.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/setting\/timestamp","title":"Setting.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/find(_:on:)-7pnag","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/find(_:on:)-80scy","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/setting\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/setting\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/setting\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/setting\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/setting\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/setting\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/setting","title":"Setting","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/corsorigin","title":"case corsOrigin","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailfromaddress","title":"case emailFromAddress","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailfromname","title":"case emailFromName","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailhostname","title":"case emailHostname","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailpassword","title":"case emailPassword","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailport","title":"case emailPort","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailsecuremethod","title":"case emailSecureMethod","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/emailusername","title":"case emailUserName","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/eventstostore","title":"case eventsToStore","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/imagesizelimit","title":"case imageSizeLimit","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/isrecaptchaenabled","title":"case isRecaptchaEnabled","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/isregistrationbyapprovalopened","title":"case isRegistrationByApprovalOpened","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/isregistrationbyinvitationsopened","title":"case isRegistrationByInvitationsOpened","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/isregistrationopened","title":"case isRegistrationOpened","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/jwtprivatekey","title":"case jwtPrivateKey","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/jwtpublickey","title":"case jwtPublicKey","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/maxcharacters","title":"case maxCharacters","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/maxmediaattachments","title":"case maxMediaAttachments","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/maximumnumberofinvitations","title":"case maximumNumberOfInvitations","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/recaptchakey","title":"case recaptchaKey","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/systemdefaultuserid","title":"case systemDefaultUserId","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/webcontactuserid","title":"case webContactUserId","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/webdescription","title":"case webDescription","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/webemail","title":"case webEmail","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/weblanguages","title":"case webLanguages","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/webthumbnail","title":"case webThumbnail","type":"case"},{"path":"\/documentation\/vernissageserver\/settingkey\/webtitle","title":"case webTitle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/settingkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/settingkey\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingkey\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/settingkey\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/settingkey","title":"SettingKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingvalue\/boolean(_:)","title":"case boolean(Bool)","type":"case"},{"path":"\/documentation\/vernissageserver\/settingvalue\/int(_:)","title":"case int(Int)","type":"case"},{"path":"\/documentation\/vernissageserver\/settingvalue\/string(_:)","title":"case string(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/settingvalue\/value()","title":"func value() -> String","type":"method"}],"path":"\/documentation\/vernissageserver\/settingvalue","title":"SettingValue","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/prepare(on:)-77lei","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/revert(on:)-2m4cm","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/prepare(on:)-2w9v9","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/revert(on:)-97sy7","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status\/createactivitypubcolumns","title":"Status.CreateActivityPubColumns","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/prepare(on:)-79gxo","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/revert(on:)-9wrr","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/prepare(on:)-6c2v1","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/revert(on:)-2f6h3","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status\/createapplicationcolumn","title":"Status.CreateApplicationColumn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/prepare(on:)-7yv0d","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/revert(on:)-4vtgh","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/prepare(on:)-5yjaq","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/revert(on:)-55qti","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status\/createcategorycolumn","title":"Status.CreateCategoryColumn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/prepare(on:)-6w303","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/revert(on:)-7eoo7","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/prepare(on:)-9d5du","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createcounters\/revert(on:)-3wh9x","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/createcounters\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status\/createcounters","title":"Status.CreateCounters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/prepare(on:)-66v9o","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/revert(on:)-9xky1","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/prepare(on:)-2m3ih","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/revert(on:)-9wyxt","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status\/createreblogcolumn","title":"Status.CreateReblogColumn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/prepare(on:)-5ancm","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/revert(on:)-9ird9","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/prepare(on:)-98q6p","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/createstatuses\/revert(on:)-3bg1h","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/createstatuses\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status\/createstatuses","title":"Status.CreateStatuses","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/status\/init(id:islocal:userid:note:activitypubid:activitypuburl:application:categoryid:visibility:sensitive:contentwarning:commentsdisabled:replytostatusid:reblogid:)","title":"convenience init(id: Int64?, isLocal: Bool, userId: Int64, note: String?, activityPubId: String, activityPubUrl: String, application: String?, categoryId: Int64?, visibility: StatusVisibility, sensitive: Bool, contentWarning: String?, commentsDisabled: Bool, replyToStatusId: Int64?, reblogId: Int64?)","type":"init"},{"path":"\/documentation\/vernissageserver\/status\/init(id:islocal:userid:note:baseaddress:username:application:categoryid:visibility:sensitive:contentwarning:commentsdisabled:replytostatusid:reblogid:)","title":"convenience init(id: Int64?, isLocal: Bool, userId: Int64, note: String?, baseAddress: String, userName: String, application: String?, categoryId: Int64?, visibility: StatusVisibility, sensitive: Bool, contentWarning: String?, commentsDisabled: Bool, replyToStatusId: Int64?, reblogId: Int64?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/activitypubid","title":"var activityPubId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/activitypuburl","title":"var activityPubUrl: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/application","title":"var application: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/attachments","title":"var attachments: [Attachment]","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/category","title":"var category: Category?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/comments","title":"var comments: [Status]","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/commentsdisabled","title":"var commentsDisabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/contentwarning","title":"var contentWarning: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/favouritescount","title":"var favouritesCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/hashtags","title":"var hashtags: [StatusHashtag]","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/islocal","title":"var isLocal: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/mentions","title":"var mentions: [StatusMention]","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/note","title":"var note: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/reblog","title":"var reblog: Status?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/reblogscount","title":"var reblogsCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/repliescount","title":"var repliesCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/replytostatus","title":"var replyToStatus: Status?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/sensitive","title":"var sensitive: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/user","title":"var user: User","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/visibility","title":"var visibility: StatusVisibility","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/status\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/decoderequest(_:)-18r1g","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/decoderequest(_:)-4ai7w","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/status\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/status\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/boolean","title":"Status.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/enum","title":"Status.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/field","title":"Status.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/group","title":"Status.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/optionalboolean","title":"Status.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/optionalenum","title":"Status.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/optionalfield","title":"Status.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/children","title":"Status.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/compositechildren","title":"Status.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/compositeid","title":"Status.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/compositeoptionalchild","title":"Status.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/compositeoptionalparent","title":"Status.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/compositeparent","title":"Status.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/id-swift.typealias","title":"Status.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/optionalchild","title":"Status.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/optionalparent","title":"Status.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/parent","title":"Status.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/siblings","title":"Status.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/status\/timestamp","title":"Status.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/find(_:on:)-3jwvf","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/find(_:on:)-92sc6","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/status\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/status\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/status\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/status\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/status\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/status","title":"Status","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/prepare(on:)-9fjy3","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/revert(on:)-387lq","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/prepare(on:)-3n26l","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/revert(on:)-63pq2","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/createstatusbookmarks","title":"StatusBookmark.CreateStatusBookmarks","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/init(id:statusid:userid:)","title":"convenience init(id: Int64?, statusId: Int64, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/decoderequest(_:)-16579","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/decoderequest(_:)-ge20","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/boolean","title":"StatusBookmark.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/enum","title":"StatusBookmark.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/field","title":"StatusBookmark.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/group","title":"StatusBookmark.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/optionalboolean","title":"StatusBookmark.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/optionalenum","title":"StatusBookmark.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/optionalfield","title":"StatusBookmark.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/children","title":"StatusBookmark.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/compositechildren","title":"StatusBookmark.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/compositeid","title":"StatusBookmark.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/compositeoptionalchild","title":"StatusBookmark.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/compositeoptionalparent","title":"StatusBookmark.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/compositeparent","title":"StatusBookmark.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/id-swift.typealias","title":"StatusBookmark.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/optionalchild","title":"StatusBookmark.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/optionalparent","title":"StatusBookmark.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/parent","title":"StatusBookmark.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/siblings","title":"StatusBookmark.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/timestamp","title":"StatusBookmark.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/find(_:on:)-3qb5h","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/find(_:on:)-5udkt","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusbookmark\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statusbookmark\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusbookmark","title":"StatusBookmark","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/prepare(on:)-3tmp5","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/revert(on:)-l6s3","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/prepare(on:)-1hwbm","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/revert(on:)-5ept8","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/createstatusfavourites","title":"StatusFavourite.CreateStatusFavourites","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/init(id:statusid:userid:)","title":"convenience init(id: Int64?, statusId: Int64, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/decoderequest(_:)-3v98w","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/decoderequest(_:)-9xyh8","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/boolean","title":"StatusFavourite.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/enum","title":"StatusFavourite.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/field","title":"StatusFavourite.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/group","title":"StatusFavourite.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/optionalboolean","title":"StatusFavourite.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/optionalenum","title":"StatusFavourite.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/optionalfield","title":"StatusFavourite.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/children","title":"StatusFavourite.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/compositechildren","title":"StatusFavourite.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/compositeid","title":"StatusFavourite.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/compositeoptionalchild","title":"StatusFavourite.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/compositeoptionalparent","title":"StatusFavourite.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/compositeparent","title":"StatusFavourite.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/id-swift.typealias","title":"StatusFavourite.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/optionalchild","title":"StatusFavourite.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/optionalparent","title":"StatusFavourite.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/parent","title":"StatusFavourite.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/siblings","title":"StatusFavourite.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/timestamp","title":"StatusFavourite.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/find(_:on:)-6zeyd","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/find(_:on:)-82vt0","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusfavourite\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statusfavourite\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusfavourite","title":"StatusFavourite","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/prepare(on:)-13xx9","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/revert(on:)-5796o","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/prepare(on:)-11zvc","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/revert(on:)-1e7k1","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statushashtag\/adduniqueindex","title":"StatusHashtag.AddUniqueIndex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/prepare(on:)-6l9","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/revert(on:)-3y2dc","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/prepare(on:)-7c3pm","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/revert(on:)-9tf3s","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statushashtag\/createstatushashtags","title":"StatusHashtag.CreateStatusHashtags","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/statushashtag\/init(id:statusid:hashtag:)","title":"convenience init(id: Int64?, statusId: Int64, hashtag: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/hashtag","title":"var hashtag: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/hashtagnormalized","title":"var hashtagNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statushashtag\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/decoderequest(_:)-470tx","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/decoderequest(_:)-rgtb","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statushashtag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statushashtag\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/boolean","title":"StatusHashtag.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/enum","title":"StatusHashtag.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/field","title":"StatusHashtag.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/group","title":"StatusHashtag.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/optionalboolean","title":"StatusHashtag.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/optionalenum","title":"StatusHashtag.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/optionalfield","title":"StatusHashtag.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/children","title":"StatusHashtag.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/compositechildren","title":"StatusHashtag.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/compositeid","title":"StatusHashtag.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/compositeoptionalchild","title":"StatusHashtag.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/compositeoptionalparent","title":"StatusHashtag.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/compositeparent","title":"StatusHashtag.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/id-swift.typealias","title":"StatusHashtag.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/optionalchild","title":"StatusHashtag.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/optionalparent","title":"StatusHashtag.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/parent","title":"StatusHashtag.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/siblings","title":"StatusHashtag.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statushashtag\/timestamp","title":"StatusHashtag.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/find(_:on:)-3gpjl","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/find(_:on:)-3ihxl","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/statushashtag\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statushashtag\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statushashtag\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statushashtag\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statushashtag\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statushashtag","title":"StatusHashtag","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/prepare(on:)-2bi42","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/revert(on:)-27g5r","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/prepare(on:)-6kmrx","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/revert(on:)-4g4s0","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusmention\/createstatusmentions","title":"StatusMention.CreateStatusMentions","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/statusmention\/init(id:statusid:username:)","title":"convenience init(id: Int64?, statusId: Int64, userName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/username","title":"var userName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/usernamenormalized","title":"var userNameNormalized: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statusmention\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/decoderequest(_:)-8rxeq","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/decoderequest(_:)-cw7b","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/statusmention\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/statusmention\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statusmention\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/statusmention\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/boolean","title":"StatusMention.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/enum","title":"StatusMention.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/field","title":"StatusMention.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/group","title":"StatusMention.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/optionalboolean","title":"StatusMention.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/optionalenum","title":"StatusMention.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/optionalfield","title":"StatusMention.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusmention\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/children","title":"StatusMention.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/compositechildren","title":"StatusMention.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/compositeid","title":"StatusMention.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/compositeoptionalchild","title":"StatusMention.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/compositeoptionalparent","title":"StatusMention.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/compositeparent","title":"StatusMention.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/id-swift.typealias","title":"StatusMention.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/optionalchild","title":"StatusMention.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/optionalparent","title":"StatusMention.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/parent","title":"StatusMention.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/siblings","title":"StatusMention.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/statusmention\/timestamp","title":"StatusMention.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/find(_:on:)-5ax3k","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/find(_:on:)-9fzng","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/statusmention\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusmention\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusmention\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusmention\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/statusmention\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/statusmention\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusmention","title":"StatusMention","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/followers","title":"case followers","type":"case"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/mentioned","title":"case mentioned","type":"case"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/public","title":"case `public`","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/statusvisibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusvisibility\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/statusvisibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusvisibility","title":"StatusVisibility","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/prepare(on:)-5djsk","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/revert(on:)-5upfj","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/prepare(on:)-25qml","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/revert(on:)-9mqpi","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/createtrendinghashtags","title":"TrendingHashtag.CreateTrendingHashtags","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/init(id:trendingperiod:hashtag:hashtagnormalized:)","title":"convenience init(id: Int64?, trendingPeriod: TrendingPeriod, hashtag: String, hashtagNormalized: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/hashtag","title":"var hashtag: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/hashtagnormalized","title":"var hashtagNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/trendingperiod","title":"var trendingPeriod: TrendingPeriod","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/decoderequest(_:)-2tl0t","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/decoderequest(_:)-58821","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/boolean","title":"TrendingHashtag.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/enum","title":"TrendingHashtag.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/field","title":"TrendingHashtag.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/group","title":"TrendingHashtag.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/optionalboolean","title":"TrendingHashtag.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/optionalenum","title":"TrendingHashtag.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/optionalfield","title":"TrendingHashtag.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/children","title":"TrendingHashtag.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/compositechildren","title":"TrendingHashtag.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/compositeid","title":"TrendingHashtag.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/compositeoptionalchild","title":"TrendingHashtag.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/compositeoptionalparent","title":"TrendingHashtag.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/compositeparent","title":"TrendingHashtag.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/id-swift.typealias","title":"TrendingHashtag.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/optionalchild","title":"TrendingHashtag.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/optionalparent","title":"TrendingHashtag.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/parent","title":"TrendingHashtag.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/siblings","title":"TrendingHashtag.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/timestamp","title":"TrendingHashtag.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/find(_:on:)-1fzw6","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/find(_:on:)-d5bm","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinghashtag\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/trendinghashtag\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendinghashtag","title":"TrendingHashtag","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/daily","title":"case daily","type":"case"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/monthly","title":"case monthly","type":"case"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/yearly","title":"case yearly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/getdate()","title":"func getDate() -> Date","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/trendingperiod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingperiod\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/trendingperiod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendingperiod","title":"TrendingPeriod","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/prepare(on:)-fr3m","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/revert(on:)-6c40p","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/prepare(on:)-776bp","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/revert(on:)-5q0yw","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/createtrendingstatuses","title":"TrendingStatus.CreateTrendingStatuses","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/init(id:trendingperiod:statusid:)","title":"convenience init(id: Int64?, trendingPeriod: TrendingPeriod, statusId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/trendingperiod","title":"var trendingPeriod: TrendingPeriod","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/decoderequest(_:)-4zn2g","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/decoderequest(_:)-9hpph","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/boolean","title":"TrendingStatus.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/enum","title":"TrendingStatus.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/field","title":"TrendingStatus.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/group","title":"TrendingStatus.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/optionalboolean","title":"TrendingStatus.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/optionalenum","title":"TrendingStatus.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/optionalfield","title":"TrendingStatus.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/children","title":"TrendingStatus.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/compositechildren","title":"TrendingStatus.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/compositeid","title":"TrendingStatus.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/compositeoptionalchild","title":"TrendingStatus.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/compositeoptionalparent","title":"TrendingStatus.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/compositeparent","title":"TrendingStatus.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/id-swift.typealias","title":"TrendingStatus.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/optionalchild","title":"TrendingStatus.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/optionalparent","title":"TrendingStatus.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/parent","title":"TrendingStatus.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/siblings","title":"TrendingStatus.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/timestamp","title":"TrendingStatus.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/find(_:on:)-2jw2o","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/find(_:on:)-2t0lk","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendingstatus\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/trendingstatus\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendingstatus","title":"TrendingStatus","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/prepare(on:)-76f3p","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/revert(on:)-1lr2x","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/prepare(on:)-7v0sb","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/revert(on:)-4o79o","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendinguser\/createtrendingusers","title":"TrendingUser.CreateTrendingUsers","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/trendinguser\/init(id:trendingperiod:userid:)","title":"convenience init(id: Int64?, trendingPeriod: TrendingPeriod, userId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/trendingperiod","title":"var trendingPeriod: TrendingPeriod","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/trendinguser\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/decoderequest(_:)-1x7mj","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/decoderequest(_:)-25eu9","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinguser\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/trendinguser\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/trendinguser\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinguser\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/boolean","title":"TrendingUser.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/enum","title":"TrendingUser.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/field","title":"TrendingUser.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/group","title":"TrendingUser.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/optionalboolean","title":"TrendingUser.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/optionalenum","title":"TrendingUser.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/optionalfield","title":"TrendingUser.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinguser\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/children","title":"TrendingUser.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/compositechildren","title":"TrendingUser.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/compositeid","title":"TrendingUser.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/compositeoptionalchild","title":"TrendingUser.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/compositeoptionalparent","title":"TrendingUser.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/compositeparent","title":"TrendingUser.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/id-swift.typealias","title":"TrendingUser.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/optionalchild","title":"TrendingUser.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/optionalparent","title":"TrendingUser.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/parent","title":"TrendingUser.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/siblings","title":"TrendingUser.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/trendinguser\/timestamp","title":"TrendingUser.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/find(_:on:)-2pzoa","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/find(_:on:)-93i9q","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/trendinguser\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinguser\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/trendinguser\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/trendinguser\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/trendinguser\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/trendinguser\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/trendinguser","title":"TrendingUser","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/prepare(on:)-143i4","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/revert(on:)-39myx","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/prepare(on:)-b89b","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/revert(on:)-3eas3","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/addsharedinboxurl","title":"User.AddSharedInboxUrl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/prepare(on:)-7wrbv","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/revert(on:)-4lne0","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/prepare(on:)-126qq","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/revert(on:)-7vud1","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/adduserinboxurl","title":"User.AddUserInboxUrl","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/prepare(on:)-5zwa3","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/revert(on:)-4w9p4","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/prepare(on:)-77n00","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/changebiolength\/revert(on:)-ggy7","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/changebiolength\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/changebiolength","title":"User.ChangeBioLength","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/prepare(on:)-72wg5","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/revert(on:)-4gkee","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/prepare(on:)-6kvaz","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/revert(on:)-60d9w","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/createlastlogindate\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/createlastlogindate","title":"User.CreateLastLoginDate","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/prepare(on:)-9t6hl","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/revert(on:)-7tdpu","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/prepare(on:)-48glf","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/revert(on:)-67zw","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/createquerynormalized\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/createquerynormalized","title":"User.CreateQueryNormalized","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/prepare(on:)-9b7c1","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/revert(on:)-3kh8","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/prepare(on:)-3uyc8","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/revert(on:)-6tcg3","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/createtwofactorenabledfield","title":"User.CreateTwoFactorEnabledField","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/prepare(on:)-90oxx","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/revert(on:)-45ept","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/prepare(on:)-61zwg","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/createusers\/revert(on:)-3hg0a","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/createusers\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/createusers","title":"User.CreateUsers","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/prepare(on:)-7z8l3","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/revert(on:)-8yojp","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/prepare(on:)-8sim1","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/revert(on:)-6rwpz","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/usersheaderfield\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user\/usersheaderfield","title":"User.UsersHeaderField","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/user\/init(from:withpassword:account:activitypubprofile:salt:emailconfirmationguid:gravatarhash:isapproved:privatekey:publickey:)","title":"convenience init(from: RegisterUserDto, withPassword: String, account: String, activityPubProfile: String, salt: String, emailConfirmationGuid: String, gravatarHash: String, isApproved: Bool, privateKey: String, publicKey: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/user\/init(fromoauth:account:activitypubprofile:withpassword:salt:gravatarhash:isapproved:privatekey:publickey:)","title":"convenience init(fromOAuth: OAuthUser, account: String, activityPubProfile: String, withPassword: String, salt: String, gravatarHash: String, isApproved: Bool, privateKey: String, publicKey: String)","type":"init"},{"path":"\/documentation\/vernissageserver\/user\/init(id:islocal:username:account:activitypubprofile:email:name:password:salt:emailwasconfirmed:isblocked:locale:emailconfirmationguid:gravatarhash:privatekey:publickey:manuallyapprovesfollowers:forgotpasswordguid:forgotpassworddate:bio:avat-6uocp","title":"convenience init(id: Int64?, isLocal: Bool, userName: String, account: String, activityPubProfile: String, email: String?, name: String?, password: String?, salt: String?, emailWasConfirmed: Bool?, isBlocked: Bool, locale: String, emailConfirmationGuid: String?, gravatarHash: String?, privateKey: String?, publicKey: String?, manuallyApprovesFollowers: Bool, forgotPasswordGuid: String?, forgotPasswordDate: Date?, bio: String?, avatarFileName: String?, reason: String?, isApproved: Bool, headerFileName: String?, statusesCount: Int, followersCount: Int, followingCount: Int, sharedInbox: String?, userInbox: String?, userOutbox: String?, twoFactorEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/account","title":"var account: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/accountnormalized","title":"var accountNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/activitypubprofile","title":"var activityPubProfile: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/activitypubprofilenormalized","title":"var activityPubProfileNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/avatarfilename","title":"var avatarFileName: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/bio","title":"var bio: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/deletedat","title":"var deletedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/email","title":"var email: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/emailconfirmationguid","title":"var emailConfirmationGuid: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/emailnormalized","title":"var emailNormalized: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/emailwasconfirmed","title":"var emailWasConfirmed: Bool?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/flexifields","title":"var flexiFields: [FlexiField]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/followerscount","title":"var followersCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/following","title":"var following: [Follow]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/followingcount","title":"var followingCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/follows","title":"var follows: [Follow]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/forgotpassworddate","title":"var forgotPasswordDate: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/forgotpasswordguid","title":"var forgotPasswordGuid: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/gravatarhash","title":"var gravatarHash: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/hashtags","title":"var hashtags: [UserHashtag]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/headerfilename","title":"var headerFileName: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/isapproved","title":"var isApproved: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/isblocked","title":"var isBlocked: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/islocal","title":"var isLocal: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/lastlogindate","title":"var lastLoginDate: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/locale","title":"var locale: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/manuallyapprovesfollowers","title":"var manuallyApprovesFollowers: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/password","title":"var password: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/privatekey","title":"var privateKey: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/publickey","title":"var publicKey: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/querynormalized","title":"var queryNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/reason","title":"var reason: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/refreshtokens","title":"var refreshTokens: [RefreshToken]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/roles","title":"var roles: [Role]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/salt","title":"var salt: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/sharedinbox","title":"var sharedInbox: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/statuses","title":"var statuses: [Status]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/statusescount","title":"var statusesCount: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/twofactorenabled","title":"var twoFactorEnabled: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/twofactortoken","title":"var twoFactorToken: TwoFactorToken?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/userinbox","title":"var userInbox: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/username","title":"var userName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/usernamenormalized","title":"var userNameNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/useroutbox","title":"var userOutbox: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/getusername()","title":"func getUserName() -> String","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/user\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/decoderequest(_:)-36hrr","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/decoderequest(_:)-6ca4h","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/user\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/user\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/boolean","title":"User.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/enum","title":"User.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/field","title":"User.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/group","title":"User.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/optionalboolean","title":"User.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/optionalenum","title":"User.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/optionalfield","title":"User.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/children","title":"User.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/compositechildren","title":"User.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/compositeid","title":"User.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/compositeoptionalchild","title":"User.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/compositeoptionalparent","title":"User.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/compositeparent","title":"User.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/id-swift.typealias","title":"User.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/optionalchild","title":"User.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/optionalparent","title":"User.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/parent","title":"User.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/siblings","title":"User.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/user\/timestamp","title":"User.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/find(_:on:)-58uq3","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/find(_:on:)-62ieq","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/user\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/user\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/user\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/user\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/user\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/user","title":"User","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/prepare(on:)-919cj","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/revert(on:)-9h92g","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/prepare(on:)-9t5xf","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/revert(on:)-15ra6","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/createuserblockeddomains","title":"UserBlockedDomain.CreateUserBlockedDomains","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/init(id:userid:domain:reason:)","title":"convenience init(id: Int64?, userId: Int64, domain: String, reason: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/domain","title":"var domain: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/reason","title":"var reason: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/decoderequest(_:)-3uhfq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/decoderequest(_:)-4wu3z","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/boolean","title":"UserBlockedDomain.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/enum","title":"UserBlockedDomain.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/field","title":"UserBlockedDomain.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/group","title":"UserBlockedDomain.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/optionalboolean","title":"UserBlockedDomain.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/optionalenum","title":"UserBlockedDomain.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/optionalfield","title":"UserBlockedDomain.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/children","title":"UserBlockedDomain.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/compositechildren","title":"UserBlockedDomain.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/compositeid","title":"UserBlockedDomain.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/compositeoptionalchild","title":"UserBlockedDomain.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/compositeoptionalparent","title":"UserBlockedDomain.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/compositeparent","title":"UserBlockedDomain.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/id-swift.typealias","title":"UserBlockedDomain.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/optionalchild","title":"UserBlockedDomain.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/optionalparent","title":"UserBlockedDomain.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/parent","title":"UserBlockedDomain.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/siblings","title":"UserBlockedDomain.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/timestamp","title":"UserBlockedDomain.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/find(_:on:)-1j0vg","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/find(_:on:)-33shg","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userblockeddomain\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userblockeddomain\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userblockeddomain","title":"UserBlockedDomain","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/prepare(on:)-uwi4","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/revert(on:)-9c4","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/prepare(on:)-9ucgk","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/revert(on:)-8povj","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userhashtag\/createuserhashtag","title":"UserHashtag.CreateUserHashtag","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/userhashtag\/init(id:userid:hashtag:)","title":"convenience init(id: Int64?, userId: Int64, hashtag: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/hashtag","title":"var hashtag: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/hashtagnormalized","title":"var hashtagNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userhashtag\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/decoderequest(_:)-7pfxi","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/decoderequest(_:)-9y19b","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/userhashtag\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/userhashtag\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/userhashtag\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/userhashtag\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/boolean","title":"UserHashtag.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/enum","title":"UserHashtag.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/field","title":"UserHashtag.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/group","title":"UserHashtag.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/optionalboolean","title":"UserHashtag.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/optionalenum","title":"UserHashtag.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/optionalfield","title":"UserHashtag.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/userhashtag\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/children","title":"UserHashtag.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/compositechildren","title":"UserHashtag.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/compositeid","title":"UserHashtag.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/compositeoptionalchild","title":"UserHashtag.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/compositeoptionalparent","title":"UserHashtag.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/compositeparent","title":"UserHashtag.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/id-swift.typealias","title":"UserHashtag.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/optionalchild","title":"UserHashtag.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/optionalparent","title":"UserHashtag.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/parent","title":"UserHashtag.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/siblings","title":"UserHashtag.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userhashtag\/timestamp","title":"UserHashtag.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/find(_:on:)-4yy46","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/find(_:on:)-9lyva","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/userhashtag\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/userhashtag\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/userhashtag\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userhashtag\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userhashtag\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userhashtag\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userhashtag","title":"UserHashtag","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/prepare(on:)-808bg","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/revert(on:)-6zi33","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/prepare(on:)-8wgtz","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/revert(on:)-9382e","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/usermute\/createusermutes\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/usermute\/createusermutes","title":"UserMute.CreateUserMutes","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/usermute\/init(id:userid:muteduserid:mutestatuses:mutereblogs:mutenotifications:muteend:)","title":"convenience init(id: Int64?, userId: Int64, mutedUserId: Int64, muteStatuses: Bool, muteReblogs: Bool, muteNotifications: Bool, muteEnd: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/muteend","title":"var muteEnd: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/mutenotifications","title":"var muteNotifications: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/mutereblogs","title":"var muteReblogs: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/mutestatuses","title":"var muteStatuses: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/muteduser","title":"var mutedUser: User","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/usermute\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/decoderequest(_:)-1w2kx","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/decoderequest(_:)-4o5oz","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/usermute\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/usermute\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/usermute\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/usermute\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/boolean","title":"UserMute.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/enum","title":"UserMute.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/field","title":"UserMute.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/group","title":"UserMute.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/optionalboolean","title":"UserMute.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/optionalenum","title":"UserMute.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/optionalfield","title":"UserMute.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/usermute\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/children","title":"UserMute.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/compositechildren","title":"UserMute.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/compositeid","title":"UserMute.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/compositeoptionalchild","title":"UserMute.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/compositeoptionalparent","title":"UserMute.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/compositeparent","title":"UserMute.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/id-swift.typealias","title":"UserMute.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/optionalchild","title":"UserMute.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/optionalparent","title":"UserMute.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/parent","title":"UserMute.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/siblings","title":"UserMute.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/usermute\/timestamp","title":"UserMute.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/find(_:on:)-1vt2t","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/find(_:on:)-frx0","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/usermute\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/usermute\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/usermute\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/usermute\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/usermute\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/usermute\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/usermute","title":"UserMute","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/prepare(on:)-4jm05","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/revert(on:)-6hyht","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/prepare(on:)-6lzqs","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/revert(on:)-2zvtx","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/userrole\/createuserroles\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userrole\/createuserroles","title":"UserRole.CreateUserRoles","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/userrole\/init(id:userid:roleid:)","title":"convenience init(id: Int64?, userId: Int64, roleId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/role","title":"var role: Role","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userrole\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/decoderequest(_:)-214ey","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/decoderequest(_:)-2nqkv","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/userrole\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/userrole\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/userrole\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/userrole\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/boolean","title":"UserRole.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/enum","title":"UserRole.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/field","title":"UserRole.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/group","title":"UserRole.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/optionalboolean","title":"UserRole.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/optionalenum","title":"UserRole.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/optionalfield","title":"UserRole.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/userrole\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/children","title":"UserRole.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/compositechildren","title":"UserRole.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/compositeid","title":"UserRole.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/compositeoptionalchild","title":"UserRole.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/compositeoptionalparent","title":"UserRole.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/compositeparent","title":"UserRole.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/id-swift.typealias","title":"UserRole.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/optionalchild","title":"UserRole.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/optionalparent","title":"UserRole.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/parent","title":"UserRole.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/siblings","title":"UserRole.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userrole\/timestamp","title":"UserRole.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/find(_:on:)-9tayg","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/find(_:on:)-gl0c","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/userrole\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/userrole\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/userrole\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userrole\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userrole\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userrole\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userrole","title":"UserRole","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/prepare(on:)-2l7ae","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/revert(on:)-8nlso","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/prepare(on:)-pxr","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/revert(on:)-qop5","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatustypecolumn","title":"UserStatus.CreateUserStatusTypeColumn","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/prepare(on:)-4okgx","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/revert(on:)-6r9ua","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/prepare(on:)-808h6","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/revert(on:)-2wul","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userstatus\/createuserstatuses","title":"UserStatus.CreateUserStatuses","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/userstatus\/init(id:type:userid:statusid:)","title":"convenience init(id: Int64?, type: UserStatusType, userId: Int64, statusId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/status","title":"var status: Status","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/user","title":"var user: User","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/userstatustype","title":"var userStatusType: UserStatusType","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userstatus\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/decoderequest(_:)-2cla2","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/decoderequest(_:)-4onfw","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/userstatus\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/userstatus\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/boolean","title":"UserStatus.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/enum","title":"UserStatus.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/field","title":"UserStatus.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/group","title":"UserStatus.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/optionalboolean","title":"UserStatus.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/optionalenum","title":"UserStatus.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/optionalfield","title":"UserStatus.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/children","title":"UserStatus.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/compositechildren","title":"UserStatus.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/compositeid","title":"UserStatus.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/compositeoptionalchild","title":"UserStatus.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/compositeoptionalparent","title":"UserStatus.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/compositeparent","title":"UserStatus.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/id-swift.typealias","title":"UserStatus.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/optionalchild","title":"UserStatus.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/optionalparent","title":"UserStatus.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/parent","title":"UserStatus.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/siblings","title":"UserStatus.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/userstatus\/timestamp","title":"UserStatus.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/find(_:on:)-35pwe","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/find(_:on:)-66vte","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatus\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/userstatus\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatus\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatus\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/userstatus\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userstatus","title":"UserStatus","type":"class"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/follow","title":"case follow","type":"case"},{"path":"\/documentation\/vernissageserver\/userstatustype\/mention","title":"case mention","type":"case"},{"path":"\/documentation\/vernissageserver\/userstatustype\/owner","title":"case owner","type":"case"},{"path":"\/documentation\/vernissageserver\/userstatustype\/reblog","title":"case reblog","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/userstatustype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/vernissageserver\/userstatustype\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/userstatustype\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/vernissageserver\/userstatustype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/userstatustype\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/userstatustype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/userstatustype","title":"UserStatusType","type":"enum"},{"title":"Queue Drivers","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueuesdriver\/init(on:)","title":"init(on: any EventLoopGroup)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueuesdriver\/makequeue(with:)","title":"func makeQueue(with: QueueContext) -> any Queue","type":"method"},{"path":"\/documentation\/vernissageserver\/echoqueuesdriver\/shutdown()","title":"func shutdown()","type":"method"}],"path":"\/documentation\/vernissageserver\/echoqueuesdriver\/queuesdriver-implementations","title":"QueuesDriver Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/echoqueuesdriver","title":"EchoQueuesDriver","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueue\/init(context:)","title":"init(context: QueueContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueue\/context","title":"var context: QueueContext","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueue\/clear(_:)","title":"func clear(JobIdentifier) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/echoqueue\/get(_:)","title":"func get(JobIdentifier) -> EventLoopFuture<JobData>","type":"method"},{"path":"\/documentation\/vernissageserver\/echoqueue\/pop()","title":"func pop() -> EventLoopFuture<JobIdentifier?>","type":"method"},{"path":"\/documentation\/vernissageserver\/echoqueue\/push(_:)","title":"func push(JobIdentifier) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/echoqueue\/set(_:to:)","title":"func set(JobIdentifier, to: JobData) -> EventLoopFuture<Void>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueue\/configuration","title":"var configuration: QueuesConfiguration","type":"property"},{"path":"\/documentation\/vernissageserver\/echoqueue\/eventloop","title":"var eventLoop: any EventLoop","type":"property"},{"path":"\/documentation\/vernissageserver\/echoqueue\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/vernissageserver\/echoqueue\/logger","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/vernissageserver\/echoqueue\/queuename","title":"var queueName: QueueName","type":"property"},{"path":"\/documentation\/vernissageserver\/echoqueue\/worker","title":"var worker: QueueWorker","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/echoqueue\/dispatch(_:_:maxretrycount:delayuntil:id:)-2jxt4","title":"func dispatch<J>(J.Type, J.Payload, maxRetryCount: Int, delayUntil: Date?, id: JobIdentifier) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/echoqueue\/dispatch(_:_:maxretrycount:delayuntil:id:)-6goqk","title":"func dispatch<J>(J.Type, J.Payload, maxRetryCount: Int, delayUntil: Date?, id: JobIdentifier) async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/echoqueue\/queue-implementations","title":"Queue Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/echoqueue","title":"EchoQueue","type":"struct"},{"title":"Other","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/constants\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/constants\/applicationname","title":"static let applicationName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/constants\/name","title":"static let name: String","type":"property"},{"path":"\/documentation\/vernissageserver\/constants\/requestmetadata","title":"static let requestMetadata: String","type":"property"},{"path":"\/documentation\/vernissageserver\/constants\/twofactortokenheader","title":"static let twoFactorTokenHeader: String","type":"property"},{"path":"\/documentation\/vernissageserver\/constants\/useragent","title":"static let userAgent: String","type":"property"},{"path":"\/documentation\/vernissageserver\/constants\/version","title":"static let version: String","type":"property"}],"path":"\/documentation\/vernissageserver\/constants","title":"Constants","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/entrypoint\/main()","title":"static func main() async throws","type":"method"}],"path":"\/documentation\/vernissageserver\/entrypoint","title":"Entrypoint","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/password\/init()","title":"init()","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/password\/generatesalt()","title":"static func generateSalt() -> String","type":"method"},{"path":"\/documentation\/vernissageserver\/password\/hash(_:withsalt:)","title":"static func hash(String, withSalt: String) throws -> String","type":"method"}],"path":"\/documentation\/vernissageserver\/password","title":"Password","type":"class"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/prepare(on:)-1bjt4","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/revert(on:)-4ldfn","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/prepare(on:)-79h3c","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/revert(on:)-7ipw3","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/disposableemail\/createdisposableemails","title":"DisposableEmail.CreateDisposableEmails","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/disposableemail\/init(id:domain:)","title":"convenience init(id: Int64?, domain: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/domain","title":"var domain: String","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/domainnormalized","title":"var domainNormalized: String","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/updatedat","title":"var updatedAt: Date?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/disposableemail\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/decoderequest(_:)-6aix7","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/decoderequest(_:)-88z9l","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/disposableemail\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/disposableemail\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/disposableemail\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/disposableemail\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/boolean","title":"DisposableEmail.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/enum","title":"DisposableEmail.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/field","title":"DisposableEmail.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/group","title":"DisposableEmail.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/optionalboolean","title":"DisposableEmail.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/optionalenum","title":"DisposableEmail.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/optionalfield","title":"DisposableEmail.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/disposableemail\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/children","title":"DisposableEmail.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/compositechildren","title":"DisposableEmail.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/compositeid","title":"DisposableEmail.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/compositeoptionalchild","title":"DisposableEmail.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/compositeoptionalparent","title":"DisposableEmail.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/compositeparent","title":"DisposableEmail.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/id-swift.typealias","title":"DisposableEmail.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/optionalchild","title":"DisposableEmail.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/optionalparent","title":"DisposableEmail.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/parent","title":"DisposableEmail.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/siblings","title":"DisposableEmail.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/disposableemail\/timestamp","title":"DisposableEmail.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/find(_:on:)-7m5fq","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/find(_:on:)-7s9rn","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/disposableemail\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/disposableemail\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/disposableemail\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/disposableemail\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/disposableemail\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/disposableemail\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/disposableemail","title":"DisposableEmail","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/prepare(on:)-8j5jl","title":"func prepare(on: any Database) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/revert(on:)-42aot","title":"func revert(on: any Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/defaultname","title":"var defaultName: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/prepare(on:)-3av1m","title":"func prepare(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/revert(on:)-8je83","title":"func revert(on: any Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/createtwofactortokens","title":"TwoFactorToken.CreateTwoFactorTokens","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/init()","title":"init()","type":"init"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/init(id:userid:key:backuptokens:)","title":"convenience init(id: Int64?, userId: Int64, key: String, backupTokens: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/backuptokens","title":"var backupTokens: [String]","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/id-swift.property","title":"var id: Int64?","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/key","title":"var key: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/updatedat","title":"var updatedAt: Date?","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/user","title":"var user: User","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/anyid","title":"var anyID: any AnyID","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/decoderequest(_:)-3bmfq","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/decoderequest(_:)-447di","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/codableproperties","title":"var codableProperties: [SomeCodingKey : any AnyCodableProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/databaseproperties","title":"var databaseProperties: [any AnyDatabaseProperty]","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/properties","title":"var properties: [any AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/input(to:)","title":"func input(to: any DatabaseInput)","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/output(from:)","title":"func output(from: any DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/boolean","title":"TwoFactorToken.Boolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/enum","title":"TwoFactorToken.Enum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/field","title":"TwoFactorToken.Field","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/group","title":"TwoFactorToken.Group","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/optionalboolean","title":"TwoFactorToken.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/optionalenum","title":"TwoFactorToken.OptionalEnum","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/optionalfield","title":"TwoFactorToken.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/_$id","title":"var _$id: Self.ID<Self.IDValue>","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/_$idexists","title":"var _$idExists: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/create(on:)","title":"func create(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/delete(force:on:)","title":"func delete(force: Bool, on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/restore(on:)","title":"func restore(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/save(on:)","title":"func save(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/update(on:)","title":"func update(on: any Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/children","title":"TwoFactorToken.Children","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/compositechildren","title":"TwoFactorToken.CompositeChildren","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/compositeid","title":"TwoFactorToken.CompositeID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/compositeoptionalchild","title":"TwoFactorToken.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/compositeoptionalparent","title":"TwoFactorToken.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/compositeparent","title":"TwoFactorToken.CompositeParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/id-swift.typealias","title":"TwoFactorToken.ID","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/optionalchild","title":"TwoFactorToken.OptionalChild","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/optionalparent","title":"TwoFactorToken.OptionalParent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/parent","title":"TwoFactorToken.Parent","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/siblings","title":"TwoFactorToken.Siblings","type":"typealias"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/timestamp","title":"TwoFactorToken.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/find(_:on:)-1y72y","title":"static func find(Self.IDValue?, on: any Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/find(_:on:)-97lgw","title":"static func find(Self.IDValue?, on: any Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/query(on:)","title":"static func query(on: any Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/space","title":"static var space: String?","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortoken\/spaceifnotaliased","title":"static var spaceIfNotAliased: String?","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortoken\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/twofactortoken","title":"TwoFactorToken","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokensservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokensservice\/find(for:on:)","title":"func find(for: Int64, on: any Database) async throws -> TwoFactorToken?","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokensservice\/generate(for:)","title":"func generate(for: User) throws -> TwoFactorToken","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokensservice\/generatetokens(key:)","title":"func generateTokens(key: String) throws -> [String]","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokensservice\/validate(_:twofactortoken:allowbackupcode:)","title":"func validate(String, twoFactorToken: TwoFactorToken, allowBackupCode: Bool) throws -> Bool","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortokensservice","title":"TwoFactorTokensService","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/init(contentwarning:)","title":"init(contentWarning: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/contentwarning","title":"var contentWarning: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/decoderequest(_:)-5yuft","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/decoderequest(_:)-ilct","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/contentwarningdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/contentwarningdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/contentwarningdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/contentwarningdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/contentwarningdto","title":"ContentWarningDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/init(websentrydsn:maximumnumberofinvitations:)","title":"init(webSentryDsn: String, maximumNumberOfInvitations: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/maximumnumberofinvitations","title":"var maximumNumberOfInvitations: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/websentrydsn","title":"var webSentryDsn: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/decoderequest(_:)-1j7x5","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/decoderequest(_:)-541bz","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/publicsettingsdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/publicsettingsdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/publicsettingsdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/publicsettingsdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/publicsettingsdto","title":"PublicSettingsDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/dequeue(_:_:)-6vg83","title":"func dequeue(QueueContext, Int64) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/error(_:_:_:)-93ue9","title":"func error(QueueContext, any Error, Int64) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/payload","title":"StatusFavouriterJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/dequeue(_:_:)-4sr4m","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/error(_:_:_:)-5av5h","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/name-78qzo","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/parsepayload(_:)-8asw4","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/serializepayload(_:)-5htza","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/name-2lgej","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/parsepayload(_:)-595xz","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/serializepayload(_:)-5n4fc","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusfavouriterjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusfavouriterjob","title":"StatusFavouriterJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/init(statusfavouriteid:userid:statusid:)","title":"init(statusFavouriteId: String, userId: Int64, statusId: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/statusfavouriteid","title":"var statusFavouriteId: String","type":"property"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/statusid","title":"var statusId: Int64","type":"property"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/userid","title":"var userId: Int64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/decoderequest(_:)-23j13","title":"static func decodeRequest(Request) async throws -> Self","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/decoderequest(_:)-wuqj","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusunfavouritejobdto","title":"StatusUnfavouriteJobDto","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/dequeue(_:_:)-55lsd","title":"func dequeue(QueueContext, StatusUnfavouriteJobDto) async throws","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/error(_:_:_:)-hjx9","title":"func error(QueueContext, any Error, StatusUnfavouriteJobDto) async throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/payload","title":"StatusUnfavouriterJob.Payload","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/_nextretryin(attempt:)","title":"func _nextRetryIn(attempt: Int) -> Int","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/dequeue(_:_:)-5uvxz","title":"func dequeue(QueueContext, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/error(_:_:_:)-5x2t5","title":"func error(QueueContext, any Error, Self.Payload) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/nextretryin(attempt:)","title":"func nextRetryIn(attempt: Int) -> Int","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/name-8nud5","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/parsepayload(_:)-7922k","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/serializepayload(_:)-3qz0","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/asyncjob-implementations","title":"AsyncJob Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/_dequeue(_:id:payload:)","title":"func _dequeue(QueueContext, id: String, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/_error(_:id:_:payload:)","title":"func _error(QueueContext, id: String, any Error, payload: [UInt8]) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/name-5t5bo","title":"static var name: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/parsepayload(_:)-5sh7q","title":"static func parsePayload([UInt8]) throws -> Self.Payload","type":"method"},{"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/serializepayload(_:)-3tnzu","title":"static func serializePayload(Self.Payload) throws -> [UInt8]","type":"method"}],"path":"\/documentation\/vernissageserver\/statusunfavouriterjob\/job-implementations","title":"Job Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/statusunfavouriterjob","title":"StatusUnfavouriterJob","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/init(from:for:)","title":"init(from: TwoFactorToken, for: User)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/backupcodes","title":"let backupCodes: [String]","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/issuer","title":"let issuer: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/key","title":"let key: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/label","title":"let label: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/url","title":"let url: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/encodeactivityresponse(for:)","title":"func encodeActivityResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/decoderequest(_:)-6k1y7","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/decoderequest(_:)-8q139","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortokendto\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/vernissageserver\/twofactortokendto\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokendto\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/vernissageserver\/twofactortokendto\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/twofactortokendto","title":"TwoFactorTokenDto","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/cannotencodekey","title":"case cannotEncodeKey","type":"case"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/headernotexists","title":"case headerNotExists","type":"case"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/tokennotvalid","title":"case tokenNotValid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/identifier","title":"var identifier: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/headers","title":"var headers: HTTPHeaders","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/reason","title":"var reason: String","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/status","title":"var status: HTTPResponseStatus","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortokenerror\/aborterror-implementations","title":"AbortError Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/vernissageserver\/twofactortokenerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortokenerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/init(postgresdata:)","title":"init?(postgresData: PostgresData)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/postgresdata","title":"var postgresData: PostgresData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/postgresdatatype","title":"static var postgresDataType: PostgresDataType","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortokenerror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/vernissageserver\/twofactortokenerror\/code","title":"var code: String","type":"property"}],"path":"\/documentation\/vernissageserver\/twofactortokenerror\/terminateerror-implementations","title":"TerminateError Implementations","type":"symbol"}],"path":"\/documentation\/vernissageserver\/twofactortokenerror","title":"TwoFactorTokenError","type":"enum"}],"path":"\/documentation\/vernissageserver","title":"VernissageServer","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}