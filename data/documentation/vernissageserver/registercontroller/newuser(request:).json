{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@Sendable","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true},{"text":".","type":"text"}]}],"name":"request"}]},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"isActive":true,"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","type":"reference"},{"type":"text","text":" with new generated "},{"code":"id","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"type":"text","text":" "},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"type":"codeVoice","code":"reCaptcha"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"type":"text","text":"In the email there will be link with address to the client application (from "},{"code":"redirectBaseUrl","type":"codeVoice"},{"text":"). Client application should","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"serve the page will can retrieve two parameters:"}]},{"items":[{"content":[{"inlineContent":[{"code":"token","type":"codeVoice"},{"text":" - string, GUID","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"userId","type":"codeVoice"},{"type":"text","text":" - new user identifier"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Client application have to read that parameters and use endpoint "},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}]},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"Endpoint URL: ","type":"text"},{"code":"\/api\/v1\/account\/register","type":"codeVoice"},{"type":"text","text":"."}]}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"CURL request:","type":"text"}]}]},{"code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"syntax":"bash","type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example request body:"}],"type":"strong"}],"type":"paragraph"},{"code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example response body (200 OK):","type":"text"}],"type":"strong"}]},{"syntax":"json","type":"codeListing","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (field validation):"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (business logic validation):"}]}]},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"Validation.validationError","type":"codeVoice"},{"type":"text","text":" if validation errors occurs."}]}],"name":"Throws"},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"type":"text","text":" if security token is mandatory (it should be provided from Google reCaptcha)."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"type":"text","text":" if security token is invalid (Google reCaptcha API returned that information)."}]}],"style":"note","type":"aside","name":"Throws"},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"type":"text","text":" if user with provided user name already exists in the system."}]}],"style":"note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.emailIsAlreadyConnected","type":"codeVoice"},{"text":" if email is already connected with other account.","type":"text"}]}],"name":"Throws","type":"aside"},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmail"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}],"type":"paragraph"}]},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.missingEmailConfirmationGuid","type":"codeVoice"},{"text":"if email confirmation guid has not been generated.","type":"text"}]}],"name":"Throws"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"type":"text","text":"if registration is disabled."}]}]},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.userHaveToAcceptAgreement","type":"codeVoice"},{"text":" if user have to accept agreement.","type":"text"}],"type":"paragraph"}]},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"text":" if reason is mandatory when only registration by approval is enabled.","type":"text"}]}],"type":"aside"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"type":"text","text":" if invitation token is invalid."}]}]},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.invitationTokenHasBeenUsed"},{"text":" if invitation token has been used.","type":"text"}]}]},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"text":" if user Id not exists. Probably saving of the user entity failed.","type":"text"}]}]},{"name":"Throws","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.disposableEmailCannotBeUsed"},{"text":" if disposabled email has been used.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"modules":[{"name":"VernissageServer"}],"externalID":"s:16VernissageServer18RegisterControllerV7newUser7request5Vapor8ResponseCAF7RequestC_tYaYbKF","role":"symbol","roleHeading":"Instance Method","title":"newUser(request:)"},"abstract":[{"text":"Register new user.","type":"text"}],"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"references":{"doc://VernissageServer/documentation/VernissageServer/UserDto":{"title":"UserDto","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/vernissageserver\/userdto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserDto"}],"navigatorTitle":[{"kind":"identifier","text":"UserDto"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"abstract":[{"type":"text","text":"Register new user."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","role":"symbol","title":"newUser(request:)"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"title":"RegisterUserDto","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","abstract":[],"type":"topic","role":"symbol","url":"\/documentation\/vernissageserver\/registeruserdto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegisterUserDto"}],"navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"abstract":[{"type":"text","text":"Controller for adding new user into the system."}],"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegisterController"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","url":"\/documentation\/vernissageserver\/registercontroller","role":"symbol","navigatorTitle":[{"text":"RegisterController","kind":"identifier"}],"title":"RegisterController"},"doc://VernissageServer/documentation/VernissageServer":{"kind":"symbol","role":"collection","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"url":"\/documentation\/vernissageserver","type":"topic","title":"VernissageServer","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer"}}}