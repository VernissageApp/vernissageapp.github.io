{"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Vernissage API server is created in "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.swift.org\/"},{"type":"text","text":" language with "},{"isActive":true,"identifier":"https:\/\/vapor.codes","type":"reference"},{"text":" framework.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"We can run it in all operating systems supporting "},{"type":"codeVoice","code":"Swift"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Vapor"},{"type":"text","text":"."}]},{"type":"heading","level":2,"anchor":"Prerequisites","text":"Prerequisites"},{"type":"paragraph","inlineContent":[{"text":"Install the ","type":"text"},{"type":"codeVoice","code":"GD"},{"text":" library on your computer. If you’re using macOS, install Homebrew then run the command ","type":"text"},{"type":"codeVoice","code":"brew install gd"},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"If you’re using Linux, run ","type":"text"},{"type":"codeVoice","code":"apt-get libgd-dev"},{"type":"text","text":" as root."}]},{"inlineContent":[{"text":"Running the application requires installing ","type":"text"},{"type":"reference","identifier":"https:\/\/www.swift.org\/install\/","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Getting started","anchor":"Getting-started"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Below are all the commands necessary to run the API part of the Vernissage."}]},{"syntax":"bash","type":"codeListing","code":["$ git clone https:\/\/github.com\/VernissageApp\/VernissageServer.git","$ cd VernissageServer","$ swift run"]},{"inlineContent":[{"type":"text","text":"API should start. Configuration will be read from "},{"type":"codeVoice","code":"appsettings.json"},{"text":" file. SQLite database will be used. You can sign in using default ","type":"text"},{"type":"codeVoice","code":"admin"},{"type":"text","text":" account (with password: "},{"code":"admin","type":"codeVoice"},{"text":"). For example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"bash","code":["$ curl --location 'http:\/\/localhost:8080\/api\/v1\/account\/login' \\","--header 'Accept: application\/json' \\","--header 'Content-Type: application\/json' \\","--data-raw '{","    \"userNameOrEmail\": \"admin\",","    \"password\": \"admin\"","}'"]},{"type":"paragraph","inlineContent":[{"text":"Request will return JSON:","type":"text"}]},{"code":["{","    \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpZCI6IjcyNTA3Mjk3NzcyNjEyMzYyMjUiLCJhcHBsaWNhdGlvbiI6IlZlcm5pc3NhZ2UgMS4wLjAtYWxwaGExIiwicm9sZXMiOlsiYWRtaW5pc3RyYXRvciJdLCJ1c2VyTmFtZSI6ImFkbWluIiwibmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6ImFkbWluQGxvY2FsaG9zdCIsImV4cCI6MTcwNjE2OTE1Mi4zODk5NTMxfQ.Z87v9HvfBM6fn6F8fu06ToPShT9F55G74wL676SLmSdLMzyz3ykfsmS-GDNIqfUatfwdBvSxQgpjUO6IzYAuQKZ925tdN8DwN6kVAEa2mJLlntc66qAkQSiPeXYEl29Cgbg6TuAvxghWVO5PVliMG8mxO7uwSFDN095mNxbee8x8P-ogL176vXBhJ_rWcm1fY7_n-qSn6XN2GbgjiywnOZfvHNNtLvbikcpJeIAzHH-BlXolWsUauuZGZBeFv5TuBr13r5PZfVar0FH9Uwj39w5DV3jxlwRPyejux4LL96dvrEsP4Btx88c3SSLyxm1REfRR_wKoUoXK8iVqfBU6TQ\",","    \"refreshToken\": \"U8zMqw1tGHqIk0cUXmvAEcwYIpsQlwWUxHa0fnXbu\"","}"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"text":"After successfully sign in you can use other endpoints (with ","type":"text"},{"code":"Authentication: Bearer","type":"codeVoice"},{"type":"text","text":" header)."}]},{"type":"heading","level":2,"text":"Custom configuration","anchor":"Custom-configuration"},{"inlineContent":[{"type":"text","text":"In local development environment you can create "},{"type":"codeVoice","code":"appsettings.local.json"},{"type":"text","text":" file (near "},{"type":"codeVoice","code":"appsettings.json"},{"text":" file). This file can look like that:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"vernissage\": {","        \"baseAddress\": \"http:\/\/localhost:8080\",","        \"connectionString\": \"postgres:\/\/postgres:secretpass@localhost:5432\/postgres\",","        \"queueUrl\": \"redis:\/\/127.0.0.1:6379\",","        \"s3Address\": \"https:\/\/s3.eu-central-1.amazonaws.com\",","        \"s3Region\": \"eu-central-1\",","        \"s3Bucket\": \"your-bucket-test\",","        \"s3AccessKeyId\": \"ASDA8AS8HSDSU\",","        \"s3SecretAccessKey\": \"DSfEaBUYIhoouHhigygGtldDpLesmXCz10ICe0F\"","    }","}"]},{"inlineContent":[{"type":"text","text":"Here you can configure three external resources:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"connectionString"},{"type":"text","text":" - you can use SQLite or Postgres database connection string"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"queueUrl","type":"codeVoice"},{"text":" - URL to Redis in memory data store (used as cache and queue by Vernissage)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"s3*"},{"text":" - configuration of S3 storage. Here you can use any external S3 compatible cloud storage or ","type":"text"},{"identifier":"https:\/\/min.io","isActive":true,"type":"reference"},{"type":"text","text":" docker ("},{"identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","isActive":true,"type":"reference"},{"text":")","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the "},{"code":"s3Region","type":"codeVoice"},{"text":" variable is set, it causes the other settings to be overwritten and use Amazon AWS S3.","type":"text"}]}],"style":"note","type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In production environment you can override configuration parameters by environment variables. For example if you want to set custom "},{"type":"codeVoice","code":"baseAddress"},{"type":"text","text":" you have to define variable: "},{"code":"VERNISSAGE_BASEADDRESS","type":"codeVoice"},{"text":", etc.","type":"text"}]},{"text":"File logger","level":2,"type":"heading","anchor":"File-logger"},{"inlineContent":[{"text":"By default, the system displays logs only on the system console. If logging is also to be done to a file we need to set a system environment variable:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"VERNISSAGE_LOG_PATH","type":"codeVoice"},{"text":" - file path e.g.: ","type":"text"},{"code":"logs\/vernissage.log","type":"codeVoice"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can also set the default login level by setting a system environment variable:"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"LOG_LEVEL"},{"type":"text","text":" - more information about log levels you can find "},{"isActive":true,"type":"reference","identifier":"https:\/\/docs.vapor.codes\/basics\/logging\/"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Sentry","level":2,"anchor":"Sentry"},{"inlineContent":[{"type":"text","text":"It is possible to send application errors to the Sentry central logging system. To do this, set appropriate environment variables:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"SENTRY_DSN"},{"text":" - for writing Vernissage Server (API) logs","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SENTRY_DSN_WEB"},{"text":" - for writing Vernissage Web logs","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"text":"Docker","type":"heading","anchor":"Docker"},{"inlineContent":[{"text":"In production environments, it is best to use a ","type":"text"},{"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","isActive":true,"type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/hostvernissageserver"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"]}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer"]]},"kind":"article","metadata":{"images":[{"type":"card","identifier":"host-server-card.jpg"}],"role":"article","modules":[{"name":"VernissageServer"}],"roleHeading":"Article","title":"Host Vernissage Server (API)"},"sections":[],"references":{"https://min.io":{"identifier":"https:\/\/min.io","url":"https:\/\/min.io","type":"link","titleInlineContent":[{"type":"text","text":"minio"}],"title":"minio"},"doc://VernissageServer/documentation/VernissageServer":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"url":"\/documentation\/vernissageserver","role":"collection","title":"VernissageServer","type":"topic","kind":"symbol"},"https://www.swift.org/install/":{"titleInlineContent":[{"type":"text","text":"Swift"}],"url":"https:\/\/www.swift.org\/install\/","type":"link","identifier":"https:\/\/www.swift.org\/install\/","title":"Swift"},"host-web-card.jpg":{"identifier":"host-web-card.jpg","alt":"The profile image for web documentation.","variants":[{"url":"\/images\/host-web-card@2x.jpg","traits":["2x","light"]}],"type":"image"},"https://hub.docker.com/r/minio/minio":{"identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"link","url":"https:\/\/hub.docker.com\/r\/minio\/minio","titleInlineContent":[{"type":"text","text":"https:\/\/hub.docker.com\/r\/minio\/minio"}],"title":"https:\/\/hub.docker.com\/r\/minio\/minio"},"https://docs.vapor.codes/basics/logging/":{"identifier":"https:\/\/docs.vapor.codes\/basics\/logging\/","url":"https:\/\/docs.vapor.codes\/basics\/logging\/","type":"link","titleInlineContent":[{"type":"text","text":"here"}],"title":"here"},"https://www.swift.org/":{"titleInlineContent":[{"type":"text","text":"Swift"}],"url":"https:\/\/www.swift.org\/","type":"link","identifier":"https:\/\/www.swift.org\/","title":"Swift"},"doc://VernissageServer/documentation/VernissageServer/HostVernissageWeb":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","type":"topic","images":[{"identifier":"host-web-card.jpg","type":"card"}],"kind":"article","abstract":[{"text":"Application which is Web component for Vernissage photos sharing platform.","type":"text"}],"title":"Host Vernissage WEB","role":"article","url":"\/documentation\/vernissageserver\/hostvernissageweb"},"https://vapor.codes":{"identifier":"https:\/\/vapor.codes","url":"https:\/\/vapor.codes","type":"link","titleInlineContent":[{"type":"text","text":"Vapor"}],"title":"Vapor"},"https://hub.docker.com/repository/docker/mczachurski/vernissage-server":{"titleInlineContent":[{"type":"text","text":"docker image"}],"url":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","type":"link","identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","title":"docker image"},"doc://VernissageServer/documentation/VernissageServer/BuildDocumentation":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation","type":"topic","kind":"article","abstract":[{"text":"This documentation is created by DocC tool.","type":"text"}],"title":"Build the documentation","role":"article","url":"\/documentation\/vernissageserver\/builddocumentation"},"host-server-card.jpg":{"identifier":"host-server-card.jpg","alt":null,"variants":[{"url":"\/images\/host-server-card@2x.jpg","traits":["2x","light"]}],"type":"image"}}}