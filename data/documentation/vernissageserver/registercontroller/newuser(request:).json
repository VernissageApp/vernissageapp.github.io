{"sections":[],"abstract":[{"text":"Register new user.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"metadata":{"externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","title":"newUser(request:)","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"VernissageServer"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}]}]},{"parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"text":"The Vapor request to the endpoint ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","isActive":true},{"text":" with new generated ","type":"text"},{"type":"codeVoice","code":"id"},{"type":"text","text":"."}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"type":"codeVoice","code":"reCaptcha"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}]},{"type":"paragraph","inlineContent":[{"text":"During account creation process server will send to the user inbox email with information how to confirm his email address.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"In the email there will be link with address to the client application (from "},{"code":"redirectBaseUrl","type":"codeVoice"},{"text":"). Client application should","type":"text"},{"text":" ","type":"text"},{"text":"serve the page will can retrieve two parameters:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"token"},{"type":"text","text":" - string, GUID"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"userId"},{"text":" - new user identifier","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Client application have to read that parameters and use endpoint "},{"code":"POST \/api\/v1\/account\/email\/confirm","type":"codeVoice"},{"type":"text","text":" to confirm the email."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Endpoint URL: ","type":"text"},{"code":"\/api\/v1\/account\/register","type":"codeVoice"},{"text":".","type":"text"}]}],"type":"aside","name":"Important","style":"important"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"CURL request:"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example request body:"}],"type":"strong"}]},{"code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"type":"codeListing","syntax":"json"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (200 OK):","type":"text"}]}],"type":"paragraph"},{"code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"type":"codeListing","syntax":"json"},{"inlineContent":[{"inlineContent":[{"text":"Example response body (field validation):","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"codeListing","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"],"syntax":"json"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (business logic validation):","type":"text"}]}],"type":"paragraph"},{"syntax":"json","type":"codeListing","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"]},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"Validation.validationError"},{"text":" if validation errors occurs.","type":"text"}]}]},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}],"type":"paragraph"}]},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"type":"text","text":" if security token is invalid (Google reCaptcha API returned that information)."}]}],"type":"aside","style":"note"},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"type":"text","text":" if user with provided user name already exists in the system."}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.emailIsAlreadyConnected","type":"codeVoice"},{"text":" if email is already connected with other account.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Throws"},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmail"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}],"type":"paragraph"}]},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}]}]},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.registrationIsDisabled"},{"type":"text","text":"if registration is disabled."}],"type":"paragraph"}],"type":"aside","style":"note"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userHaveToAcceptAgreement"},{"text":" if user have to accept agreement.","type":"text"}]}],"type":"aside"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"text":" if reason is mandatory when only registration by approval is enabled.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"text":" if invitation token is invalid.","type":"text"}]}],"name":"Throws"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"type":"text","text":" if invitation token has been used."}],"type":"paragraph"}],"type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.userIdNotExists","type":"codeVoice"},{"text":" if user Id not exists. Probably saving of the user entity failed.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"kind":"symbol","references":{"doc://VernissageServer/documentation/VernissageServer/UserDto":{"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"UserDto"}],"url":"\/documentation\/vernissageserver\/userdto","abstract":[],"title":"UserDto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserDto"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Register new user."}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}],"title":"newUser(request:)","url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"},"doc://VernissageServer/documentation/VernissageServer":{"title":"VernissageServer","type":"topic","url":"\/documentation\/vernissageserver","role":"collection","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"type":"topic","title":"RegisterController","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegisterController","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/vernissageserver\/registercontroller","role":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"RegisterController"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegisterUserDto"}],"kind":"symbol","url":"\/documentation\/vernissageserver\/registeruserdto","title":"RegisterUserDto","abstract":[],"role":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","type":"topic"}}}