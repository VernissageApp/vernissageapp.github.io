{"abstract":[{"type":"text","text":"Register new user."}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@Sendable"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier","text":"Response"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"request","content":[{"inlineContent":[{"text":"The Vapor request to the endpoint ","type":"text"},{"isActive":true,"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"Entity "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","isActive":true},{"text":" with new generated ","type":"text"},{"code":"id","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"type":"codeVoice","code":"reCaptcha"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"text":"In the email there will be link with address to the client application (from ","type":"text"},{"code":"redirectBaseUrl","type":"codeVoice"},{"type":"text","text":"). Client application should"},{"text":" ","type":"text"},{"type":"text","text":"serve the page will can retrieve two parameters:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"token"},{"type":"text","text":" - string, GUID"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"userId"},{"type":"text","text":" - new user identifier"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Client application have to read that parameters and use endpoint ","type":"text"},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}]},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Endpoint URL: ","type":"text"},{"code":"\/api\/v1\/account\/register","type":"codeVoice"},{"type":"text","text":"."}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}]},{"code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"syntax":"bash","type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example request body:","type":"text"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (200 OK):","type":"text"}]}]},{"code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"syntax":"json","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (field validation):","type":"text"}]}]},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (business logic validation):"}]}]},{"type":"codeListing","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"syntax":"json"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"Validation.validationError","type":"codeVoice"},{"type":"text","text":" if validation errors occurs."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"type":"text","text":" if security token is mandatory (it should be provided from Google reCaptcha)."}]}],"type":"aside","style":"note","name":"Throws"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}]}],"name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.userNameIsAlreadyTaken","type":"codeVoice"},{"text":" if user with provided user name already exists in the system.","type":"text"}]}],"name":"Throws","type":"aside","style":"note"},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"text":" if email is already connected with other account.","type":"text"}]}],"style":"note"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmail"},{"text":" if email has not been specified but itâ€™s mandatory.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.missingEmailConfirmationGuid","type":"codeVoice"},{"type":"text","text":"if email confirmation guid has not been generated."}]}],"type":"aside"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"text":"if registration is disabled.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Throws","type":"aside"},{"type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userHaveToAcceptAgreement"},{"text":" if user have to accept agreement.","type":"text"}],"type":"paragraph"}],"name":"Throws","style":"note"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.reasonIsMandatory","type":"codeVoice"},{"text":" if reason is mandatory when only registration by approval is enabled.","type":"text"}]}],"style":"note","name":"Throws"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"type":"text","text":" if invitation token is invalid."}],"type":"paragraph"}],"style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"text":" if invitation token has been used.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Throws"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"type":"text","text":" if user Id not exists. Probably saving of the user entity failed."}],"type":"paragraph"}],"type":"aside"},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.disposableEmailCannotBeUsed","type":"codeVoice"},{"type":"text","text":" if disposabled email has been used."}]}]}],"kind":"content"}],"sections":[],"metadata":{"externalID":"s:16VernissageServer18RegisterControllerV7newUser7request5Vapor8ResponseCAF7RequestC_tYaYbKF","modules":[{"name":"VernissageServer"}],"symbolKind":"method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"title":"newUser(request:)","roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"references":{"doc://VernissageServer/documentation/VernissageServer/UserDto":{"navigatorTitle":[{"text":"UserDto","kind":"identifier"}],"role":"symbol","abstract":[],"url":"\/documentation\/vernissageserver\/userdto","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UserDto","kind":"identifier"}],"title":"UserDto","type":"topic","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto"},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"abstract":[{"text":"Register new user.","type":"text"}],"kind":"symbol","url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","title":"newUser(request:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"role":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","url":"\/documentation\/vernissageserver\/registeruserdto","abstract":[],"navigatorTitle":[{"text":"RegisterUserDto","kind":"identifier"}],"title":"RegisterUserDto","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RegisterUserDto","kind":"identifier"}],"type":"topic"},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RegisterController","kind":"identifier"}],"type":"topic","title":"RegisterController","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","navigatorTitle":[{"text":"RegisterController","kind":"identifier"}],"abstract":[{"type":"text","text":"Controller for adding new user into the system."}],"role":"symbol","url":"\/documentation\/vernissageserver\/registercontroller"},"doc://VernissageServer/documentation/VernissageServer":{"abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"type":"topic","kind":"symbol","title":"VernissageServer","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","role":"collection","url":"\/documentation\/vernissageserver"}}}