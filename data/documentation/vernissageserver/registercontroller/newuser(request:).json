{"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Register new user."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","type":"reference","isActive":true},{"type":"text","text":"."}]}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","type":"reference","isActive":true},{"text":" with new generated ","type":"text"},{"type":"codeVoice","code":"id"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"type":"text","text":" "},{"text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure ","type":"text"},{"type":"codeVoice","code":"reCaptcha"},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"which will prevent bots from creating accounts."}],"type":"paragraph"},{"inlineContent":[{"text":"During account creation process server will send to the user inbox email with information how to confirm his email address.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"In the email there will be link with address to the client application (from "},{"code":"redirectBaseUrl","type":"codeVoice"},{"text":"). Client application should","type":"text"},{"type":"text","text":" "},{"text":"serve the page will can retrieve two parameters:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"token","type":"codeVoice"},{"type":"text","text":" - string, GUID"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"userId"},{"type":"text","text":" - new user identifier"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Client application have to read that parameters and use endpoint "},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"text":" to confirm the email.","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"Endpoint URL: "},{"type":"codeVoice","code":"\/api\/v1\/account\/register"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","style":"important","name":"Important"},{"inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example request body:","type":"text"}],"type":"strong"}]},{"syntax":"json","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (200 OK):"}]}],"type":"paragraph"},{"syntax":"json","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (field validation):","type":"text"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body (business logic validation):"}],"type":"strong"}],"type":"paragraph"},{"syntax":"json","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"type":"codeListing"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"Validation.validationError"},{"text":" if validation errors occurs.","type":"text"}],"type":"paragraph"}],"style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}],"type":"paragraph"}],"name":"Throws"},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userNameIsAlreadyTaken","type":"codeVoice"},{"text":" if user with provided user name already exists in the system.","type":"text"}]}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"text":" if email is already connected with other account.","type":"text"}]}],"name":"Throws","style":"note"},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.missingEmail","type":"codeVoice"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"style":"note","name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.missingEmailConfirmationGuid","type":"codeVoice"},{"type":"text","text":"if email confirmation guid has not been generated."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"type":"text","text":"if registration is disabled."}]}],"name":"Throws","style":"note","type":"aside"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.userHaveToAcceptAgreement","type":"codeVoice"},{"type":"text","text":" if user have to accept agreement."}],"type":"paragraph"}],"style":"note"},{"type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.reasonIsMandatory","type":"codeVoice"},{"type":"text","text":" if reason is mandatory when only registration by approval is enabled."}],"type":"paragraph"}],"style":"note","name":"Throws"},{"type":"aside","style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"type":"text","text":" if invitation token is invalid."}],"type":"paragraph"}]},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.invitationTokenHasBeenUsed"},{"type":"text","text":" if invitation token has been used."}]}]},{"style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"text":" if user Id not exists. Probably saving of the user entity failed.","type":"text"}],"type":"paragraph"}],"type":"aside"}]}],"variants":[{"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"metadata":{"externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","title":"newUser(request:)","modules":[{"name":"VernissageServer"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"role":"symbol","roleHeading":"Instance Method"},"sections":[],"references":{"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterUserDto"}],"abstract":[],"title":"RegisterUserDto","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","url":"\/documentation\/vernissageserver\/registeruserdto","kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserDto"}],"abstract":[],"title":"UserDto","role":"symbol","type":"topic","navigatorTitle":[{"text":"UserDto","kind":"identifier"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","url":"\/documentation\/vernissageserver\/userdto","kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}],"role":"symbol","type":"topic","title":"newUser(request:)","abstract":[{"type":"text","text":"Register new user."}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"kind":"symbol","abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"RegisterController"}],"role":"symbol","url":"\/documentation\/vernissageserver\/registercontroller","title":"RegisterController","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","navigatorTitle":[{"text":"RegisterController","kind":"identifier"}]},"doc://VernissageServer/documentation/VernissageServer":{"kind":"symbol","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","url":"\/documentation\/vernissageserver","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"role":"collection"}}}