{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Article","modules":[{"name":"VernissageServer"}],"images":[{"identifier":"host-server-card.jpg","type":"card"}],"role":"article","title":"Host Vernissage Server (API)"},"primaryContentSections":[{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Vernissage API server is created in "},{"isActive":true,"type":"reference","identifier":"https:\/\/www.swift.org\/"},{"type":"text","text":" language with "},{"type":"reference","identifier":"https:\/\/vapor.codes","isActive":true},{"text":" framework.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"We can run it in all operating systems supporting "},{"code":"Swift","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Vapor","type":"codeVoice"},{"text":".","type":"text"}]},{"text":"Prerequisites","type":"heading","level":2,"anchor":"Prerequisites"},{"inlineContent":[{"type":"text","text":"Install the "},{"code":"GD","type":"codeVoice"},{"type":"text","text":" library on your computer. If you’re using macOS, install Homebrew then run the command "},{"type":"codeVoice","code":"brew install gd"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If you’re using Linux, run "},{"type":"codeVoice","code":"apt-get libgd-dev"},{"text":" as root.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"Getting started","level":2,"anchor":"Getting-started"},{"inlineContent":[{"type":"text","text":"Below are all the commands necessary to run the API part of the Vernissage."}],"type":"paragraph"},{"type":"codeListing","code":["$ git clone https:\/\/github.com\/VernissageApp\/VernissageServer.git","$ cd VernissageServer","$ swift run"],"syntax":"bash"},{"inlineContent":[{"type":"text","text":"API should start. Configuration will be read from "},{"type":"codeVoice","code":"appsettings.json"},{"type":"text","text":" file. SQLite database will be used. You can sign in using default "},{"type":"codeVoice","code":"admin"},{"text":" account (with password: ","type":"text"},{"code":"admin","type":"codeVoice"},{"text":"). For example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"bash","code":["$ curl --location 'http:\/\/localhost:8080\/api\/v1\/account\/login' \\","--header 'Accept: application\/json' \\","--header 'Content-Type: application\/json' \\","--data-raw '{","    \"userNameOrEmail\": \"admin\",","    \"password\": \"admin\"","}'"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Request will return JSON:"}]},{"type":"codeListing","syntax":"json","code":["{","    \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpZCI6IjcyNTA3Mjk3NzcyNjEyMzYyMjUiLCJhcHBsaWNhdGlvbiI6IlZlcm5pc3NhZ2UgMS4wLjAtYWxwaGExIiwicm9sZXMiOlsiYWRtaW5pc3RyYXRvciJdLCJ1c2VyTmFtZSI6ImFkbWluIiwibmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6ImFkbWluQGxvY2FsaG9zdCIsImV4cCI6MTcwNjE2OTE1Mi4zODk5NTMxfQ.Z87v9HvfBM6fn6F8fu06ToPShT9F55G74wL676SLmSdLMzyz3ykfsmS-GDNIqfUatfwdBvSxQgpjUO6IzYAuQKZ925tdN8DwN6kVAEa2mJLlntc66qAkQSiPeXYEl29Cgbg6TuAvxghWVO5PVliMG8mxO7uwSFDN095mNxbee8x8P-ogL176vXBhJ_rWcm1fY7_n-qSn6XN2GbgjiywnOZfvHNNtLvbikcpJeIAzHH-BlXolWsUauuZGZBeFv5TuBr13r5PZfVar0FH9Uwj39w5DV3jxlwRPyejux4LL96dvrEsP4Btx88c3SSLyxm1REfRR_wKoUoXK8iVqfBU6TQ\",","    \"refreshToken\": \"U8zMqw1tGHqIk0cUXmvAEcwYIpsQlwWUxHa0fnXbu\"","}"]},{"type":"paragraph","inlineContent":[{"text":"After successfully sign in you can use other endpoints (with ","type":"text"},{"type":"codeVoice","code":"Authentication: Bearer"},{"type":"text","text":" header)."}]},{"text":"Custom configuration","type":"heading","anchor":"Custom-configuration","level":2},{"inlineContent":[{"type":"text","text":"In local development environment you can create "},{"code":"appsettings.local.json","type":"codeVoice"},{"text":" file (near ","type":"text"},{"code":"appsettings.json","type":"codeVoice"},{"type":"text","text":" file). This file can look like that:"}],"type":"paragraph"},{"code":["{","    \"vernissage\": {","        \"baseAddress\": \"http:\/\/localhost:8080\",","        \"connectionString\": \"postgres:\/\/postgres:secretpass@localhost:5432\/postgres\",","        \"queueUrl\": \"redis:\/\/127.0.0.1:6379\",","        \"s3Address\": \"https:\/\/s3.eu-central-1.amazonaws.com\",","        \"s3Region\": \"eu-central-1\",","        \"s3Bucket\": \"your-bucket-test\",","        \"s3AccessKeyId\": \"ASDA8AS8HSDSU\",","        \"s3SecretAccessKey\": \"DSfEaBUYIhoouHhigygGtldDpLesmXCz10ICe0F\"","    }","}"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here you can configure three external resources:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"connectionString"},{"type":"text","text":" - you can use SQLite or Postgres database connection string"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"queueUrl"},{"type":"text","text":" - URL to Redis in memory data store (used as cache and queue by Vernissage)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"s3*","type":"codeVoice"},{"type":"text","text":" - configuration of S3 storage. Here you can use any external S3 compatible cloud storage or "},{"type":"reference","identifier":"https:\/\/min.io","isActive":true},{"type":"text","text":" docker ("},{"type":"reference","isActive":true,"identifier":"https:\/\/hub.docker.com\/r\/minio\/minio"},{"text":")","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In production environment you can override configuration parameters by environment variables. For example if you want to set custom "},{"code":"baseAddress","type":"codeVoice"},{"type":"text","text":" you have to define variable: "},{"type":"codeVoice","code":"VERNISSAGE_BASEADDRESS"},{"text":", etc.","type":"text"}]},{"type":"heading","text":"Docker","anchor":"Docker","level":2},{"type":"paragraph","inlineContent":[{"text":"In production environments, it is best to use a ","type":"text"},{"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"],"generated":true,"title":"Essentials"}],"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer","interfaceLanguage":"swift"},"abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/hostvernissageserver"]}],"sections":[],"references":{"host-web-card.jpg":{"type":"image","alt":"The profile image for web documentation.","identifier":"host-web-card.jpg","variants":[{"url":"\/images\/host-web-card@2x.jpg","traits":["2x","light"]}]},"doc://VernissageServer/documentation/VernissageServer/HostVernissageWeb":{"role":"article","images":[{"type":"card","identifier":"host-web-card.jpg"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","kind":"article","title":"Host Vernissage WEB","abstract":[{"type":"text","text":"Application which is Web component for Vernissage photos sharing platform."}],"url":"\/documentation\/vernissageserver\/hostvernissageweb","type":"topic"},"https://vapor.codes":{"title":"Vapor","type":"link","identifier":"https:\/\/vapor.codes","url":"https:\/\/vapor.codes","titleInlineContent":[{"type":"text","text":"Vapor"}]},"host-server-card.jpg":{"type":"image","alt":null,"identifier":"host-server-card.jpg","variants":[{"url":"\/images\/host-server-card@2x.jpg","traits":["2x","light"]}]},"https://min.io":{"title":"minio","type":"link","identifier":"https:\/\/min.io","url":"https:\/\/min.io","titleInlineContent":[{"text":"minio","type":"text"}]},"doc://VernissageServer/documentation/VernissageServer":{"url":"\/documentation\/vernissageserver","role":"collection","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","kind":"symbol","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"title":"VernissageServer","type":"topic"},"https://hub.docker.com/repository/docker/mczachurski/vernissage-server":{"type":"link","title":"docker image","identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","titleInlineContent":[{"text":"docker image","type":"text"}],"url":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server"},"doc://VernissageServer/documentation/VernissageServer/BuildDocumentation":{"role":"article","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation","kind":"article","title":"Build the documentation","abstract":[{"text":"This documentation is created by DocC tool.","type":"text"}],"url":"\/documentation\/vernissageserver\/builddocumentation","type":"topic"},"https://www.swift.org/":{"type":"link","title":"Swift","identifier":"https:\/\/www.swift.org\/","titleInlineContent":[{"type":"text","text":"Swift"}],"url":"https:\/\/www.swift.org\/"},"https://hub.docker.com/r/minio/minio":{"title":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"link","identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","url":"https:\/\/hub.docker.com\/r\/minio\/minio","titleInlineContent":[{"type":"text","text":"https:\/\/hub.docker.com\/r\/minio\/minio"}]}}}