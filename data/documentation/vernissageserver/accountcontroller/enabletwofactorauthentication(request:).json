{"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"enableTwoFactorAuthentication","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor10HTTPStatusa","text":"HTTPStatus","kind":"typeIdentifier"}],"symbolKind":"method","modules":[{"name":"VernissageServer"}],"title":"enableTwoFactorAuthentication(request:)","externalID":"s:16VernissageServer17AccountControllerC29enableTwoFactorAuthentication7request8NIOHTTP118HTTPResponseStatusO5Vapor7RequestC_tYaKF"},"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/accountcontroller\/enabletwofactorauthentication(request:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController\/enableTwoFactorAuthentication(request:)"},"abstract":[{"text":"Enable two factor token authorization (TOTP).","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"enableTwoFactorAuthentication","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5Vapor10HTTPStatusa","text":"HTTPStatus","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The Vapor request to the endpoint."}],"type":"paragraph"}],"name":"request"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"HTTP status."}],"type":"paragraph"}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint will enable two factor authontication. Code generated by authenticator app have to be sent in the header: "},{"type":"codeVoice","code":"X-Auth-2FA"},{"text":".","type":"text"}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint URL: `\/api\/v1\/account\/enable-2fa"}]}],"name":"Important"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"CURL request:","type":"text"}]}],"type":"paragraph"},{"code":["curl \"https:\/\/example.com\/api\/v1\/account\/enable-2fa\" \\","-H \"Authorization: Bearer [ACCESS_TOKEN]\" \\","-H \"X-Auth-2FA: [CODE]\" \\","-X POST"],"syntax":"bash","type":"codeListing"},{"style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"EntityNotFoundError.userNotFound"},{"text":" if user not exists.","type":"text"}]}],"type":"aside"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"TwoFactorTokenError.cannotEncodeKey","type":"codeVoice"},{"type":"text","text":" if cannot encode key to base32 data."}]}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"TwoFactorTokenError.headerNotExists"},{"type":"text","text":" if header "},{"type":"codeVoice","code":"X-Auth-2FA"},{"type":"text","text":" with code not exists."}]}],"name":"Throws","type":"aside"},{"name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"EntityNotFoundError.twoFactorTokenNotFound","type":"codeVoice"},{"type":"text","text":" if two factor token not exists."}],"type":"paragraph"}],"style":"note"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"TwoFactorTokenError.codeNotValid"},{"text":" if code is not valid.","type":"text"}]}],"type":"aside","name":"Throws"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController"]]},"references":{"doc://VernissageServer/documentation/VernissageServer/AccountController/enableTwoFactorAuthentication(request:)":{"abstract":[{"text":"Enable two factor token authorization (TOTP).","type":"text"}],"role":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController\/enableTwoFactorAuthentication(request:)","title":"enableTwoFactorAuthentication(request:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enableTwoFactorAuthentication"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"HTTPStatus","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor10HTTPStatusa"}],"url":"\/documentation\/vernissageserver\/accountcontroller\/enabletwofactorauthentication(request:)","type":"topic"},"doc://VernissageServer/documentation/VernissageServer/AccountController":{"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"AccountController"}],"url":"\/documentation\/vernissageserver\/accountcontroller","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController","abstract":[{"text":"Controller for generic account operation.","type":"text"}],"title":"AccountController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AccountController","kind":"identifier"}]},"doc://VernissageServer/documentation/VernissageServer":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"url":"\/documentation\/vernissageserver","role":"collection","title":"VernissageServer"}}}