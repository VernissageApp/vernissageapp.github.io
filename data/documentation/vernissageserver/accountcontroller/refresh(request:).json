{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Refresh "},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" token by sending "},{"code":"refreshToken","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"isActive":true,"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RefreshTokenDto"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"User’s access tokens.","type":"text"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Endpoint will regenerate new "},{"type":"codeVoice","code":"accessToken"},{"text":" based on ","type":"text"},{"code":"refreshToken","type":"codeVoice"},{"type":"text","text":" which has been generated during the login process."},{"type":"text","text":" "},{"text":"This is the only endpoint to which the ","type":"text"},{"type":"codeVoice","code":"refreshToken"},{"text":" should be sent, only when the ","type":"text"},{"code":"accessToken","type":"codeVoice"},{"type":"text","text":" expires (or a moment before it expires)."},{"text":" ","type":"text"},{"text":"Refresh token can be send in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RefreshTokenDto","isActive":true},{"type":"text","text":" object or in the "},{"type":"codeVoice","code":"refresh-token"},{"type":"text","text":" cookie. When request doesn’t contain"},{"type":"text","text":" "},{"text":"refresh token (in body or cookie) ","type":"text"},{"code":"NoContent","type":"codeVoice"},{"type":"text","text":" response is produced."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint URL: "},{"type":"codeVoice","code":"\/api\/v1\/account\/refresh-token"},{"text":".","type":"text"}]}],"style":"important","type":"aside","name":"Important"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}]},{"type":"codeListing","syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/account\/refresh-token\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example request body:","type":"text"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"refreshToken\": \"8v4JbrTeboHsD5T24WdhkkHgVx3UQ2F2FQaZd3sT0\"","}"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body:"}]}],"type":"paragraph"},{"code":["{","    \"accessToken\": \"eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJyb2xlcyI6W10sInVzZXJOYW1lIjoibmlja2Z...\",","    \"refreshToken\": \"8v4JbrTeboHsD5T24WdhkkHgVx3UQ2F2FQaZd3sT0\"","}"],"syntax":"json","type":"codeListing"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EntityNotFoundError.refreshTokenNotFound"},{"type":"text","text":" if refresh token not exists."}],"type":"paragraph"}],"type":"aside"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RefreshTokenError.refreshTokenRevoked","type":"codeVoice"},{"type":"text","text":" if refresh token was revoked."}],"type":"paragraph"}],"style":"note","type":"aside"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RefreshTokenError.refreshTokenExpired"},{"type":"text","text":" if refresh token was expired."}]}],"name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LoginError.userAccountIsBlocked"},{"text":" if user account is blocked.","type":"text"}]}],"style":"note","name":"Throws","type":"aside"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/vernissageserver\/accountcontroller\/refresh(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController\/refresh(request:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController"]]},"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:16VernissageServer17AccountControllerC7refresh7request5Vapor8ResponseCAF7RequestC_tYaKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"refresh","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"modules":[{"name":"VernissageServer"}],"title":"refresh(request:)"},"references":{"doc://VernissageServer/documentation/VernissageServer/AccountController":{"kind":"symbol","abstract":[{"type":"text","text":"Controller for generic account operation."}],"role":"symbol","type":"topic","url":"\/documentation\/vernissageserver\/accountcontroller","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AccountController"}],"title":"AccountController","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController","navigatorTitle":[{"kind":"identifier","text":"AccountController"}]},"doc://VernissageServer/documentation/VernissageServer/RefreshTokenDto":{"title":"RefreshTokenDto","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/vernissageserver\/refreshtokendto","navigatorTitle":[{"kind":"identifier","text":"RefreshTokenDto"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RefreshTokenDto"}],"abstract":[],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RefreshTokenDto"},"doc://VernissageServer/documentation/VernissageServer/AccountController/refresh(request:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"refresh","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"role":"symbol","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController\/refresh(request:)","abstract":[{"text":"Refresh ","type":"text"},{"type":"codeVoice","code":"accessToken"},{"text":" token by sending ","type":"text"},{"type":"codeVoice","code":"refreshToken"},{"text":".","type":"text"}],"url":"\/documentation\/vernissageserver\/accountcontroller\/refresh(request:)","title":"refresh(request:)"},"doc://VernissageServer/documentation/VernissageServer":{"kind":"symbol","url":"\/documentation\/vernissageserver","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"role":"collection","type":"topic"}}}