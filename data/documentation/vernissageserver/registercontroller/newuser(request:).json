{"abstract":[{"text":"Register new user.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Request","preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier","text":"Response"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The Vapor request to the endpoint ","type":"text"},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"name":"request"}]},{"content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","type":"reference","isActive":true},{"type":"text","text":" with new generated "},{"type":"codeVoice","code":"id"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"text":" ","type":"text"},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"code":"reCaptcha","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"which will prevent bots from creating accounts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"type":"text","text":" "},{"text":"In the email there will be link with address to the client application (from ","type":"text"},{"code":"redirectBaseUrl","type":"codeVoice"},{"type":"text","text":"). Client application should"},{"text":" ","type":"text"},{"type":"text","text":"serve the page will can retrieve two parameters:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"token","type":"codeVoice"},{"type":"text","text":" - string, GUID"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"userId","type":"codeVoice"},{"text":" - new user identifier","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Client application have to read that parameters and use endpoint "},{"code":"POST \/api\/v1\/account\/email\/confirm","type":"codeVoice"},{"text":" to confirm the email.","type":"text"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"CURL request:"}]}],"type":"paragraph"},{"code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing","syntax":"bash"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example request body:","type":"text"}]}],"type":"paragraph"},{"syntax":"json","type":"codeListing","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (200 OK):","type":"text"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body (field validation):"}],"type":"strong"}],"type":"paragraph"},{"syntax":"json","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"],"type":"codeListing"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (business logic validation):"}]}],"type":"paragraph"},{"type":"codeListing","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"syntax":"json"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Validation.validationError"},{"text":" if validation errors occurs.","type":"text"}],"type":"paragraph"}],"name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"type":"text","text":" if security token is mandatory (it should be provided from Google reCaptcha)."}]}],"type":"aside","name":"Throws","style":"note"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"type":"text","text":" if security token is invalid (Google reCaptcha API returned that information)."}]}],"style":"note","name":"Throws"},{"name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"text":" if user with provided user name already exists in the system.","type":"text"}],"type":"paragraph"}],"style":"note"},{"type":"aside","style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"type":"text","text":" if email is already connected with other account."}],"type":"paragraph"}]},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmail"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}]}],"type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}]}],"type":"aside","style":"note","name":"Throws"},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.registrationIsDisabled"},{"type":"text","text":"if registration is disabled."}]}]},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userHaveToAcceptAgreement"},{"text":" if user have to accept agreement.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"text":" if reason is mandatory when only registration by approval is enabled.","type":"text"}]}],"type":"aside","style":"note","name":"Throws"},{"type":"aside","name":"Throws","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenIsInvalid","type":"codeVoice"},{"type":"text","text":" if invitation token is invalid."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"text":" if invitation token has been used.","type":"text"}]}],"type":"aside","name":"Throws","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userIdNotExists","type":"codeVoice"},{"text":" if user Id not exists. Probably saving of the user entity failed.","type":"text"}],"type":"paragraph"}],"name":"Throws","type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"sections":[],"metadata":{"title":"newUser(request:)","externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","modules":[{"name":"VernissageServer"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}]},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"abstract":[{"type":"text","text":"Register new user."}],"url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","title":"newUser(request:)","type":"topic","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"navigatorTitle":[{"text":"RegisterController","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"RegisterController","kind":"identifier"}],"abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","url":"\/documentation\/vernissageserver\/registercontroller","role":"symbol","kind":"symbol","title":"RegisterController"},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","url":"\/documentation\/vernissageserver\/userdto","kind":"symbol","abstract":[],"role":"symbol","title":"UserDto","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"UserDto"}],"navigatorTitle":[{"kind":"identifier","text":"UserDto"}]},"doc://VernissageServer/documentation/VernissageServer":{"role":"collection","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","type":"topic","url":"\/documentation\/vernissageserver","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}]},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","url":"\/documentation\/vernissageserver\/registeruserdto","abstract":[],"kind":"symbol","role":"symbol","type":"topic","title":"RegisterUserDto","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterUserDto"}],"navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}]}}}