{"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"text":"Vernissage API server is created in ","type":"text"},{"identifier":"https:\/\/www.swift.org\/","type":"reference","isActive":true},{"type":"text","text":" language with "},{"identifier":"https:\/\/vapor.codes","isActive":true,"type":"reference"},{"text":" framework.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"We can run it in all operating systems supporting "},{"code":"Swift","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Vapor","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"anchor":"Prerequisites","text":"Prerequisites","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Install the ","type":"text"},{"code":"GD","type":"codeVoice"},{"type":"text","text":" library on your computer. If you’re using macOS, install Homebrew then run the command "},{"code":"brew install gd","type":"codeVoice"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"If you’re using Linux, run ","type":"text"},{"type":"codeVoice","code":"apt-get libgd-dev"},{"text":" as root.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Running the application requires installing ","type":"text"},{"identifier":"https:\/\/www.swift.org\/install\/","isActive":true,"type":"reference"},{"type":"text","text":"."}]},{"anchor":"Getting-started","type":"heading","text":"Getting started","level":2},{"inlineContent":[{"type":"text","text":"Below are all the commands necessary to run the API part of the Vernissage."}],"type":"paragraph"},{"syntax":"bash","code":["$ git clone https:\/\/github.com\/VernissageApp\/VernissageServer.git","$ cd VernissageServer","$ swift run"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"API should start. Configuration will be read from "},{"type":"codeVoice","code":"appsettings.json"},{"type":"text","text":" file. SQLite database will be used. You can sign in using default "},{"type":"codeVoice","code":"admin"},{"text":" account (with password: ","type":"text"},{"type":"codeVoice","code":"admin"},{"type":"text","text":"). For example:"}]},{"type":"codeListing","code":["$ curl --location 'http:\/\/localhost:8080\/api\/v1\/account\/login' \\","--header 'Accept: application\/json' \\","--header 'Content-Type: application\/json' \\","--data-raw '{","    \"userNameOrEmail\": \"admin\",","    \"password\": \"admin\"","}'"],"syntax":"bash"},{"inlineContent":[{"text":"Request will return JSON:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpZCI6IjcyNTA3Mjk3NzcyNjEyMzYyMjUiLCJhcHBsaWNhdGlvbiI6IlZlcm5pc3NhZ2UgMS4wLjAtYWxwaGExIiwicm9sZXMiOlsiYWRtaW5pc3RyYXRvciJdLCJ1c2VyTmFtZSI6ImFkbWluIiwibmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6ImFkbWluQGxvY2FsaG9zdCIsImV4cCI6MTcwNjE2OTE1Mi4zODk5NTMxfQ.Z87v9HvfBM6fn6F8fu06ToPShT9F55G74wL676SLmSdLMzyz3ykfsmS-GDNIqfUatfwdBvSxQgpjUO6IzYAuQKZ925tdN8DwN6kVAEa2mJLlntc66qAkQSiPeXYEl29Cgbg6TuAvxghWVO5PVliMG8mxO7uwSFDN095mNxbee8x8P-ogL176vXBhJ_rWcm1fY7_n-qSn6XN2GbgjiywnOZfvHNNtLvbikcpJeIAzHH-BlXolWsUauuZGZBeFv5TuBr13r5PZfVar0FH9Uwj39w5DV3jxlwRPyejux4LL96dvrEsP4Btx88c3SSLyxm1REfRR_wKoUoXK8iVqfBU6TQ\",","    \"refreshToken\": \"U8zMqw1tGHqIk0cUXmvAEcwYIpsQlwWUxHa0fnXbu\"","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After successfully sign in you can use other endpoints (with "},{"code":"Authentication: Bearer","type":"codeVoice"},{"type":"text","text":" header)."}]},{"type":"heading","text":"Custom configuration","level":2,"anchor":"Custom-configuration"},{"inlineContent":[{"text":"In local development environment you can create ","type":"text"},{"type":"codeVoice","code":"appsettings.local.json"},{"text":" file (near ","type":"text"},{"type":"codeVoice","code":"appsettings.json"},{"text":" file). This file can look like that:","type":"text"}],"type":"paragraph"},{"syntax":"json","code":["{","    \"vernissage\": {","        \"baseAddress\": \"http:\/\/localhost:8080\",","        \"connectionString\": \"postgres:\/\/postgres:secretpass@localhost:5432\/postgres\",","        \"queueUrl\": \"redis:\/\/127.0.0.1:6379\",","        \"s3Address\": \"https:\/\/s3.eu-central-1.amazonaws.com\",","        \"s3Region\": \"eu-central-1\",","        \"s3Bucket\": \"your-bucket-test\",","        \"s3AccessKeyId\": \"ASDA8AS8HSDSU\",","        \"s3SecretAccessKey\": \"DSfEaBUYIhoouHhigygGtldDpLesmXCz10ICe0F\"","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here you can configure three external resources:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"connectionString"},{"type":"text","text":" - you can use SQLite or Postgres database connection string"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"queueUrl"},{"text":" - URL to Redis in memory data store (used as cache and queue by Vernissage)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"s3*"},{"type":"text","text":" - configuration of S3 storage. Here you can use any external S3 compatible cloud storage or "},{"identifier":"https:\/\/min.io","type":"reference","isActive":true},{"type":"text","text":" docker ("},{"type":"reference","identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","isActive":true},{"text":")","type":"text"}],"type":"paragraph"}]}]},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"If the ","type":"text"},{"code":"s3Region","type":"codeVoice"},{"type":"text","text":" variable is set, it causes the other settings to be overwritten and use Amazon AWS S3."}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In production environment you can override configuration parameters by environment variables. For example if you want to set custom "},{"type":"codeVoice","code":"baseAddress"},{"type":"text","text":" you have to define variable: "},{"code":"VERNISSAGE_BASEADDRESS","type":"codeVoice"},{"type":"text","text":", etc."}]},{"type":"heading","text":"File logger","level":2,"anchor":"File-logger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, the system displays logs only on the system console. If logging is also to be done to a file we need to set a system environment variable:"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"VERNISSAGE_LOG_PATH"},{"type":"text","text":" - file path e.g.: "},{"type":"codeVoice","code":"logs\/vernissage.log"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"We can also set the default login level by setting a system environment variable:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"LOG_LEVEL","type":"codeVoice"},{"type":"text","text":" - more information about log levels you can find "},{"identifier":"https:\/\/docs.vapor.codes\/basics\/logging\/","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]}]},{"anchor":"Sentry","level":2,"text":"Sentry","type":"heading"},{"inlineContent":[{"text":"It is possible to send application errors to the Sentry central logging system. To do this, set appropriate environment variables:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"SENTRY_DSN"},{"type":"text","text":" - for writing Vernissage Server (API) logs"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"SENTRY_DSN_WEB"},{"text":" - for writing Vernissage Web logs","type":"text"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Docker","text":"Docker"},{"type":"paragraph","inlineContent":[{"text":"In production environments, it is best to use a ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server"},{"type":"text","text":"."}]}]}],"sections":[],"variants":[{"paths":["\/documentation\/vernissageserver\/hostvernissageserver"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer"]]},"metadata":{"images":[{"identifier":"host-server-card.jpg","type":"card"}],"modules":[{"name":"VernissageServer"}],"title":"Host Vernissage Server (API)","role":"article","roleHeading":"Article"},"kind":"article","identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"seeAlsoSections":[{"identifiers":["doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"],"generated":true,"title":"Essentials"}],"references":{"https://docs.vapor.codes/basics/logging/":{"title":"here","type":"link","titleInlineContent":[{"text":"here","type":"text"}],"url":"https:\/\/docs.vapor.codes\/basics\/logging\/","identifier":"https:\/\/docs.vapor.codes\/basics\/logging\/"},"doc://VernissageServer/documentation/VernissageServer":{"role":"collection","title":"VernissageServer","url":"\/documentation\/vernissageserver","kind":"symbol","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer"},"https://vapor.codes":{"titleInlineContent":[{"text":"Vapor","type":"text"}],"identifier":"https:\/\/vapor.codes","url":"https:\/\/vapor.codes","title":"Vapor","type":"link"},"https://min.io":{"title":"minio","type":"link","titleInlineContent":[{"text":"minio","type":"text"}],"url":"https:\/\/min.io","identifier":"https:\/\/min.io"},"https://hub.docker.com/r/minio/minio":{"titleInlineContent":[{"text":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"text"}],"identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","url":"https:\/\/hub.docker.com\/r\/minio\/minio","title":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"link"},"doc://VernissageServer/documentation/VernissageServer/BuildDocumentation":{"type":"topic","abstract":[{"text":"This documentation is created by DocC tool.","type":"text"}],"url":"\/documentation\/vernissageserver\/builddocumentation","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation","role":"article","kind":"article","title":"Build the documentation"},"https://www.swift.org/install/":{"title":"Swift","type":"link","titleInlineContent":[{"text":"Swift","type":"text"}],"url":"https:\/\/www.swift.org\/install\/","identifier":"https:\/\/www.swift.org\/install\/"},"doc://VernissageServer/documentation/VernissageServer/HostVernissageWeb":{"title":"Host Vernissage WEB","kind":"article","images":[{"type":"card","identifier":"host-web-card.jpg"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","type":"topic","role":"article","url":"\/documentation\/vernissageserver\/hostvernissageweb","abstract":[{"text":"Application which is Web component for Vernissage photos sharing platform.","type":"text"}]},"https://hub.docker.com/repository/docker/mczachurski/vernissage-server":{"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","titleInlineContent":[{"text":"docker image","type":"text"}],"type":"link","url":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","title":"docker image"},"https://www.swift.org/":{"title":"Swift","type":"link","titleInlineContent":[{"text":"Swift","type":"text"}],"url":"https:\/\/www.swift.org\/","identifier":"https:\/\/www.swift.org\/"},"host-web-card.jpg":{"identifier":"host-web-card.jpg","type":"image","variants":[{"traits":["2x","light"],"url":"\/images\/host-web-card@2x.jpg"}],"alt":"The profile image for web documentation."},"host-server-card.jpg":{"variants":[{"url":"\/images\/host-server-card@2x.jpg","traits":["2x","light"]}],"type":"image","alt":null,"identifier":"host-server-card.jpg"}}}