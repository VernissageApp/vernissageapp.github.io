{"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","metadata":{"modules":[{"name":"VernissageServer"}],"externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","title":"newUser(request:)","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}],"role":"symbol"},"abstract":[{"type":"text","text":"Register new user."}],"variants":[{"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true},{"text":".","type":"text"}]}],"name":"request"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"Entity ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto"},{"text":" with new generated ","type":"text"},{"type":"codeVoice","code":"id"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"text":" ","type":"text"},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"code":"reCaptcha","type":"codeVoice"},{"text":",","type":"text"},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"text":"In the email there will be link with address to the client application (from ","type":"text"},{"type":"codeVoice","code":"redirectBaseUrl"},{"text":"). Client application should","type":"text"},{"type":"text","text":" "},{"text":"serve the page will can retrieve two parameters:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"token","type":"codeVoice"},{"type":"text","text":" - string, GUID"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"userId"},{"type":"text","text":" - new user identifier"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Client application have to read that parameters and use endpoint ","type":"text"},{"code":"POST \/api\/v1\/account\/email\/confirm","type":"codeVoice"},{"text":" to confirm the email.","type":"text"}]},{"type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint URL: "},{"type":"codeVoice","code":"\/api\/v1\/account\/register"},{"type":"text","text":"."}]}],"name":"Important"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"CURL request:"}],"type":"strong"}]},{"code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing","syntax":"bash"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example request body:"}],"type":"strong"}]},{"syntax":"json","type":"codeListing","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body (200 OK):"}],"type":"strong"}],"type":"paragraph"},{"code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example response body (field validation):","type":"text"}],"type":"strong"}]},{"syntax":"json","type":"codeListing","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example response body (business logic validation):","type":"text"}],"type":"strong"}]},{"syntax":"json","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"type":"codeListing"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Validation.validationError"},{"type":"text","text":" if validation errors occurs."}]}]},{"style":"note","type":"aside","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"type":"text","text":" if security token is mandatory (it should be provided from Google reCaptcha)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}]}],"type":"aside","name":"Throws","style":"note"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userNameIsAlreadyTaken","type":"codeVoice"},{"text":" if user with provided user name already exists in the system.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Throws","style":"note"},{"style":"note","name":"Throws","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.emailIsAlreadyConnected","type":"codeVoice"},{"type":"text","text":" if email is already connected with other account."}],"type":"paragraph"}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.missingEmail","type":"codeVoice"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}]}],"name":"Throws","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.missingEmailConfirmationGuid","type":"codeVoice"},{"type":"text","text":"if email confirmation guid has not been generated."}],"type":"paragraph"}],"style":"note","type":"aside","name":"Throws"},{"name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.registrationIsDisabled"},{"text":"if registration is disabled.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userHaveToAcceptAgreement","type":"codeVoice"},{"text":" if user have to accept agreement.","type":"text"}]}],"name":"Throws","type":"aside","style":"note"},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.reasonIsMandatory","type":"codeVoice"},{"type":"text","text":" if reason is mandatory when only registration by approval is enabled."}],"type":"paragraph"}],"name":"Throws","type":"aside"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.invitationTokenIsInvalid","type":"codeVoice"},{"text":" if invitation token is invalid.","type":"text"}],"type":"paragraph"}],"name":"Throws"},{"name":"Throws","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"type":"text","text":" if invitation token has been used."}],"type":"paragraph"}]},{"name":"Throws","style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"text":" if user Id not exists. Probably saving of the user entity failed.","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.disposableEmailCannotBeUsed","type":"codeVoice"},{"type":"text","text":" if disposabled email has been used."}]}]}]}],"references":{"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"title":"RegisterController","kind":"symbol","role":"symbol","abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterController"}],"type":"topic","url":"\/documentation\/vernissageserver\/registercontroller","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","navigatorTitle":[{"text":"RegisterController","kind":"identifier"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","abstract":[{"text":"Register new user.","type":"text"}],"kind":"symbol","type":"topic","title":"newUser(request:)","url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}]},"doc://VernissageServer/documentation/VernissageServer":{"role":"collection","title":"VernissageServer","url":"\/documentation\/vernissageserver","kind":"symbol","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"abstract":[],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}],"type":"topic","title":"RegisterUserDto","url":"\/documentation\/vernissageserver\/registeruserdto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterUserDto"}]},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"abstract":[],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UserDto"}],"type":"topic","title":"UserDto","url":"\/documentation\/vernissageserver\/userdto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UserDto","kind":"identifier"}]}}}