{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"abstract":[{"type":"text","text":"Register new user."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"request","content":[{"inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","isActive":true,"type":"reference"},{"type":"text","text":" with new generated "},{"type":"codeVoice","code":"id"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"text":" ","type":"text"},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"code":"reCaptcha","type":"codeVoice"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"which will prevent bots from creating accounts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"type":"text","text":"In the email there will be link with address to the client application (from "},{"type":"codeVoice","code":"redirectBaseUrl"},{"type":"text","text":"). Client application should"},{"type":"text","text":" "},{"type":"text","text":"serve the page will can retrieve two parameters:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"token","type":"codeVoice"},{"text":" - string, GUID","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"userId"},{"type":"text","text":" - new user identifier"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Client application have to read that parameters and use endpoint ","type":"text"},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}]},{"name":"Important","type":"aside","style":"important","content":[{"inlineContent":[{"type":"text","text":"Endpoint URL: "},{"type":"codeVoice","code":"\/api\/v1\/account\/register"},{"text":".","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"CURL request:"}]}]},{"type":"codeListing","syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"]},{"inlineContent":[{"inlineContent":[{"text":"Example request body:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (200 OK):","type":"text"}]}]},{"type":"codeListing","syntax":"json","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example response body (field validation):","type":"text"}],"type":"strong"}]},{"code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"],"syntax":"json","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (business logic validation):","type":"text"}]}]},{"syntax":"json","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"type":"codeListing"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Validation.validationError"},{"text":" if validation errors occurs.","type":"text"}]}]},{"type":"aside","style":"note","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}],"type":"paragraph"}]},{"name":"Throws","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"type":"text","text":" if user with provided user name already exists in the system."}],"type":"paragraph"}],"style":"note","name":"Throws","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"text":" if email is already connected with other account.","type":"text"}]}],"style":"note","type":"aside","name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.missingEmail","type":"codeVoice"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}]}],"style":"note","name":"Throws","type":"aside"},{"name":"Throws","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}],"type":"paragraph"}],"style":"note"},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.registrationIsDisabled"},{"type":"text","text":"if registration is disabled."}]}],"style":"note","type":"aside"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userHaveToAcceptAgreement"},{"type":"text","text":" if user have to accept agreement."}]}]},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"type":"text","text":" if reason is mandatory when only registration by approval is enabled."}]}],"type":"aside","style":"note"},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"text":" if invitation token is invalid.","type":"text"}]}],"style":"note"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"type":"text","text":" if invitation token has been used."}]}],"style":"note","name":"Throws","type":"aside"},{"name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"type":"text","text":" if user Id not exists. Probably saving of the user entity failed."}],"type":"paragraph"}],"type":"aside","style":"note"},{"style":"note","name":"Throws","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.disposableEmailCannotBeUsed"},{"type":"text","text":" if disposabled email has been used."}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"symbolKind":"method","modules":[{"name":"VernissageServer"}],"externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","title":"newUser(request:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}],"role":"symbol"},"kind":"symbol","references":{"doc://VernissageServer/documentation/VernissageServer/UserDto":{"title":"UserDto","url":"\/documentation\/vernissageserver\/userdto","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"UserDto","kind":"identifier"}],"type":"topic","abstract":[],"role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UserDto"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto"},"doc://VernissageServer/documentation/VernissageServer":{"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","type":"topic","kind":"symbol","url":"\/documentation\/vernissageserver","role":"collection"},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterController"}],"type":"topic","abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"navigatorTitle":[{"text":"RegisterController","kind":"identifier"}],"role":"symbol","title":"RegisterController","kind":"symbol","url":"\/documentation\/vernissageserver\/registercontroller","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterUserDto"}],"navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}],"url":"\/documentation\/vernissageserver\/registeruserdto","abstract":[],"title":"RegisterUserDto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto"},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"type":"topic","title":"newUser(request:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"abstract":[{"text":"Register new user.","type":"text"}],"kind":"symbol","url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","role":"symbol"}}}