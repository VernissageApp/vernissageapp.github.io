{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","externalID":"s:16VernissageServer18RegisterControllerV7newUser7request5Vapor8ResponseCAF7RequestC_tYaYbKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"symbolKind":"method","modules":[{"name":"VernissageServer"}],"title":"newUser(request:)"},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@Sendable"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Request","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"text":"The Vapor request to the endpoint ","type":"text"},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Entity "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","isActive":true},{"text":" with new generated ","type":"text"},{"code":"id","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"type":"text","text":" "},{"text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure ","type":"text"},{"type":"codeVoice","code":"reCaptcha"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"which will prevent bots from creating accounts.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"type":"text","text":"In the email there will be link with address to the client application (from "},{"type":"codeVoice","code":"redirectBaseUrl"},{"text":"). Client application should","type":"text"},{"type":"text","text":" "},{"text":"serve the page will can retrieve two parameters:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"token"},{"text":" - string, GUID","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"userId"},{"text":" - new user identifier","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Client application have to read that parameters and use endpoint ","type":"text"},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}]},{"content":[{"inlineContent":[{"type":"text","text":"Endpoint URL: "},{"code":"\/api\/v1\/account\/register","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"Important","type":"aside","style":"important"},{"inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing","syntax":"bash"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example request body:"}],"type":"strong"}]},{"code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"type":"codeListing","syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (200 OK):"}]}]},{"code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"],"type":"codeListing","syntax":"json"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body (field validation):"}],"type":"strong"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example response body (business logic validation):","type":"text"}],"type":"strong"}]},{"type":"codeListing","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"syntax":"json"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"Validation.validationError","type":"codeVoice"},{"type":"text","text":" if validation errors occurs."}]}]},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.securityTokenIsMandatory","type":"codeVoice"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"text":" if security token is invalid (Google reCaptcha API returned that information).","type":"text"}]}],"style":"note","name":"Throws","type":"aside"},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"text":" if user with provided user name already exists in the system.","type":"text"}]}],"type":"aside"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"type":"text","text":" if email is already connected with other account."}]}]},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmail"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}],"type":"paragraph"}],"name":"Throws","style":"note","type":"aside"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}]}],"style":"note","name":"Throws"},{"style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"text":"if registration is disabled.","type":"text"}],"type":"paragraph"}],"name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.userHaveToAcceptAgreement","type":"codeVoice"},{"text":" if user have to accept agreement.","type":"text"}]}],"style":"note","name":"Throws","type":"aside"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"type":"text","text":" if reason is mandatory when only registration by approval is enabled."}]}],"name":"Throws"},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"text":" if invitation token is invalid.","type":"text"}],"type":"paragraph"}],"name":"Throws"},{"style":"note","name":"Throws","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"type":"text","text":" if invitation token has been used."}],"type":"paragraph"}],"type":"aside"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"type":"text","text":" if user Id not exists. Probably saving of the user entity failed."}]}]},{"name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.disposableEmailCannotBeUsed","type":"codeVoice"},{"text":" if disposabled email has been used.","type":"text"}]}],"style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"abstract":[{"type":"text","text":"Register new user."}],"references":{"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"url":"\/documentation\/vernissageserver\/registercontroller","abstract":[{"type":"text","text":"Controller for adding new user into the system."}],"title":"RegisterController","navigatorTitle":[{"text":"RegisterController","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegisterController","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","role":"symbol","abstract":[{"type":"text","text":"Register new user."}],"url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","type":"topic","title":"newUser(request:)"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"navigatorTitle":[{"text":"RegisterUserDto","kind":"identifier"}],"type":"topic","abstract":[],"kind":"symbol","title":"RegisterUserDto","url":"\/documentation\/vernissageserver\/registeruserdto","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegisterUserDto","kind":"identifier"}],"role":"symbol"},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"title":"UserDto","role":"symbol","url":"\/documentation\/vernissageserver\/userdto","kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UserDto","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"UserDto"}],"abstract":[],"type":"topic"},"doc://VernissageServer/documentation/VernissageServer":{"url":"\/documentation\/vernissageserver","role":"collection","title":"VernissageServer","abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","kind":"symbol"}}}