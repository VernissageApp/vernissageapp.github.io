{"metadata":{"symbolKind":"method","externalID":"s:16VernissageServer18RegisterControllerV7newUser7request5Vapor8ResponseCAF7RequestC_tYaYbKF","modules":[{"name":"VernissageServer"}],"role":"symbol","title":"newUser(request:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"newUser","kind":"identifier"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}],"roleHeading":"Instance Method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"abstract":[{"text":"Register new user.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@Sendable"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"kind":"text","text":"("},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"text":"Response","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC"}]}]},{"kind":"parameters","parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","isActive":true},{"text":".","type":"text"}]}]}]},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"isActive":true,"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto"},{"text":" with new generated ","type":"text"},{"type":"codeVoice","code":"id"},{"text":".","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,"},{"text":" ","type":"text"},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"type":"codeVoice","code":"reCaptcha"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}]},{"inlineContent":[{"type":"text","text":"During account creation process server will send to the user inbox email with information how to confirm his email address."},{"text":" ","type":"text"},{"text":"In the email there will be link with address to the client application (from ","type":"text"},{"code":"redirectBaseUrl","type":"codeVoice"},{"type":"text","text":"). Client application should"},{"text":" ","type":"text"},{"text":"serve the page will can retrieve two parameters:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"token"},{"text":" - string, GUID","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"userId","type":"codeVoice"},{"type":"text","text":" - new user identifier"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Client application have to read that parameters and use endpoint "},{"code":"POST \/api\/v1\/account\/email\/confirm","type":"codeVoice"},{"type":"text","text":" to confirm the email."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint URL: "},{"code":"\/api\/v1\/account\/register","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"important","name":"Important","type":"aside"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}]},{"type":"codeListing","code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"syntax":"bash"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example request body:"}]}],"type":"paragraph"},{"type":"codeListing","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"syntax":"json"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (200 OK):"}]}]},{"type":"codeListing","syntax":"json","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (field validation):"}]}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"inlineContent":[{"inlineContent":[{"text":"Example response body (business logic validation):","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"],"syntax":"json","type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Validation.validationError"},{"text":" if validation errors occurs.","type":"text"}]}],"name":"Throws","style":"note","type":"aside"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"code":"RegisterError.securityTokenIsMandatory","type":"codeVoice"},{"text":" if security token is mandatory (it should be provided from Google reCaptcha).","type":"text"}],"type":"paragraph"}],"style":"note","name":"Throws"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"type":"text","text":" if security token is invalid (Google reCaptcha API returned that information)."}],"type":"paragraph"}],"style":"note","name":"Throws"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userNameIsAlreadyTaken"},{"text":" if user with provided user name already exists in the system.","type":"text"}]}],"name":"Throws"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.emailIsAlreadyConnected","type":"codeVoice"},{"text":" if email is already connected with other account.","type":"text"}]}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.missingEmail","type":"codeVoice"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}]}],"style":"note","name":"Throws"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}]}]},{"style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.registrationIsDisabled"},{"text":"if registration is disabled.","type":"text"}],"type":"paragraph"}],"type":"aside","name":"Throws"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userHaveToAcceptAgreement","type":"codeVoice"},{"text":" if user have to accept agreement.","type":"text"}]}],"type":"aside","name":"Throws"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.reasonIsMandatory","type":"codeVoice"},{"text":" if reason is mandatory when only registration by approval is enabled.","type":"text"}]}],"type":"aside","style":"note","name":"Throws"},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.invitationTokenIsInvalid"},{"type":"text","text":" if invitation token is invalid."}]}],"type":"aside","style":"note"},{"style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"text":" if invitation token has been used.","type":"text"}]}],"name":"Throws"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.userIdNotExists","type":"codeVoice"},{"type":"text","text":" if user Id not exists. Probably saving of the user entity failed."}]}]},{"name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.disposableEmailCannotBeUsed","type":"codeVoice"},{"text":" if disposabled email has been used.","type":"text"}]}],"type":"aside"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://VernissageServer/documentation/VernissageServer":{"url":"\/documentation\/vernissageserver","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","role":"collection","title":"VernissageServer","type":"topic","kind":"symbol","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}]},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"type":"topic","abstract":[],"navigatorTitle":[{"text":"UserDto","kind":"identifier"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserDto"}],"url":"\/documentation\/vernissageserver\/userdto","title":"UserDto","kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","url":"\/documentation\/vernissageserver\/registercontroller","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RegisterController"}],"abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"title":"RegisterController","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"RegisterController","kind":"identifier"}]},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","type":"topic","abstract":[{"text":"Register new user.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Request","preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"title":"newUser(request:)"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"abstract":[],"kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"RegisterUserDto","kind":"identifier"}],"url":"\/documentation\/vernissageserver\/registeruserdto","type":"topic","title":"RegisterUserDto","navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}]}}}