{"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"],"title":"Essentials"}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vernissageserver\/hostvernissageserver"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer"]]},"sections":[],"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"metadata":{"images":[{"type":"card","identifier":"host-server-card.jpg"}],"modules":[{"name":"VernissageServer"}],"roleHeading":"Article","role":"article","title":"Host Vernissage API"},"primaryContentSections":[{"content":[{"level":2,"anchor":"Overview","text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Vernissage API server is created in ","type":"text"},{"identifier":"https:\/\/www.swift.org\/","isActive":true,"type":"reference"},{"type":"text","text":" language with "},{"type":"reference","identifier":"https:\/\/vapor.codes","isActive":true},{"type":"text","text":" framework."},{"text":" ","type":"text"},{"type":"text","text":"We can run it in all operating systems supporting "},{"type":"codeVoice","code":"Swift"},{"type":"text","text":" and "},{"code":"Vapor","type":"codeVoice"},{"type":"text","text":"."}]},{"level":2,"type":"heading","anchor":"Prerequisites","text":"Prerequisites"},{"inlineContent":[{"text":"Install the ","type":"text"},{"code":"GD","type":"codeVoice"},{"type":"text","text":" library on your computer. If you’re using macOS, install Homebrew then run the command "},{"type":"codeVoice","code":"brew install gd"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"If you’re using Linux, run ","type":"text"},{"code":"apt-get libgd-dev","type":"codeVoice"},{"type":"text","text":" as root."}],"type":"paragraph"},{"text":"Getting started","anchor":"Getting-started","level":2,"type":"heading"},{"inlineContent":[{"text":"After clonning the reposity you can easly run the API. Go to main repository folder and run the command:","type":"text"}],"type":"paragraph"},{"code":["$ swift run"],"syntax":"bash","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"API should start. Configuration will be read from ","type":"text"},{"code":"appsettings.json","type":"codeVoice"},{"text":" file. SQLite database will be used. You can sign in using default ","type":"text"},{"code":"admin","type":"codeVoice"},{"type":"text","text":" account (with password: "},{"code":"admin","type":"codeVoice"},{"type":"text","text":"). For example:"}]},{"type":"codeListing","syntax":"bash","code":["$ curl --location 'http:\/\/localhost:8080\/api\/v1\/account\/login' \\","--header 'Accept: application\/json' \\","--header 'Content-Type: application\/json' \\","--data-raw '{","    \"userNameOrEmail\": \"admin\",","    \"password\": \"admin\"","}'"]},{"inlineContent":[{"type":"text","text":"Request will return JSON:"}],"type":"paragraph"},{"syntax":"json","code":["{","    \"accessToken\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzUxMiJ9.eyJpZCI6IjcyNTA3Mjk3NzcyNjEyMzYyMjUiLCJhcHBsaWNhdGlvbiI6IlZlcm5pc3NhZ2UgMS4wLjAtYWxwaGExIiwicm9sZXMiOlsiYWRtaW5pc3RyYXRvciJdLCJ1c2VyTmFtZSI6ImFkbWluIiwibmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6ImFkbWluQGxvY2FsaG9zdCIsImV4cCI6MTcwNjE2OTE1Mi4zODk5NTMxfQ.Z87v9HvfBM6fn6F8fu06ToPShT9F55G74wL676SLmSdLMzyz3ykfsmS-GDNIqfUatfwdBvSxQgpjUO6IzYAuQKZ925tdN8DwN6kVAEa2mJLlntc66qAkQSiPeXYEl29Cgbg6TuAvxghWVO5PVliMG8mxO7uwSFDN095mNxbee8x8P-ogL176vXBhJ_rWcm1fY7_n-qSn6XN2GbgjiywnOZfvHNNtLvbikcpJeIAzHH-BlXolWsUauuZGZBeFv5TuBr13r5PZfVar0FH9Uwj39w5DV3jxlwRPyejux4LL96dvrEsP4Btx88c3SSLyxm1REfRR_wKoUoXK8iVqfBU6TQ\",","    \"refreshToken\": \"U8zMqw1tGHqIk0cUXmvAEcwYIpsQlwWUxHa0fnXbu\"","}"],"type":"codeListing"},{"inlineContent":[{"text":"After successfully sign in you can use other endpoints (with ","type":"text"},{"type":"codeVoice","code":"Authentication: Bearer"},{"text":" header).","type":"text"}],"type":"paragraph"},{"anchor":"Custom-configuration","type":"heading","text":"Custom configuration","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"In local development environment you can create "},{"type":"codeVoice","code":"appsettings.local.json"},{"type":"text","text":" file (near "},{"code":"appsettings.json","type":"codeVoice"},{"type":"text","text":" file). This file can look like that:"}]},{"syntax":"json","type":"codeListing","code":["{","    \"vernissage\": {","        \"baseAddress\": \"http:\/\/localhost:8080\",","        \"connectionString\": \"postgres:\/\/postgres:secretpass@localhost:5432\/postgres\",","        \"queueUrl\": \"redis:\/\/127.0.0.1:6379\",","        \"s3Address\": \"https:\/\/s3.eu-central-1.amazonaws.com\",","        \"s3Region\": \"eu-central-1\",","        \"s3Bucket\": \"your-bucket-test\",","        \"s3AccessKeyId\": \"ASDA8AS8HSDSU\",","        \"s3SecretAccessKey\": \"DSfEaBUYIhoouHhigygGtldDpLesmXCz10ICe0F\"","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here you can configure three external resources:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"connectionString","type":"codeVoice"},{"text":" - you can use SQLite or Postgres database connection string","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"queueUrl","type":"codeVoice"},{"type":"text","text":" - URL to Redis in memory data store (used as cache and queue by Vernissage)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"s3*"},{"text":" - configuration of S3 storage. Here you can use any external S3 compatible cloud storage or ","type":"text"},{"identifier":"https:\/\/min.io","isActive":true,"type":"reference"},{"type":"text","text":" docker ("},{"identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","isActive":true,"type":"reference"},{"type":"text","text":")"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In production environment you can override configuration parameters by environment variables. For example if you want to set custom "},{"code":"baseAddress","type":"codeVoice"},{"type":"text","text":" you have to define variable: "},{"code":"VERNISSAGE_BASEADDRESS","type":"codeVoice"},{"type":"text","text":", etc."}]},{"text":"Docker","anchor":"Docker","type":"heading","level":2},{"inlineContent":[{"text":"In production environments, it is best to use a ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://VernissageServer/documentation/VernissageServer":{"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"title":"VernissageServer","url":"\/documentation\/vernissageserver","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","kind":"symbol","type":"topic","role":"collection"},"https://hub.docker.com/repository/docker/mczachurski/vernissage-server":{"identifier":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","url":"https:\/\/hub.docker.com\/repository\/docker\/mczachurski\/vernissage-server","type":"link","title":"docker image","titleInlineContent":[{"type":"text","text":"docker image"}]},"https://www.swift.org/":{"type":"link","titleInlineContent":[{"type":"text","text":"Swift"}],"url":"https:\/\/www.swift.org\/","identifier":"https:\/\/www.swift.org\/","title":"Swift"},"doc://VernissageServer/documentation/VernissageServer/HostVernissageWeb":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","title":"Host Vernissage WEB","abstract":[{"type":"text","text":"Application which is Web component for Vernissage photos sharing platform."}],"url":"\/documentation\/vernissageserver\/hostvernissageweb","type":"topic","role":"article","images":[{"type":"card","identifier":"host-web-card.jpg"}],"kind":"article"},"host-server-card.jpg":{"identifier":"host-server-card.jpg","variants":[{"url":"\/images\/host-server-card@2x.jpg","traits":["2x","light"]}],"type":"image","alt":null},"doc://VernissageServer/documentation/VernissageServer/BuildDocumentation":{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation","title":"Build the documentation","abstract":[{"text":"This documentation is created by DocC tool.","type":"text"}],"url":"\/documentation\/vernissageserver\/builddocumentation","type":"topic","role":"article","kind":"article"},"https://hub.docker.com/r/minio/minio":{"type":"link","titleInlineContent":[{"text":"https:\/\/hub.docker.com\/r\/minio\/minio","type":"text"}],"url":"https:\/\/hub.docker.com\/r\/minio\/minio","identifier":"https:\/\/hub.docker.com\/r\/minio\/minio","title":"https:\/\/hub.docker.com\/r\/minio\/minio"},"host-web-card.jpg":{"identifier":"host-web-card.jpg","variants":[{"traits":["2x","light"],"url":"\/images\/host-web-card@2x.jpg"}],"type":"image","alt":"The profile image for web documentation."},"https://vapor.codes":{"type":"link","titleInlineContent":[{"text":"Vapor","type":"text"}],"url":"https:\/\/vapor.codes","identifier":"https:\/\/vapor.codes","title":"Vapor"},"https://min.io":{"identifier":"https:\/\/min.io","url":"https:\/\/min.io","type":"link","title":"minio","titleInlineContent":[{"text":"minio","type":"text"}]}}}