{"kind":"article","abstract":[{"type":"text","text":"This documentation describes how to run Vernissage in your custom Docker container hosting provider using "},{"code":"docker compose","type":"codeVoice"},{"type":"text","text":"."}],"seeAlsoSections":[{"generated":true,"title":"Essentials","identifiers":["doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb","doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"],"anchor":"Essentials"}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The configuration consists of a ","type":"text"},{"inlineContent":[{"text":"docker-compose.yml","type":"text"}],"type":"emphasis"},{"text":" and a ","type":"text"},{"inlineContent":[{"type":"text","text":".env"}],"type":"emphasis"},{"type":"text","text":" file."}]},{"text":"Installation","type":"heading","anchor":"Installation","level":2},{"anchor":"docker-compose","type":"heading","text":"docker compose","level":3},{"inlineContent":[{"text":"First install docker and docker compose. On Debian based systems:","type":"text"}],"type":"paragraph"},{"code":["apt update","apt install docker.io docker-compose-v2"],"type":"codeListing","syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Package names may vary, please refer to the documentation of your distribution."}]},{"text":"HOME","anchor":"HOME","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then create an empty directory of your choosing, e.g. "},{"type":"codeVoice","code":"\/opt\/vernissage"},{"type":"text","text":". This directory is the home of your deployment and holds both the configuration files described below. This document will use the name "},{"type":"strong","inlineContent":[{"type":"text","text":"HOME"}]},{"text":" to refer to this directory.","type":"text"}]},{"anchor":"docker-composeyml","type":"heading","text":"docker-compose.yml","level":3},{"inlineContent":[{"type":"text","text":"This docker compose configuration sets up all Vernissage containers. It uses environment variables defined in "},{"inlineContent":[{"text":".env","type":"text"}],"type":"emphasis"},{"type":"text","text":". Please see "},{"type":"emphasis","inlineContent":[{"text":".env","type":"text"}]},{"type":"text","text":" below."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In a standard deployment little to no changes to this docker compose configuration are necessary."}]},{"type":"paragraph","inlineContent":[{"text":"Also included is a standard ","type":"text"},{"code":"redis-server","type":"codeVoice"},{"type":"text","text":" container. Beyond that a "},{"type":"strong","inlineContent":[{"text":"PostgreSQL","type":"text"}]},{"type":"text","text":" database and "},{"inlineContent":[{"type":"text","text":"S3"}],"type":"strong"},{"text":" storage are needed, which are not part of this docker compose configuration.","type":"text"}]},{"inlineContent":[{"text":"Copy all of the following to ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"HOME"}]},{"code":"\/docker-compose.yml","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["services:","  api:","    image: mczachurski\/vernissage-server:${DOCKER_TAG:-latest}","    restart: always","    healthcheck:","      test: curl --output \/dev\/null --silent --head --fail http:\/\/host.docker.internal:8080","      interval: 5s","    env_file: \".env\"","    logging: &log-syslog","      driver: syslog","      options:","        tag: \"{{.Name}}\"","    depends_on:","      redis:","        condition: service_healthy","    networks:","      ip6net:","        aliases:","          - vernissage-api.internal","          - host.docker.internal","","  web:","    image: mczachurski\/vernissage-web:${DOCKER_TAG:-latest}","    restart: always","    env_file: \".env\"","    depends_on:","      api:","        condition: service_started","    logging: *log-syslog","    networks:","      ip6net:","        aliases:","          - vernissage-web.internal","          - host.docker.internal","","  proxy:","    image: mczachurski\/vernissage-proxy:${DOCKER_TAG:-latest}","    restart: always","    ports:","      - \"${EXPOSED_PORT:-8080}:8080\"","    logging: *log-syslog","    depends_on:","      web:","        condition: service_started","    networks:","      ip6net:","        aliases:","          - vernissage-proxy.internal","          - host.docker.internal","","  push:","    image: mczachurski\/vernissage-push:${DOCKER_TAG:-latest}","    restart: always","    healthcheck: ","      test: curl --output \/dev\/null --silent --head --fail http:\/\/host.docker.internal:3000","      interval: 5s","    env_file: \".env\"","    logging: *log-syslog","    depends_on:","      api:","        condition: service_started","    networks:","      ip6net:","        aliases:","          - vernissage-push.internal","          - host.docker.internal","    ","  redis:","    image: redis","    restart: always","    healthcheck:","      test: redis-cli ping | grep PONG","      interval: 1s","      timeout: 3s","      retries: 5","    command: redis-server","    logging: *log-syslog","    networks:","      ip6net:","        aliases:","          - vernissage-redis.internal","          - host.docker.internal","","networks:","   ip6net:","     enable_ipv6: true","     ipam:","       config:","         - subnet: ${IPV6_SUBNET:-2001:db8::\/64}"]},{"anchor":"env","level":3,"text":".env","type":"heading"},{"inlineContent":[{"text":"This is the environment configuration for Vernissage.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The passwords below are examples. Please "},{"type":"strong","inlineContent":[{"text":"do not adopt these in your installation","type":"text"}]},{"type":"text","text":", but generate your own."}]},{"inlineContent":[{"type":"text","text":"Copy all of the following to "},{"inlineContent":[{"type":"text","text":"HOME"}],"type":"strong"},{"type":"codeVoice","code":"\/.env"},{"text":":","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["########################################################################","# SERVER","","# the address under which your Vernissage server is accessible on the internet","VERNISSAGE_BASEADDRESS=https:\/\/vernissage.example.com","","# connection string to your postgres database","# in the format postgres:\/\/user:password@host:port\/database","# if omited Vernissage creates a local sqlite database (not recommended)","VERNISSAGE_CONNECTIONSTRING=postgres:\/\/vernissage-user:P4s5w0rdXaXi93EJF1XaBH8b7yhLQMm7nBzfozh@host:5432\/vernissage-db","","# api url to your S3 storage","# if omited Vernissage uses a local storage directory (not recommended)","VERNISSAGE_S3ADDRESS=https:\/\/minio.example.com","","# region of your S3 bucket in Amazon AWS","# if set VERNISSAGE_S3ADDRESS is overwritten to connect to Amazon AWS","# VERNISSAGE_S3REGION=","","# name of your S3 bucket","VERNISSAGE_S3BUCKET=vernissage","","# accesskey and secret to your S3 storage","VERNISSAGE_S3ACCESSKEYID=AcC3s5k3yXDqIV3t6wXF","VERNISSAGE_S3SECRETACCESSKEY=53cR3tXHuhiSoY7bXxbfTbKJS2vdKmlT6vs3kFdb","","# connection string to your redis server","# no need to change if the preconfigured redis from docker-compose.yml is used","VERNISSAGE_QUEUEURL=redis:\/\/vernissage-redis.internal:6379","","# set to debug to increase the log output","#LOG_LEVEL=debug","","","########################################################################","# WEB","","# adress to add to the Content-Security-Policy-headers to access files","# on your S3 storage. Normaly the same as VERNISSAGE_S3ADDRESS","VERNISSAGE_CSP_IMG=https:\/\/minio.example.com","","","########################################################################","# PROXY","","# exposed port under which the proxy will be accessible. mostly used for","# a nginx reverse proxy configuration on the host. default: 8080","#EXPOSED_PORT=8080","","","########################################################################","# PUSH","","# random, password like string","# must be the same as in \"WebPush service secret key\" from \/settings","VPUSH_KEY=vPu5h_K3yX3673hg627JZW72HD6738bz76HDE73JEzbhzFGIB75zgR5","","","########################################################################","# GLOBAL","","# tag (\"version\") of docker containers to use. defaults to \"latest\"","# `docker compose pull` after changing this value","#DOCKER_TAG=latest","","# subnet for internaly used IPv6 adresses","# defaults to 2001:db8::\/64","#IPV6_SUBNET=2001:db8::\/64"]},{"inlineContent":[{"inlineContent":[{"text":"Important:","type":"text"}],"type":"strong"},{"type":"text","text":" Donâ€™t forget to "},{"type":"codeVoice","code":"chmod 600 .env"},{"type":"text","text":" to protect the passwords herein."}],"type":"paragraph"},{"type":"heading","text":"Running your deployment","level":2,"anchor":"Running-your-deployment"},{"inlineContent":[{"type":"text","text":"To startup Vernissage you need only run the "},{"type":"codeVoice","code":"docker compose up -d"},{"type":"text","text":" command from "},{"inlineContent":[{"text":"HOME","type":"text"}],"type":"strong"}],"type":"paragraph"},{"code":["cd HOME","docker compose up -d"],"type":"codeListing","syntax":null},{"level":2,"text":"Other useful commands","anchor":"Other-useful-commands","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Always ","type":"text"},{"type":"codeVoice","code":"cd HOME"},{"type":"text","text":" before issuing one of the following commands"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Shutdown Vernissage: "},{"code":"docker compose down","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Restart Vernissage: "},{"code":"docker compose down && docker compose up -d","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Force update and restart: "},{"code":"docker compose down && docker compose pull && docker compose up -d","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Quick status: "},{"type":"codeVoice","code":"docker ps --format '{{.Names}}\\t{{.Status}}' | grep $(basename $(pwd))-"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"View the running logs: "},{"type":"codeVoice","code":"docker compose logs -f"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The containers also log to your syslog daemon"}]},{"level":2,"text":"Additional notes","anchor":"Additional-notes","type":"heading"},{"anchor":"systemd-configuration","type":"heading","text":"systemd configuration","level":3},{"type":"paragraph","inlineContent":[{"text":"The containers are configured with ","type":"text"},{"code":"restart: always","type":"codeVoice"},{"text":". This also ensures that they are restarted during a reboot and you donâ€™t need to install a systemd service file for that purpose.","type":"text"}]},{"type":"heading","level":3,"text":"Using local storage","anchor":"Using-local-storage"},{"inlineContent":[{"type":"text","text":"We strongly encourage you to use S3 storage instead of local storage. It is indeed possible to use local storage (a directory), but additional configuration is needed. Your reverse proxy would need to expose the local storage to the internet. As of now some Vernissage processes rely on the use of S3 storage. Local storage should only be used for testing purposes."}],"type":"paragraph"},{"text":"reverse proxy configuration","type":"heading","level":3,"anchor":"reverse-proxy-configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You may need to reverse proxy to Vernissage on the host system. The configuration of a reverse proxy goes beyond the purpose of this documentation, but hereâ€™s a snippet you may find useful to configure "},{"inlineContent":[{"text":"nginx","type":"text"}],"type":"strong"},{"type":"text","text":":"}]},{"type":"codeListing","code":["server {","    listen 443 ssl;","    listen [::]:443 ssl;","","    server_name vernissage.example.com;","    ","    location \/ {","        # change 8080 to the EXPOSED_PORT from .env","        proxy_pass http:\/\/127.0.0.1:8080; ","        ","        proxy_set_header X-Forwarded-For $remote_addr;","        proxy_set_header Host $host;","        proxy_set_header Upgrade $http_upgrade;","        proxy_set_header Connection \"upgrade\";","        proxy_pass_request_headers on;","        ","        proxy_cache_bypass $http_upgrade;","    }","    # change to the desired max image filesize","    # \"Maximum file size\" in \/settings mustn't be bigger than this value","    client_max_body_size 40M;","","    ssl_certificate ...     # certbot can help with that","    ssl_certificate_key ... # certbot can help with that","}"],"syntax":null}],"kind":"content"}],"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/DockerContainers","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/vernissageserver\/dockercontainers"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer"]]},"sections":[],"metadata":{"title":"Hosting Vernissage in Docker containers","roleHeading":"Article","role":"article","modules":[{"name":"VernissageServer"}]},"references":{"doc://VernissageServer/documentation/VernissageServer":{"url":"\/documentation\/vernissageserver","type":"topic","role":"collection","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer/BuildDocumentation":{"title":"Build the documentation","role":"article","abstract":[{"text":"This documentation is created by DocC tool.","type":"text"}],"type":"topic","url":"\/documentation\/vernissageserver\/builddocumentation","kind":"article","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/BuildDocumentation"},"host-web-card.jpg":{"variants":[{"traits":["2x","light"],"url":"\/images\/VernissageServer\/host-web-card@2x.jpg"}],"type":"image","identifier":"host-web-card.jpg","alt":"The profile image for web documentation."},"host-server-card.jpg":{"variants":[{"url":"\/images\/VernissageServer\/host-server-card@2x.jpg","traits":["2x","light"]}],"type":"image","identifier":"host-server-card.jpg","alt":"The profile image for server documentation."},"doc://VernissageServer/documentation/VernissageServer/HostVernissageServer":{"images":[{"type":"card","identifier":"host-server-card.jpg"}],"url":"\/documentation\/vernissageserver\/hostvernissageserver","kind":"article","type":"topic","abstract":[{"text":"Application which is main API component for Vernissage photos sharing platform.","type":"text"}],"title":"Host Vernissage Server (API)","role":"article","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageServer"},"doc://VernissageServer/documentation/VernissageServer/HostVernissageWeb":{"title":"Host Vernissage WEB","role":"article","abstract":[{"type":"text","text":"Application which is Web component for Vernissage photos sharing platform."}],"images":[{"type":"card","identifier":"host-web-card.jpg"}],"url":"\/documentation\/vernissageserver\/hostvernissageweb","kind":"article","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/HostVernissageWeb"}}}