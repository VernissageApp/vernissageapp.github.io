{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController\/refresh(request:)"},"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController"]]},"variants":[{"paths":["\/documentation\/vernissageserver\/accountcontroller\/refresh(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC","text":"Request"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The Vapor request to the endpoint ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RefreshTokenDto"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"request"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"inlineContent":[{"text":"User’s access tokens.","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Endpoint will regenerate new ","type":"text"},{"code":"accessToken","type":"codeVoice"},{"text":" based on ","type":"text"},{"code":"refreshToken","type":"codeVoice"},{"type":"text","text":" which has been generated during the login process."},{"type":"text","text":" "},{"text":"This is the only endpoint to which the ","type":"text"},{"type":"codeVoice","code":"refreshToken"},{"text":" should be sent, only when the ","type":"text"},{"code":"accessToken","type":"codeVoice"},{"type":"text","text":" expires (or a moment before it expires)."},{"text":" ","type":"text"},{"text":"Refresh token can be send in the ","type":"text"},{"type":"reference","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RefreshTokenDto","isActive":true},{"type":"text","text":" object or in the "},{"code":"refresh-token","type":"codeVoice"},{"type":"text","text":" cookie. When request doesn’t contain"},{"type":"text","text":" "},{"type":"text","text":"refresh token (in body or cookie) "},{"type":"codeVoice","code":"NoContent"},{"type":"text","text":" response is produced."}]},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Endpoint URL: "},{"type":"codeVoice","code":"\/api\/v1\/account\/refresh-token"},{"type":"text","text":"."}]}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"CURL request:","type":"text"}],"type":"strong"}]},{"type":"codeListing","syntax":"bash","code":["curl \"https:\/\/example.com\/api\/v1\/account\/refresh-token\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example request body:"}],"type":"strong"}],"type":"paragraph"},{"syntax":"json","code":["{","    \"refreshToken\": \"8v4JbrTeboHsD5T24WdhkkHgVx3UQ2F2FQaZd3sT0\"","}"],"type":"codeListing"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body:"}],"type":"strong"}],"type":"paragraph"},{"syntax":"json","code":["{","    \"accessToken\": \"eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJyb2xlcyI6W10sInVzZXJOYW1lIjoibmlja2Z...\",","    \"refreshToken\": \"8v4JbrTeboHsD5T24WdhkkHgVx3UQ2F2FQaZd3sT0\"","}"],"type":"codeListing"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"EntityNotFoundError.refreshTokenNotFound","type":"codeVoice"},{"text":" if refresh token not exists.","type":"text"}]}],"name":"Throws","type":"aside"},{"type":"aside","style":"note","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RefreshTokenError.refreshTokenRevoked"},{"type":"text","text":" if refresh token was revoked."}]}]},{"type":"aside","name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RefreshTokenError.refreshTokenExpired"},{"type":"text","text":" if refresh token was expired."}]}],"style":"note"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"LoginError.userAccountIsBlocked"},{"text":" if user account is blocked.","type":"text"}],"type":"paragraph"}],"name":"Throws","style":"note","type":"aside"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Method","externalID":"s:16VernissageServer17AccountControllerC7refresh7request5Vapor8ResponseCAF7RequestC_tYaKF","title":"refresh(request:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","text":"Request","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"modules":[{"name":"VernissageServer"}],"symbolKind":"method","role":"symbol"},"abstract":[{"type":"text","text":"Refresh "},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" token by sending "},{"type":"codeVoice","code":"refreshToken"},{"type":"text","text":"."}],"kind":"symbol","sections":[],"references":{"doc://VernissageServer/documentation/VernissageServer/AccountController/refresh(request:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"refresh","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"title":"refresh(request:)","kind":"symbol","url":"\/documentation\/vernissageserver\/accountcontroller\/refresh(request:)","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController\/refresh(request:)","abstract":[{"text":"Refresh ","type":"text"},{"type":"codeVoice","code":"accessToken"},{"type":"text","text":" token by sending "},{"type":"codeVoice","code":"refreshToken"},{"text":".","type":"text"}],"role":"symbol"},"doc://VernissageServer/documentation/VernissageServer/RefreshTokenDto":{"role":"symbol","title":"RefreshTokenDto","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"RefreshTokenDto","kind":"identifier"}],"url":"\/documentation\/vernissageserver\/refreshtokendto","kind":"symbol","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RefreshTokenDto","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"RefreshTokenDto"}]},"doc://VernissageServer/documentation/VernissageServer":{"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","title":"VernissageServer","type":"topic","kind":"symbol","url":"\/documentation\/vernissageserver","role":"collection"},"doc://VernissageServer/documentation/VernissageServer/AccountController":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"AccountController","kind":"identifier"}],"type":"topic","abstract":[{"text":"Controller for generic account operation.","type":"text"}],"navigatorTitle":[{"text":"AccountController","kind":"identifier"}],"role":"symbol","title":"AccountController","kind":"symbol","url":"\/documentation\/vernissageserver\/accountcontroller","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/AccountController"}}}