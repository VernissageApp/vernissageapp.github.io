{"identifier":{"url":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Register new user."}],"metadata":{"title":"newUser(request:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"newUser","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5Vapor8ResponseC","text":"Response","kind":"typeIdentifier"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","externalID":"s:16VernissageServer18RegisterControllerC7newUser7request5Vapor8ResponseCAF7RequestC_tYaKF","modules":[{"name":"VernissageServer"}]},"variants":[{"paths":["\/documentation\/vernissageserver\/registercontroller\/newuser(request:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5Vapor8ResponseC","text":"Response"}],"languages":["swift"]}]},{"parameters":[{"name":"request","content":[{"inlineContent":[{"type":"text","text":"The Vapor request to the endpoint "},{"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity "},{"type":"reference","isActive":true,"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto"},{"type":"text","text":" with new generated "},{"code":"id","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"Create a new user account in the system. After registration, the user can use the system, but until he confirms his e-mail address,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"access is limited. For example, the user cannot add new statuses. It is also recommended to configure "},{"code":"reCaptcha","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"which will prevent bots from creating accounts."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"During account creation process server will send to the user inbox email with information how to confirm his email address.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"In the email there will be link with address to the client application (from "},{"type":"codeVoice","code":"redirectBaseUrl"},{"type":"text","text":"). Client application should"},{"text":" ","type":"text"},{"text":"serve the page will can retrieve two parameters:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"token"},{"text":" - string, GUID","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"userId"},{"type":"text","text":" - new user identifier"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Client application have to read that parameters and use endpoint ","type":"text"},{"type":"codeVoice","code":"POST \/api\/v1\/account\/email\/confirm"},{"type":"text","text":" to confirm the email."}],"type":"paragraph"},{"name":"Important","content":[{"inlineContent":[{"text":"Endpoint URL: ","type":"text"},{"type":"codeVoice","code":"\/api\/v1\/account\/register"},{"text":".","type":"text"}],"type":"paragraph"}],"style":"important","type":"aside"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"CURL request:"}],"type":"strong"}]},{"code":["curl \"https:\/\/example.com\/api\/v1\/register\" \\","-X POST \\","-H \"Content-Type: application\/json\" \\","-d '{ ... }'"],"type":"codeListing","syntax":"bash"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Example request body:","type":"text"}],"type":"strong"}]},{"syntax":"json","code":["{","    \"userName\": \"johndoe\",","    \"email\": \"johndoe@email.com\",","    \"password\": \"P@ssword1!\",","    \"redirectBaseUrl\": \"https:\/\/example.com\",","    \"agreement\": true,","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"securityToken\": \"435nkerguh8734bwbrg\",","    \"locale\": \"en_US\",","    \"reason\": \"I would like to share with you my photos...\",","    \"inviteToken\": \"34egdfert9fyg7d8fbt9sd\"","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example response body (200 OK):","type":"text"}]}]},{"syntax":"json","type":"codeListing","code":["{","    \"id\": \"7243149752689283073\",","    \"userName\": \"johndoe\",","    \"account\": \"johndoe@example.com\",","    \"email\": \"johndoe@email.com\",","    \"name\": \"John Doe\",","    \"bio\": \"I'm a photographer...\",","    \"avatarUrl\": \"https:\/\/example.com\/storage\/454kwffvsr453sdfsd2345wevsdf.jpg\"","}"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example response body (field validation):"}]}],"type":"paragraph"},{"syntax":"json","type":"codeListing","code":["{","    \"code\": \"validationError\",","    \"reason\": \"Validation errors occurs.\",","    \"failures\": [","        {","            \"field\": \"email\",","            \"failure\": \"is not a valid email address\"","        },","        {","            \"field\": \"redirectBaseUrl\",","            \"failure\": \"is an invalid URL\"","        }","    ],","    \"error\": true","}"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example response body (business logic validation):"}],"type":"strong"}],"type":"paragraph"},{"type":"codeListing","syntax":"json","code":["{","    \"code\": \"userNameIsAlreadyTaken\",","    \"reason\": \"User with provided user name already exists in the system.\"","}"]},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"Validation.validationError","type":"codeVoice"},{"text":" if validation errors occurs.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.securityTokenIsMandatory"},{"type":"text","text":" if security token is mandatory (it should be provided from Google reCaptcha)."}]}],"name":"Throws","style":"note","type":"aside"},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.securityTokenIsInvalid"},{"type":"text","text":" if security token is invalid (Google reCaptcha API returned that information)."}]}]},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.userNameIsAlreadyTaken","type":"codeVoice"},{"type":"text","text":" if user with provided user name already exists in the system."}]}],"type":"aside","style":"note"},{"type":"aside","name":"Throws","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.emailIsAlreadyConnected"},{"type":"text","text":" if email is already connected with other account."}],"type":"paragraph"}],"style":"note"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.missingEmail","type":"codeVoice"},{"type":"text","text":" if email has not been specified but itâ€™s mandatory."}],"type":"paragraph"}],"name":"Throws"},{"name":"Throws","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.missingEmailConfirmationGuid"},{"type":"text","text":"if email confirmation guid has not been generated."}],"type":"paragraph"}]},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"RegisterError.registrationIsDisabled","type":"codeVoice"},{"text":"if registration is disabled.","type":"text"}]}]},{"type":"aside","name":"Throws","style":"note","content":[{"inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"RegisterError.userHaveToAcceptAgreement"},{"type":"text","text":" if user have to accept agreement."}],"type":"paragraph"}]},{"name":"Throws","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.reasonIsMandatory"},{"type":"text","text":" if reason is mandatory when only registration by approval is enabled."}]}],"type":"aside","style":"note"},{"type":"aside","name":"Throws","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenIsInvalid","type":"codeVoice"},{"text":" if invitation token is invalid.","type":"text"}]}]},{"style":"note","name":"Throws","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"RegisterError.invitationTokenHasBeenUsed","type":"codeVoice"},{"text":" if invitation token has been used.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"RegisterError.userIdNotExists"},{"type":"text","text":" if user Id not exists. Probably saving of the user entity failed."}]}],"style":"note","type":"aside","name":"Throws"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/VernissageServer\/documentation\/VernissageServer","doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController"]]},"sections":[],"references":{"doc://VernissageServer/documentation/VernissageServer/RegisterController":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegisterController","kind":"identifier"}],"identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController","navigatorTitle":[{"kind":"identifier","text":"RegisterController"}],"url":"\/documentation\/vernissageserver\/registercontroller","type":"topic","role":"symbol","title":"RegisterController","abstract":[{"text":"Controller for adding new user into the system.","type":"text"}],"kind":"symbol"},"doc://VernissageServer/documentation/VernissageServer":{"abstract":[{"type":"text","text":"Application which is main API component for Vernissage photos sharing platform."}],"title":"VernissageServer","url":"\/documentation\/vernissageserver","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer","kind":"symbol","type":"topic","role":"collection"},"doc://VernissageServer/documentation/VernissageServer/RegisterController/newUser(request:)":{"title":"newUser(request:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"newUser"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5Vapor7RequestC","kind":"typeIdentifier","text":"Request"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Response","preciseIdentifier":"s:5Vapor8ResponseC"}],"url":"\/documentation\/vernissageserver\/registercontroller\/newuser(request:)","abstract":[{"text":"Register new user.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterController\/newUser(request:)","role":"symbol","type":"topic"},"doc://VernissageServer/documentation/VernissageServer/RegisterUserDto":{"navigatorTitle":[{"kind":"identifier","text":"RegisterUserDto"}],"kind":"symbol","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/RegisterUserDto","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegisterUserDto","kind":"identifier"}],"title":"RegisterUserDto","type":"topic","url":"\/documentation\/vernissageserver\/registeruserdto","abstract":[]},"doc://VernissageServer/documentation/VernissageServer/UserDto":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserDto"}],"title":"UserDto","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UserDto"}],"abstract":[],"role":"symbol","type":"topic","identifier":"doc:\/\/VernissageServer\/documentation\/VernissageServer\/UserDto","url":"\/documentation\/vernissageserver\/userdto"}}}